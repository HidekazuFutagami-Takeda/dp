## (医)組織別計画編集画面
#set($pageTitle = $text.get("dpm100C00","title"))
#set($bodyOnloadMethod  = "dpm100C00F00()")
#set($dataListFileName  = "dpm100C00x01.vm")
#set($dataListFileName2 = "dpm100C00x02.vm")
## 検索結果
#if($form.getRequestData("DPM100C00_DATA_R_SEARCH_RESULT"))
    #set($resultDetail = $form.getRequestData("DPM100C00_DATA_R_SEARCH_RESULT").detailList)
#end

## 計画
#set($planId = $form.bean.planId)
## 計画レベル:組織別では選択された組織の下位組織計画を表示するので、立案レベルも１つ下を使用する
#if ($form.bean.sosCd4)
    #set($planLevel = "DPM100C00_PLANLEVEL_MR")
#elseif ($form.bean.sosCd3 && $form.bean.oncSosFlg == true)
    #set($planLevel = "DPM100C00_PLANLEVEL_MR")
#elseif ($form.bean.sosCd3 && $form.bean.oncSosFlg == false)
    #set($planLevel = "DPM100C00_PLANLEVEL_TEAM")
#elseif ($form.bean.sosCd2)
    #set($planLevel = "DPM100C00_PLANLEVEL_OFFICE")
#else
    #set($planLevel = "DPM100C00_PLANLEVEL_SITEN")
#end
## 品目リスト
#set($vaccineCode = $service.getVaccineCode())
#if($form.bean.prodCategory == "$vaccineCode")
  #set($prodList = $service.getManageVaccineProdList($!form.bean.prodCategory, $form.getField("$planLevel"),false))
#else
  #set($prodList = $service.getManageIyakuProdList($!form.bean.prodCategory, $form.getField("$planLevel"),false))
#end

## 品目名
#set($prodName = "")
#if($form.bean.prodCode)
#foreach($codeAndValue in $prodList)
    #if($codeAndValue.code == $form.bean.prodCode)
        #set($prodName = "$codeAndValue.value")
    #end
#end
#end
## 実施計画区分
#set($plannedType = $security.getPlannedType().toString())
#set($plannedTypeStr = "")
#if ($plannedType == "PLANNED_1")
    #set($plannedTypeStr = "実施計画１")
#elseif ($plannedType == "PLANNED_2")
    #set($plannedTypeStr = "実施計画２")
#end

## ヘッダータイトル
#set($titleUH = $form.bean.titleUH)
#set($titleP = $form.bean.titleP)
#set($titleZ = $form.bean.titleZ)

<script language="javascript">
<!--
document.getElementById("closeWindow").value = "true";

## 明細行グリッド
#set($CoverId1 = "dpm100C00CoverId1")
#set($GridObjName1 = "dpm100C00Grid1")
#set($gridHeight = $text.get("${GridObjName1}","grid"))
var ${GridObjName1};
## 集計行グリッド
#set($CoverId2 = "dpm100C00CoverId2")
#set($GridObjName2 = "dpm100C00Grid2")
var ${GridObjName2};
## 編集検知フラグ
var editFlg = false;

## 初期表示
function dpm100C00F00() {
    doInitGrid1(); ## 明細行
    doInitGrid2(); ## 集計行
    ## 明細行のデータ読み込み
    if (document.getElementById("$dataListFileName")) {
        var loadXMLString = document.getElementById("$dataListFileName").value;
        if (loadXMLString != null && loadXMLString != "") {
            ${GridObjName1}.loadXMLString(loadXMLString);
            for (rowId = 1; rowId <= ${GridObjName1}.getRowsNum(); rowId++) {
                ## 合計列の計算処理
                doCalcSumCol(${GridObjName1}, rowId);
                ## 調整金額の計算処理
                doCalcTuneValue(${GridObjName1}, rowId, 2);
                doCalcTuneValue(${GridObjName1}, rowId, 4);
                doCalcTuneValue(${GridObjName1}, rowId, 6);
                ## 調整金額の合計処理
                doCalcTuneSumCol(${GridObjName1}, rowId);
                ## セルスタイルの設定処理
                setCellStyle(${GridObjName1}, rowId, new Array("2","4","6","8"));
            }
        }
    }
    ## 集計行のデータ読み込み
    if (document.getElementById("$dataListFileName2")) {
        var loadXMLString = document.getElementById("$dataListFileName2").value;
        if (loadXMLString != null && loadXMLString != "") {
            ${GridObjName2}.loadXMLString(loadXMLString);
            ## 合計列の計算処理
            doCalcSumCol(${GridObjName2}, 1);
            ## 計算行の再計算処理
            doCalcFormulaRow(2);
            doCalcFormulaRow(4);
            doCalcFormulaRow(6);
            doCalcFormulaRow(8);
            ## セルスタイルの設定処理
            setCellStyle(${GridObjName2}, 1, new Array("2","4","6","8"));
        }
    }
}

## DHTMLXGrid生成(明細行)
function doInitGrid1() {
    #if($resultDetail)
        ${GridObjName1} = createDhtmlXGridLodingExt("${GridObjName1}", "${CoverId1}");
    #else
        ${GridObjName1} = createDhtmlXGrid("${GridObjName1}");
    #end
    ${GridObjName1}.setHeader(",,,,,,,,");
    ${GridObjName1}.setInitWidths("300,90,90,90,90,90,90,90,90");
    ${GridObjName1}.setColAlign("left,right,right,right,right,right,right,right,right");
    ${GridObjName1}.setColTypes("ro,ron,ron,ron,ron,ron,ron,ron,ron");
    ${GridObjName1}.enableResizing("false,false,false,false,false,false,false,false,false");
    ${GridObjName1}.enableTooltips("false,false,false,false,false,false,false,false,false");
    ${GridObjName1}.enableDistributedParsing(true,50,300);
    ${GridObjName1}.enableAutoHeight(true, getGridHeight('dpm100C00', $!gridHeight));
    ${GridObjName1}.enableBlockSelection();
    ${GridObjName1}.forceLabelSelection(true);
    ${GridObjName1}.setCSVDelimiter("\t");
    ${GridObjName1}.setNumberFormat("0,000",1);
    ${GridObjName1}.setNumberFormat("0,000",2);
    ${GridObjName1}.setNumberFormat("0,000",3);
    ${GridObjName1}.setNumberFormat("0,000",4);
    ${GridObjName1}.setNumberFormat("0,000",5);
    ${GridObjName1}.setNumberFormat("0,000",6);
    ${GridObjName1}.setNumberFormat("0,000",7);
    ${GridObjName1}.setNumberFormat("0,000",8);
    ${GridObjName1}.setSizes();
    ${GridObjName1}.setNoHeader(true);
    ${GridObjName1}.init();
    ${GridObjName1}.enableEditEvents(true, false, true);
    ##  --- 編集中に登録ボタンが押された場合のチェッカー
    window.editValueChecker = new EditingValueChecker(${GridObjName1},'$text.get("DPC1036E",[""])' );

    ${GridObjName1}.attachEvent("onEditCell",function(stage,rowId,colId,newvalue,oldvalue){
		## --- 編集中に登録ボタンが押された場合のチェック用に値とstageを保持 ---
		window.editValueChecker.saveState(stage,newvalue);

        if(stage == 1){
            setIme(${GridObjName1},rowId,colId,"inactive",10);
        }
        if(stage == 2){
            if(newvalue.toString() != oldvalue.toString()){
                intCheck(${GridObjName1},rowId,colId,newvalue);
                ##doCalcTBaseValue(${GridObjName1}, rowId, colId);
                doCalcTuneValue(${GridObjName1}, rowId, colId);
                doCalcFormulaRow(colId);
                doCalcSumCol(${GridObjName1}, rowId);
                doCalcTuneSumCol(${GridObjName1}, rowId);
                doCalcFormulaRow(8);
                setCellStyle(${GridObjName1}, rowId, new Array(colId, "8"));
                editFlg = true;
            }
        }
        return true;
    });
    ${GridObjName1}.attachEvent("onRowSelect",function(rowId,colId){
        ${GridObjName1}.editCell();
    });
    ${GridObjName1}.attachEvent("onKeyPress",function(keycode,ctrl,shift){
        if(!(currentCellMove(${GridObjName1},keycode))){return false;}
        ## ペースト処理時
        copyBlock(${GridObjName1}, keycode, ctrl, shift, new Array("2","4","6"));
        if (keycode == 86 && ctrl) {
            ## 行・列のインデックス指定が不可のため全インデックスで処理実行
            doCalcFormulaRow(2);
            doCalcFormulaRow(4);
            doCalcFormulaRow(6);
            doCalcFormulaRow(8);
            for (rowId = 1; rowId <= ${GridObjName1}.getRowsNum(); rowId++) {
                ## T価ベースの計算処理
                ##doCalcTBaseValue(${GridObjName1}, rowId, 2);
                ##doCalcTBaseValue(${GridObjName1}, rowId, 5);
                ## 調整金額の計算処理
                doCalcTuneValue(${GridObjName1}, rowId, 2);
                doCalcTuneValue(${GridObjName1}, rowId, 4);
                doCalcTuneValue(${GridObjName1}, rowId, 6);
                ## 合計列の計算処理
                doCalcSumCol(${GridObjName1}, rowId);
                doCalcTuneSumCol(${GridObjName1}, rowId);
                ## セルスタイルの設定処理
                setCellStyle(${GridObjName1}, rowId, new Array("8"));
            }
            editFlg = true;
        }
        return true;
    });
    ${GridObjName1}.attachEvent("onMouseOver",function(rowId,columnId){
        var title = "";
        if(${GridObjName1}.getUserData(rowId,"rowType") == "input"){
            if(columnId == 2){
                title = ${GridObjName1}.getUserData(rowId,"toolTipUH");
            }else if(columnId == 4){
                title = ${GridObjName1}.getUserData(rowId,"toolTipP");
            }else if(columnId == 6){
                title = ${GridObjName1}.getUserData(rowId,"toolTipZ");
            }
            if(title == null){
                title = "";
            }
            ${GridObjName1}.cells(rowId,columnId).cell.title = title;
        }
    });
}

## DHTMLXGrid生成(集計行)
function doInitGrid2() {
    #if($resultDetail)
        ${GridObjName2} = createDhtmlXGridLodingExt("${GridObjName2}", "${CoverId2}");
    #else
        ${GridObjName2} = createDhtmlXGrid("${GridObjName2}");
    #end
    var prodCategory = document.getElementById('prodCategory').value;
    var baseName = 'Y価ベース';
    var zName = '';
    if (prodCategory == "$vaccineCode"){
    	baseName = 'B価ベース';
    	zName = 'ワクチン';
    }
    ## チーム選択時
    #if ($form.bean.sosCd4)
        sosApply("$form.bean.sosCd4", "", "03","$form.bean.etcSosFlg");
        ${GridObjName2}.setHeader("担当者計画　$!plannedTypeStr　$prodName,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan");
        ${GridObjName2}.attachHeader("組織・担当名称,$titleUH,#cspan,$titleP,#cspan,$titleZ,#cspan,合計,#cspan");
        ${GridObjName2}.attachHeader("#rspan,担当者調整," + baseName + ",担当者調整," + baseName + ",担当者調整," + baseName + ",担当者調整," + baseName);
    ## 営業所選択時（ONC）
    #elseif ($form.bean.sosCd3 && $form.bean.oncSosFlg == true)
        sosApply("$form.bean.sosCd3", "", "03","$form.bean.etcSosFlg");
        ${GridObjName2}.setHeader("担当者計画　$!plannedTypeStr　$prodName,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan");
        ${GridObjName2}.attachHeader("組織・担当名称,$titleUH,#cspan,$titleP,#cspan,$titleZ,#cspan,合計,#cspan");
        ${GridObjName2}.attachHeader("#rspan,担当者調整," + baseName + ",担当者調整," + baseName + ",担当者調整," + baseName + ",担当者調整," + baseName);
    ## 営業所選択時（ONC以外）
    #elseif ($form.bean.sosCd3 && $form.bean.oncSosFlg == false)
        sosApply("$form.bean.sosCd3", "", "03","$form.bean.etcSosFlg");
        ${GridObjName2}.setHeader("チーム計画　$!plannedTypeStr　$prodName,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan");
        ${GridObjName2}.attachHeader("組織・担当名称,$titleUH,#cspan,$titleP,#cspan,$titleZ,#cspan,合計,#cspan");
        ${GridObjName2}.attachHeader("#rspan,チーム調整," + baseName + ",チーム調整," + baseName + ",チーム調整," + baseName + ",チーム調整," + baseName);
    ## 支店選択時
    #elseif ($form.bean.sosCd2)
        sosApply("$form.bean.sosCd2", "", "03","$form.bean.etcSosFlg");
        ${GridObjName2}.setHeader("エリア計画　$!plannedTypeStr　$prodName,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan");
        ${GridObjName2}.attachHeader("組織・担当名称,$titleUH,#cspan,$titleP,#cspan,$titleZ,#cspan,合計,#cspan");
        ${GridObjName2}.attachHeader("#rspan,エリア調整," + baseName + ",エリア調整," + baseName + ",エリア調整," + baseName + ",エリア調整," + baseName);
    ## 全社選択時
    #else
        sosApply("", "", "03","$form.bean.etcSosFlg");
        ${GridObjName2}.setHeader("リージョン計画　$!plannedTypeStr　$prodName,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan");
        ${GridObjName2}.attachHeader("組織・担当名称,$titleUH,#cspan,$titleP,#cspan,$titleZ,#cspan,合計,#cspan");
        ${GridObjName2}.attachHeader("#rspan,リージョン調整," + baseName + ",リージョン調整," + baseName + ",リージョン調整," + baseName + ",リージョン調整," + baseName);
    #end
    ${GridObjName2}.setInitWidths("300,90,90,90,90,90,90,90,90");
    ${GridObjName2}.setColAlign("left,right,right,right,right,right,right,right,right");
    ${GridObjName2}.setColTypes("ro,ron,ron,ron,ron,ron,ron,ron,ron");
    ${GridObjName2}.enableResizing("false,false,false,false,false,false,false,false,false");
    ${GridObjName2}.enableTooltips("false,false,false,false,false,false,false,false,false");
    ${GridObjName2}.enableAutoHeight(true, 100);
    ${GridObjName2}.objBox.style.overflowX="hidden";
    ${GridObjName2}.objBox.style.overflowY="hidden";
    ${GridObjName2}.enableBlockSelection();
    ${GridObjName2}.forceLabelSelection(true);
    ${GridObjName2}.setCSVDelimiter("\t");
    ${GridObjName2}.setNumberFormat("0,000",1);
    ${GridObjName2}.setNumberFormat("0,000",2);
    ${GridObjName2}.setNumberFormat("0,000",3);
    ${GridObjName2}.setNumberFormat("0,000",4);
    ${GridObjName2}.setNumberFormat("0,000",5);
    ${GridObjName2}.setNumberFormat("0,000",6);
    ${GridObjName2}.setNumberFormat("0,000",7);
    ${GridObjName2}.setNumberFormat("0,000",8);
    ${GridObjName2}.setSizes();
    ${GridObjName2}.init();
    ${GridObjName2}.attachEvent("onKeyPress",function(keycode,ctrl,shift){
        copyBlock(${GridObjName2}, keycode, ctrl, shift);
        return true;
    });
    ${GridObjName2}.attachEvent("onBeforeSelect",function(newId,oldId){return;});
    ${GridObjName2}.attachEvent("onMouseOver",function(rowId,columnId){
        var title = "";
            if(columnId == 2){
                title = ${GridObjName2}.getUserData(rowId,"toolTipUH");
            }else if(columnId == 4){
                title = ${GridObjName2}.getUserData(rowId,"toolTipP");
            }else if(columnId == 6){
                title = ${GridObjName2}.getUserData(rowId,"toolTipZ");
            }
            if(title == null){
                title = "";
            }
            ${GridObjName2}.cells(rowId,columnId).cell.title = title;
    });
}

## 調整金額の計算処理
function doCalcTuneValue(grid, rowId, colId){
    var tuneValue = null;
    var value1 = grid.cells(rowId,colId).getValue();
    var value2 = null;
    if (colId == 2) {
        value2 = grid.getUserData(rowId,"yBaseValueUHLowerLevelPlanSummary");
    }
    if (colId == 4) {
        value2 = grid.getUserData(rowId,"yBaseValuePLowerLevelPlanSummary");
    }
    if (colId == 6) {
        value2 = grid.getUserData(rowId,"yBaseValueZLowerLevelPlanSummary");
    }
    if(value1 != null && value1.toString() != ""){
        var iValue1 = convertToInteger(grid,rowId,colId);
        if(value2 != null && value2.toString() != ""){
            var iValue2 = value2 - 0;
            tuneValue = iValue1 - iValue2;
        }
        else {
            tuneValue = iValue1;
        }
    }
    else {
        if(value2 != null && value2.toString() != ""){
            tuneValue = 0 - value2;
        }
    }
    var cell = grid.cells(rowId, colId-1);
    if (tuneValue != null) {
        cell.setValue(tuneValue);
    }
    else {
        cell.setValue(null);
    }
}

## 上位計画-下位計画の計算処理
function doCalcFormulaRow(colId){
    var iUpValue = convertToInteger(${GridObjName2},1,colId); // 上位値
    var upValue = ${GridObjName2}.cells(1,colId).getValue();

    var isDetailExist = false;
    var iDetailSumValue = 0; // 明細合計値
    for (rowId = 1; rowId <= ${GridObjName1}.getRowsNum(); rowId++) {
        var value = ${GridObjName1}.cells(rowId,colId).getValue();
        if(value == null || value.toString() == ""){
            continue;
        }
        iDetailSumValue = iDetailSumValue + convertToInteger(${GridObjName1},rowId,colId);
        isDetailExist = true;
    }

    var isValueExist = false;
    if (upValue != null && upValue != "") {
        isValueExist = true;
    }
    if (isDetailExist) {
        isValueExist = true;
    }

    var cell = ${GridObjName2}.cells(2,colId);
    if (isValueExist) {
        cell.setValue(iUpValue - iDetailSumValue);
    }
    else {
        cell.setValue(null);
    }
}

## 計画値の合計列の計算処理
function doCalcSumCol(grid, rowId){
    ## Y価ベース
    var sumValue = null;
    var value1 = grid.cells(rowId,2).getValue();
    var value2 = grid.cells(rowId,4).getValue();
    var value3 = grid.cells(rowId,6).getValue();
    if(value1 != null && value1.toString() != ""){
        sumValue = convertToInteger(grid,rowId,2);
    }
    if(value2 != null && value2.toString() != ""){
        sumValue = sumValue + convertToInteger(grid,rowId,4);
    }
    if(value3 != null && value3.toString() != ""){
        sumValue = sumValue + convertToInteger(grid,rowId,6);
    }
    var cell = grid.cells(rowId, 8);
    if (sumValue != null) {
        cell.setValue(sumValue);
    }
    else {
        cell.setValue(null);
    }
}

## 組織調整値の合計列の計算処理
function doCalcTuneSumCol(grid, rowId){
    var sumValue = null;
    var value1 = grid.cells(rowId,1).getValue();
    var value2 = grid.cells(rowId,3).getValue();
    var value3 = grid.cells(rowId,5).getValue();
    if(value1 != null && value1.toString() != ""){
        sumValue = convertToInteger(grid,rowId,1);
    }
    if(value2 != null && value2.toString() != ""){
        sumValue = sumValue + convertToInteger(grid,rowId,3);
    }
    if(value3 != null && value3.toString() != ""){
        sumValue = sumValue + convertToInteger(grid,rowId,5);
    }
    var cell = grid.cells(rowId, 7);
    if (sumValue != null) {
        cell.setValue(sumValue);
    }
    else {
        cell.setValue(null);
    }
}

## 指定セルスタイルの再設定処理
function setCellStyle(grid, rowId, colIdArr) {
    for(arrIdx = 0; arrIdx < colIdArr.length; arrIdx++){
        var colId = colIdArr[arrIdx];
        var value = grid.cells(rowId,colId).getValue();
        minusStyle(grid, rowId, colId, value);
        if (value.toString() == "NaN") {
            grid.cells(rowId,colId).setValue("");
        }
    }
}

## 検索処理
function dpm100C00F05() {
    if (searchValidation()) {
        if (editFlg) {
            if (!window.confirm('$text.get("DPC999C99.001","dialogue")')) {
                return;
            }
        }
        var actionPath = "$link.setAction('dpm100C00F05')";
        document.dpm100C00Form.action = actionPath;
        document.dpm100C00Form.submit();

	    dpm100C00F05 = blockIt;
	    execute = blockIt;
	    dpm101C00F05 = blockIt;
	    dpm200C00F05 = blockIt;
    }
}

## カテゴリリストの変更処理
## 組織・担当者を変更した時
function changeCategory() {
	var form = document.dpm100C00Form;
	## 子画面で取得したカテゴリリスト
    var sosCategoryAry = document.getElementById('sosCategory').value.split(',');

    ## 組織コードの取得
    var sosCd;
    if(isEntered(form.sosCd4.value)){
      sosCd = form.sosCd4.value;
    } else if(isEntered(form.sosCd3.value)){
      sosCd = form.sosCd3.value;
    } else if(isEntered(form.sosCd2.value)){
      sosCd = form.sosCd2.value;
    } else {
      sosCd = null;
    }

    ## 計画対象カテゴリ領域より、立案レベルを条件にカテゴリを取得
    var planLvCtgList = [];
    if (isEntered(form.sosCd3.value)) {
      planLvCtgList = [
                      #foreach($val in $service.getCategoryByPlanLevel($form.getField("DPM100C00_PLANLEVEL_MR")))
                      , '$val'
                      #end
                      ];
    } else if (isEntered(form.sosCd2.value)) {
      planLvCtgList = [
                      #foreach($val in $service.getCategoryByPlanLevel($form.getField("DPM100C00_PLANLEVEL_OFFICE")))
                      , '$val'
                      #end
                      ];
    } else {
      planLvCtgList = [
                      #foreach($val in $service.getCategoryByPlanLevel($form.getField("DPM100C00_PLANLEVEL_SITEN")))
                      , '$val'
                      #end
                      ];
    }

	## コードマスタのカテゴリリストを全て取得
    var categoryList = [
                      #foreach($codeAndValue in $service.getDpmCategory(null, false, "$planId"))
                      , { text: '$codeAndValue.value', value: '$codeAndValue.code' }
                      #end
                     ];

    ## カテゴリのselectbox
	var prodCategory = document.getElementsByName('prodCategory')[0];
	## 一旦selectboxのoptionを削除
	while(prodCategory.lastChild)
	{
		prodCategory.removeChild(prodCategory.lastChild);
	}

	## optionを作成
	var option;
	document.createElement('option');
	## 選択した組織のカテゴリのみ残す
    for (var i = 1; i < categoryList.length; i++){
    	for(var j = 0; j < sosCategoryAry.length; j++) {
    		if (categoryList[i].value == sosCategoryAry[j] && planLvCtgList.includes(categoryList[i].value)) {
				option = document.createElement('option');
				option.setAttribute('value', categoryList[i].value);
				option.innerHTML = categoryList[i].text;
    			prodCategory.appendChild(option);
    		}
    	}
    }
}

## 品目リストの変更処理
## カテゴリを変更した時、組織・担当者を変更した時
function changeProd() {

	var form = document.dpm100C00Form;
## 計画レベル:組織別では選択された組織の下位組織計画を表示するので、立案レベルも１つ下を使用する
	if(isEntered(form.sosCd4.value)){
	  changeMrProdList();
	} else if(isEntered(form.sosCd3.value)){
	  changeMrProdList();
	} else if(isEntered(form.sosCd2.value)){
	 changeOfficeProdList();
	} else {
	  changeBranchProdList();
	}
}

## 担当者別品目リストを作成
function changeMrProdList() {
	#changeProdList("DPM100C00_PLANLEVEL_MR")
	changeProdCategoryList(document.dpm100C00Form);
}
## 事業所別品目リストを作成
function changeOfficeProdList() {
	#changeProdList("DPM100C00_PLANLEVEL_OFFICE")
	changeProdCategoryList(document.dpm100C00Form);
}
## 支店別品目リストを作成
function changeBranchProdList() {
	#changeProdList("DPM100C00_PLANLEVEL_SITEN")
	changeProdCategoryList(document.dpm100C00Form);
}


## 検索時入力チェック
function searchValidation() {
    ## 入力フォーム
    var form = document.dpm100C00Form;
    var value = "";

    ## [必須] カテゴリ
    value = form.prodCategory.value;
    errorMsg = '$text.get("DPC1003E",["カテゴリ"])';
    addErrorInfo(!isEntered(value), errorMsg);

    ## [必須] 品目
    value = form.prodCode.value;
    errorMsg = '$text.get("DPC1003E",["品目"])';
    addErrorInfo(!isEntered(value), errorMsg);

    return validation();
}

## 更新処理
function dpm100C00FXXExecute() {
    ## チーム選択時
    #if ($form.bean.sosCd4)
        execute('$text.get("DPM100C00.004","dialogue")', '$link.setAction("dpm100C00F13Execute")');
    ## 営業所選択時（ONC）
    #elseif ($form.bean.sosCd3 && $form.bean.oncSosFlg == true)
        execute('$text.get("DPM100C00.004","dialogue")', '$link.setAction("dpm100C00F13Execute")');
    ## 営業所選択時（ONC以外）
    #elseif ($form.bean.sosCd3 && $form.bean.oncSosFlg == false)
        execute('$text.get("DPM100C00.003","dialogue")', '$link.setAction("dpm100C00F12Execute")');
    ## 支店選択時
    #elseif ($form.bean.sosCd2)
        execute('$text.get("DPM100C00.002","dialogue")', '$link.setAction("dpm100C00F11Execute")');
    ## 全社選択時
    #else
        execute('$text.get("DPM100C00.001","dialogue")', '$link.setAction("dpm100C00F10Execute")');
    #end
}

## 更新処理
function execute(confirmMsg, actionPath) {

    ## --- 編集中セル値の登録時チェック ---
	if(window.editValueChecker.isValid() == false){
		return;
	}

    ##入力チェック
    if (!executeValidation()) {
        return;
    }
    ##確認
    if (!confirm(confirmMsg)) {
        return;
    }
    var form = document.dpm100C00Form;
    ## ユーザデータに編集後の計画値を追加
    var rowNum = ${GridObjName1}.getRowsNum();
    for (i = 1; i <= rowNum; i++) {
        var valueUH = ${GridObjName1}.cells(i,2).getValue();
        var valueP = ${GridObjName1}.cells(i,4).getValue();
        var valueZ = ${GridObjName1}.cells(i,6).getValue();
        valueUH = valueUH.toString().replace(/,/g,"");
        valueP = valueP.toString().replace(/,/g,"");
        valueZ = valueZ.toString().replace(/,/g,"");
        var userData = ${GridObjName1}.getUserData(i, 'updateRowId');
        userData += "," + valueUH + "," + valueP + "," + valueZ;
        ${GridObjName1}.setUserData(i, 'updateRowId', userData);
    }
    ##フォームに更新情報を格納
    addRowIdList(form, ${GridObjName1}, 'rowIdList', 'updateRowId');
    ##送信
    document.dpm100C00Form.action = actionPath;
    document.dpm100C00Form.submit();

    dpm100C00F05 = blockIt;
    execute = blockIt;
    dpm101C00F05 = blockIt;
    dpm200C00F05 = blockIt;
}

## 更新時入力チェック
function executeValidation() {
    var rowNum = ${GridObjName1}.getRowsNum();
    for (i = 1; i <= rowNum; i++) {
        ## メッセージ準備
        var rowInfo = "";
        #if ($form.bean.sosCd4)
            rowInfo = ${GridObjName1}.getUserData(i, 'jgiName');
        #elseif ($form.bean.sosCd3 && $form.bean.oncSosFlg == true)
            rowInfo = ${GridObjName1}.getUserData(i, 'jgiName');
        #else
            rowInfo = ${GridObjName1}.getUserData(i, 'sosName');
        #end
        ## エラーチェック
        ## [UH Y価ベース]
        var checkValueUH = ${GridObjName1}.cells(i, 2).getValue().toString();
        amountValidationNotTailCheck("【UH】", checkValueUH, 10, true, rowInfo);
        ## [P Y価ベース]
        var checkValueP  = ${GridObjName1}.cells(i, 4).getValue().toString();
        amountValidationNotTailCheck("【P】", checkValueP, 10, true, rowInfo);
        ## [Z Y価ベース]
        var checkValueZ  = ${GridObjName1}.cells(i, 6).getValue().toString();
        amountValidationNotTailCheck("【Z】", checkValueZ, 10, true, rowInfo);
    }
    return validation();
}

## 支店計画の検索処理
function searchPlanSiten() {
    var labelTxt = document.getElementById("sos");
    labelTxt.childNodes[0].nodeValue = "";
    var sosCd2 = document.getElementById('sosCd2');
    sosCd2.value = "";
    var sosCd3 = document.getElementById('sosCd3');
    sosCd3.value = "";
    var sosCd4 = document.getElementById('sosCd4');
    sosCd4.value = "";
    var etcSosFlg = document.getElementById('etcSosFlg');
    etcSosFlg.value = false;
    var oncSosFlg = document.getElementById('oncSosFlg');
## add start 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）
    oncSosFlg.value = false;
    var sosCategory = document.getElementById('sosCategory');
    if (sosCategory != null && sosCategory != "") {
## mod start 2018/1/18 T.Atsuji J17-0010_2018年4月組織変更対応（各種アプリ）
##	    sosCategory.value = sosCategory;
        sosCategory.value = getSosCategory();
## mod end 2018/1/18 T.Atsuji J17-0010_2018年4月組織変更対応（各種アプリ）
	}
## add end 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）

    var form = document.dpm100C00Form;
    form.prodCode.options[form.prodCode.selectedIndex].value = "$!form.bean.prodCode";
    form.prodCategory.value = "$!form.bean.prodCategory";
    dpm100C00F05();
}

## 営業所計画の検索処理
function searchPlanOffice(sosCd, _oncSosFlg) {
    var sosCd2 = document.getElementById('sosCd2');
    sosCd2.value = sosCd;
    var sosCd3 = document.getElementById('sosCd3');
    sosCd3.value = "";
    var sosCd4 = document.getElementById('sosCd4');
    sosCd4.value = "";
    var etcSosFlg = document.getElementById('etcSosFlg');
    etcSosFlg.value = false;
    var oncSosFlg = document.getElementById('oncSosFlg');
    oncSosFlg.value = oncSosFlg;
## add start 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）
    var sosCategory = document.getElementById('sosCategory');
    if (sosCategory != null && sosCategory != "") {
## mod start 2018/1/18 T.Atsuji J17-0010_2018年4月組織変更対応（各種アプリ）
##	    sosCategory.value = sosCategory;
        sosCategory.value = getSosCategory();
## mod end 2018/1/18 T.Atsuji J17-0010_2018年4月組織変更対応（各種アプリ）
	}
## add end 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）

    var form = document.dpm100C00Form;
    form.prodCode.options[form.prodCode.selectedIndex].value = "$!form.bean.prodCode";
    form.prodCategory.value = "$!form.bean.prodCategory";
    dpm100C00F05();
}

## チーム計画の検索処理
function searchPlanTeam(sosCd, _oncSosFlg) {
    var sosCd2 = document.getElementById('sosCd2');
    sosCd2.value = "$!form.bean.sosCd2";
    var sosCd3 = document.getElementById('sosCd3');
    sosCd3.value = sosCd;
    var sosCd4 = document.getElementById('sosCd4');
    sosCd4.value = "";
    var etcSosFlg = document.getElementById('etcSosFlg');
    etcSosFlg.value = false;
    var oncSosFlg = document.getElementById('oncSosFlg');
    oncSosFlg.value = _oncSosFlg;
## add start 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）
    var sosCategory = document.getElementById('sosCategory');
    if (sosCategory != null && sosCategory != "") {
## mod start 2018/1/18 T.Atsuji J17-0010_2018年4月組織変更対応（各種アプリ）
##	    sosCategory.value = sosCategory;
        sosCategory.value = getSosCategory();
## mod end 2018/1/18 T.Atsuji J17-0010_2018年4月組織変更対応（各種アプリ）
	}
## add end 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）

    var form = document.dpm100C00Form;
    form.prodCode.options[form.prodCode.selectedIndex].value = "$!form.bean.prodCode";
    form.prodCategory.value = "$!form.bean.prodCategory";
    dpm100C00F05();
}

## 担当者計画の検索処理
function searchPlanMR(sosCd,_etcSosFlg, _oncSosFlg) {
    var sosCd2 = document.getElementById('sosCd2');
    sosCd2.value = "$!form.bean.sosCd2";
    var sosCd3 = document.getElementById('sosCd3');
    sosCd3.value = "$!form.bean.sosCd3";
    var sosCd4 = document.getElementById('sosCd4');
    sosCd4.value = sosCd;
    var etcSosFlg = document.getElementById('etcSosFlg');
    etcSosFlg.value = _etcSosFlg;
    var oncSosFlg = document.getElementById('oncSosFlg');
    oncSosFlg.value = _oncSosFlg;
## add start 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）
    var sosCategory = document.getElementById('sosCategory');
    if (sosCategory != null && sosCategory != "") {
## mod start 2018/1/18 T.Atsuji J17-0010_2018年4月組織変更対応（各種アプリ）
##	    sosCategory.value = sosCategory;
        sosCategory.value = getSosCategory();
## mod end 2018/1/18 T.Atsuji J17-0010_2018年4月組織変更対応（各種アプリ）
	}
## add end 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）

    var form = document.dpm100C00Form;
    form.prodCode.options[form.prodCode.selectedIndex].value = "$!form.bean.prodCode";
    form.prodCategory.value = "$!form.bean.prodCategory";
    dpm100C00F05();
}

## 全社計画で品目別計画編集画面を開く
function dpm101C00F05All() {
    var oncSosFlg = document.getElementById('oncSosFlg');
    oncSosFlg.value = false;
    dpm101C00F05();
}

## 支店計画で品目別計画編集画面を開く
function dpm101C00F05Siten(sosCd,_oncSosFlg) {
    var sosCd2 = document.getElementById('sosCd2');
    sosCd2.value = sosCd;
    var sosCd3 = document.getElementById('sosCd3');
    sosCd3.value = "";
    var sosCd4 = document.getElementById('sosCd4');
    sosCd4.value = "";
    var jgiNo = document.getElementById('jgiNo');
    jgiNo.value = "";
    var etcSosFlg = document.getElementById('etcSosFlg');
    etcSosFlg.value = false;
    var oncSosFlg = document.getElementById('oncSosFlg');
    oncSosFlg.value = _oncSosFlg;
## add start 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）
    var sosCategory = document.getElementById('sosCategory');
    if (sosCategory != null && sosCategory != "") {
## mod start 2018/1/18 T.Atsuji J17-0010_2018年4月組織変更対応（各種アプリ）
##	    sosCategory.value = sosCategory;
        sosCategory.value = getSosCategory();
## mod end 2018/1/18 T.Atsuji J17-0010_2018年4月組織変更対応（各種アプリ）
	}
## add end 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）

    var form = document.dpm100C00Form;
    form.prodCategory.value = "$!form.bean.prodCategory";
    dpm101C00F05();
}

## 営業所計画で品目別計画編集画面を開く
function dpm101C00F05Office(sosCd,_oncSosFlg) {
    var sosCd2 = document.getElementById('sosCd2');
    sosCd2.value = "$!form.bean.sosCd2";
    var sosCd3 = document.getElementById('sosCd3');
    sosCd3.value = sosCd;
    var sosCd4 = document.getElementById('sosCd4');
    sosCd4.value = "";
    var jgiNo = document.getElementById('jgiNo');
    jgiNo.value = "";
    var etcSosFlg = document.getElementById('etcSosFlg');
    etcSosFlg.value = false;
    var oncSosFlg = document.getElementById('oncSosFlg');
    oncSosFlg.value = _oncSosFlg;
## add start 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）
    var sosCategory = document.getElementById('sosCategory');
    if (sosCategory != null && sosCategory != "") {
## mod start 2018/1/18 T.Atsuji J17-0010_2018年4月組織変更対応（各種アプリ）
##	    sosCategory.value = sosCategory;
        sosCategory.value = getSosCategory();
## mod end 2018/1/18 T.Atsuji J17-0010_2018年4月組織変更対応（各種アプリ）
	}
## add end 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）

    var form = document.dpm100C00Form;
    form.prodCategory.value = "$!form.bean.prodCategory";
    dpm101C00F05();
}

## チーム計画で品目別計画編集画面を開く
function dpm101C00F05Team(sosCd,_etcSosFlg,_oncSosFlg) {
    var sosCd2 = document.getElementById('sosCd2');
    sosCd2.value = "$!form.bean.sosCd2";
    var sosCd3 = document.getElementById('sosCd3');
    sosCd3.value = "$!form.bean.sosCd3";
    var sosCd4 = document.getElementById('sosCd4');
    sosCd4.value = sosCd;
    var jgiNo = document.getElementById('jgiNo');
    jgiNo.value = "";
    var etcSosFlg = document.getElementById('etcSosFlg');
    etcSosFlg.value = _etcSosFlg;
    var oncSosFlg = document.getElementById('oncSosFlg');
    oncSosFlg.value = _oncSosFlg;
## add start 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）
    var sosCategory = document.getElementById('sosCategory');
    if (sosCategory != null && sosCategory != "") {
## mod start 2018/1/18 T.Atsuji J17-0010_2018年4月組織変更対応（各種アプリ）
##	    sosCategory.value = sosCategory;
        sosCategory.value = getSosCategory();
## mod end 2018/1/18 T.Atsuji J17-0010_2018年4月組織変更対応（各種アプリ）
	}
## add end 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）

    var form = document.dpm100C00Form;
    form.prodCategory.value = "$!form.bean.prodCategory";
    dpm101C00F05();
}

## 担当者計画で品目別計画編集画面を開く
function dpm101C00F05Jgi(jgiNo,_etcSosFlg,_oncSosFlg) {
    var sosCd2 = document.getElementById('sosCd2');
    sosCd2.value = "$!form.bean.sosCd2";
    var sosCd3 = document.getElementById('sosCd3');
    sosCd3.value = "$!form.bean.sosCd3";
    var sosCd4 = document.getElementById('sosCd4');
    sosCd4.value = "$!form.bean.sosCd4";
    var _jgiNo = document.getElementById('jgiNo');
    _jgiNo.value = jgiNo;
    var etcSosFlg = document.getElementById('etcSosFlg');
    etcSosFlg.value = _etcSosFlg;
    var oncSosFlg = document.getElementById('oncSosFlg');
    oncSosFlg.value = _oncSosFlg;
## add start 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）
    var sosCategory = document.getElementById('sosCategory');
    if (sosCategory != null && sosCategory != "") {
## mod start 2018/1/18 T.Atsuji J17-0010_2018年4月組織変更対応（各種アプリ）
##	    sosCategory.value = sosCategory;
        sosCategory.value = getSosCategory();
## mod end 2018/1/18 T.Atsuji J17-0010_2018年4月組織変更対応（各種アプリ）
	}
## add end 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）
    var form = document.dpm100C00Form;
    form.prodCategory.value = "$!form.bean.prodCategory";
    dpm101C00F05();
}

## add start 2018/1/18 T.Atsuji J17-0010_2018年4月組織変更対応（各種アプリ）
## カテゴリを取得
function getSosCategory() {

    ## 画面で選択した組織のカテゴリを取得
    var sosCategory = "$!form.bean.sosCategory";

    if (sosCategory != 'undefined' && sosCategory != null && sosCategory != '') {
        ## 取得できた場合は、取得値を返却
        return sosCategory;
    }

    ## 画面で選択した組織のカテゴリが取得できない場合
    ## 画面で選択したカテゴリを取得
    var prodCategory = "$!form.bean.prodCategory";

    if (prodCategory != 'undefined' && prodCategory != null && prodCategory != '') {
        ## 取得できた場合

        ## 仕入品（一般・麻薬）を選択していた場合
        if (prodCategory == '2') {
            ## GMBU品目（GMBU組織）扱いとなるため、変換して返却
            return '1';
        }

        ## 上記以外は、取得値を返却
        return prodCategory;
    }

    ## 空文字を返却
    return '';
}
## add end 2018/1/18 T.Atsuji J17-0010_2018年4月組織変更対応（各種アプリ）

## 品目別計画編集画面を開く
function dpm101C00F05() {
    if (editFlg) {
        if (!window.confirm('$text.get("DPC999C99.001","dialogue")')) {
            return;
        }
    }
    var url ="$link.setAction('dpm101C00F05')";
    document.dpm100C00Form.action = url;
    document.dpm100C00Form.submit();

    dpm100C00F05 = blockIt;
    execute = blockIt;
    dpm101C00F05 = blockIt;
    dpm200C00F05 = blockIt;
}

## 担当者計画で[UH]施設別計画編集画面を開く
function dpm200C00F05UH(jgiNo,_etcSosFlg) {
	var sosCd2 = document.getElementById('sosCd2');
    sosCd2.value = "$!form.bean.sosCd2";
    var sosCd3 = document.getElementById('sosCd3');
    sosCd3.value = "$!form.bean.sosCd3";
    var sosCd4 = document.getElementById('sosCd4');
    sosCd4.value = "$!form.bean.sosCd4";
    var _jgiNo = document.getElementById('jgiNo');
    _jgiNo.value = jgiNo;
    var etcSosFlg = document.getElementById('etcSosFlg');
    etcSosFlg.value = _etcSosFlg;

    var form = document.dpm100C00Form;
    form.prodCode.options[form.prodCode.selectedIndex].value = "$!form.bean.prodCode";
    form.prodCategory.value = "$!form.bean.prodCategory";
    form.insType.value = "1";
    form.planData.value = "0";
    form.insNo.value = "";
    form.insName.value = "";
    dpm200C00F05();
}

## 担当者計画で[P]施設別計画編集画面を開く
function dpm200C00F05P(jgiNo,_etcSosFlg) {
    var sosCd2 = document.getElementById('sosCd2');
    sosCd2.value = "$!form.bean.sosCd2";
    var sosCd3 = document.getElementById('sosCd3');
    sosCd3.value = "$!form.bean.sosCd3";
    var sosCd4 = document.getElementById('sosCd4');
    sosCd4.value = "$!form.bean.sosCd4";
    var _jgiNo = document.getElementById('jgiNo');
    _jgiNo.value = jgiNo;
    var etcSosFlg = document.getElementById('etcSosFlg');
    etcSosFlg.value = _etcSosFlg;

    var form = document.dpm100C00Form;
    form.prodCode.options[form.prodCode.selectedIndex].value = "$!form.bean.prodCode";
    form.prodCategory.value = "$!form.bean.prodCategory";
    form.insType.value = "2";
    form.planData.value = "0";
    form.insNo.value = "";
    form.insName.value = "";
    dpm200C00F05();
}

## 担当者計画で[Z]施設別計画編集画面を開く
function dpm200C00F05Z(jgiNo,_etcSosFlg) {
    var sosCd2 = document.getElementById('sosCd2');
    sosCd2.value = "$!form.bean.sosCd2";
    var sosCd3 = document.getElementById('sosCd3');
    sosCd3.value = "$!form.bean.sosCd3";
    var sosCd4 = document.getElementById('sosCd4');
    sosCd4.value = "$!form.bean.sosCd4";
    var _jgiNo = document.getElementById('jgiNo');
    _jgiNo.value = jgiNo;
    var etcSosFlg = document.getElementById('etcSosFlg');
    etcSosFlg.value = _etcSosFlg;

    var form = document.dpm100C00Form;
    form.prodCode.options[form.prodCode.selectedIndex].value = "$!form.bean.prodCode";
    form.prodCategory.value = "$!form.bean.prodCategory";
    form.insType.value = "3";
    form.planData.value = "0";
    form.insNo.value = "";
    form.insName.value = "";
    dpm200C00F05();
}

## 施設別計画編集画面を開く
function dpm200C00F05() {
    if (editFlg) {
        if (!window.confirm('$text.get("DPC999C99.001","dialogue")')) {
            return;
        }
    }
    var url ="$link.setAction('dpm200C00F05')";
    document.dpm100C00Form.action = url;
    document.dpm100C00Form.submit();

    dpm100C00F05 = blockIt;
    execute = blockIt;
    dpm101C00F05 = blockIt;
    dpm200C00F05 = blockIt;
}

## 組織・従業員選択後の処理
function changeSos(sosCd, jgiNo, sosMaxSrchGetValue, etcSosFlg) {
	let memorizer = new CategoryAndProdCodeMemorizer();

	sosApply(sosCd, jgiNo, sosMaxSrchGetValue, etcSosFlg);
	changeCategory();
    memorizer.undoCategoryCodeValue();
    changeProd();
    memorizer.undoProdCodeValue();

}

## 出力処理
function dpm100C00F14(){
    if (!searchValidation()) {
        return;
    }

    ##確認
    if (!confirm('$text.get("DPM100C00.005","dialogue")')) {
        return;
    }

    ##送信
    var actionPath = '$link.setAction('dpm100C00F14Output')';
    document.dpm100C00Form.action = actionPath;
    document.dpm100C00Form.submit();

    return false;
}
//-->
</script>

<div id="noTabBox">
<form name="dpm100C00Form" method="post">
## 処理用フィールド
<input type="hidden" name="sosCd2Tran" value="$!form.bean.sosCd2Tran">
<input type="hidden" name="sosCd3Tran" value="$!form.bean.sosCd3Tran">
<input type="hidden" name="sosCd4Tran" value="$!form.bean.sosCd4Tran">
<input type="hidden" name="etcSosFlgTran" value="$!form.bean.etcSosFlgTran">
<input type="hidden" name="oncSosFlgTran" value="$!form.bean.oncSosFlgTran">
## add start 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）
<input type="hidden" name="sosCategoryTran" value="$!form.bean.sosCategoryTran">
## add end 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）
<input type="hidden" name="prodCodeTran" value="$!form.bean.prodCodeTran">
<input type="hidden" name="prodCategoryTran" value="$!form.bean.prodCategoryTran">
<input type="hidden" name="insType" value="">
<input type="hidden" name="planData" value="">
<input type="hidden" name="insNo" value="">
<input type="hidden" name="insName" value="">
<input type="hidden" name="mrJgiNo" value="$!form.bean.mrJgiNo">

<table class="gridLine" cellspacing="0" cellpadding="1">
    <tr>
        <td class="gridIndex" style="width: 150px;">組織 *</td>
        <td>#sosDialogExt2("changeSos","01", "00", "03", "DPM10")</td>
        ##<td>#sosDialog("01", "00", "03")</td>
    </tr>
    <tr>
        <td class="gridIndex" style="width: 150px;">カテゴリ*</td>
        <td>#selectWithFunc ("prodCategory", $!form.bean.prodCategoryList, $!form.bean.prodCategory, "changeProd()")</td>
    </tr>
    <tr>
        <td class="gridIndex" style="width: 150px;">品目*</td>
        <td>#select ("prodCode", $prodList, $!form.bean.prodCode)</td>
    </tr>
</table>
<table style="margin-top: 2px; margin-bottom: 2px; width: 100%;">
    <tr>
        <td>
            <input type="button" value="表示" style="width: 80px;" onclick="dpm100C00F05()" />
            #if ($!security.hasAuthEdit("DPM10"))
            #if ($resultDetail)
                <input type="button" value="登録" style="width: 80px;" onclick="dpm100C00FXXExecute()" />
            #else
                <input type="button" value="登録" style="width: 80px;" onclick="dpm100C00FXXExecute()" disabled />
            #end
            #end
            #if ($resultDetail)
            	<input type="button" value="ダウンロード" style="width: 120px;" onclick="dpm100C00F14()" />
            #else
                <input type="button" value="ダウンロード" style="width: 120px;" disabled />
            #end
        </td>
        <td style="text-align: right; vertical-align: bottom;"><label>$consts.tableHeader</label></td>
    </tr>
</table>
#if($resultDetail)
    #loadingGridDiv2("${GridObjName2}", "${CoverId2}" ,"width: 99.5%; clear: both;")
    #loadingGridDiv2("${GridObjName1}", "${CoverId1}" ,"width: 99.5%; clear: both;")
#else
    <div id="${GridObjName2}" style="width: 99.5%; clear: both;"></div>
    <div id="${GridObjName1}" style="width: 99.5%; clear: both;"></div>
#end
#token()</form>
</div>
