#set($layout = "dialogueLayout.vm" )
#set($bodyOnloadMethod = "dps302C03F00()")
#set($bodyOnfocusMethod = "return dialogWin.checkModal()")
#set($pageTitle = $text.get("dps302C03","title"))
#set($resultData = $form.getRequestData("DPS302C03_DATA_R"))
## add start 2021/08/21 K.Fukui 同期処理を自処理に組み込み。
#if ( $form.getRequestData("DATA_R_SOS_JGI_LBL_INFO"))
	#set ($jgiSosInfo = $form.getRequestData("DATA_R_SOS_JGI_LBL_INFO"))
#end
## add end   2021/08/21 K.Fukui 同期処理を自処理に組み込み。
#set($statusForMrPlan = $resultData.statusForMrPlan.DbValue)
#set($dataListFileName = "dps302C03x01.vm")
#set($dataListFileName2 = "dps302C03x02.vm")
#set($GridObjName = "dps302C03Grid")
#set($gridHeight = $text.get("${GridObjName}","grid"))
#set($GridObjName2 = "dps302C03Grid2")
#set($CoverId = "dps302C03CoverId")
#set($CoverId2 = "dps302C03CoverId2")

## 立案対象品目
#set( $prodName = "&nbsp;")
#if($resultData.prodName)
    #set($prodName = $!{resultData.prodName})
#end
#set( $prodType = "&nbsp;")
#if($resultData.prodType)
    #set($prodType = $!{resultData.prodType})
#end
## 調整金額有無フラグ
## 表示している対象区分と逆の対象区分で発生している場合、true
##if($resultData.officePlanDto.choseiFlg)
##    #set($choseiFlg = $!{resultData.officePlanDto.choseiFlg})
###end

## ヘッダー設定カラム設定
#set( $headerColumnId = "-1")
#if($form.bean.insType == "1")
    #set( $headerColumnId = "1")
#elseif($form.bean.insType == "2")
    #set( $headerColumnId = "4")
#end

## ワクチンのカテゴリコード取得
#set($vaccineCode = $service.getShienVaccineCode())

## グリッドのヘッダ
#set($header = $form.bean.header)


## 試算タイプ
#set( $calcType = $!form.getRequestData("DPS302C03_DATA_R").getCalcType())
<script language="javascript">
<!--
var ${GridObjName};
var ${GridObjName2};
##var inputColumnIdArr =  new Array("15","16");
var inputColumnIdArr =  new Array("16","17");
var editFlg = false;
var preInsType =  "$form.bean.insType";
var refDeliveryScope = "$form.bean.refDeliveryScope";

## 初期表示＋読込処理
function dps302C03F00() {
## mod start 2018/06/25 H.Shiota J18-0002_2018年4月組織変更対応（計画支援）　sosApplyExt()を先頭に移動(初期選択組織のunderSosCntをdoInitGrid()で利用するため)

## mod start 2021/08/21 K.Fukui 同期処理を自処理に組み込み。
    ## 営業所表示の場合は初期階層を営業所までにセット
    ##if (!$form.bean.isTeamRank)
    ##sosApplyExt("$!form.bean.sosCd3", "", "02", false);

    ## チーム表示の場合は初期階層をチームまでにセット（データ情報のみ）
    ##else
    ##sosApplyExt("$!form.bean.sosCd4", "", "03", false);

    ##end
    sosApplyExecute($!jgiSosInfo.parseBeanToJson());
## mod end   2021/08/21 K.Fukui 同期処理を自処理に組み込み。
## mod end   2018/06/25 H.Shiota J18-0002_2018年4月組織変更対応（計画支援）　sosApplyExt()を先頭に移動(初期選択組織のunderSosCntをdoInitGrid()で利用するため)

    doInitGrid();
    if (document.getElementById("dps302C03x01.vm")) {
        var loadXMLString = document.getElementById("dps302C03x01.vm").value;
        if (loadXMLString != null && loadXMLString != "") {
            ${GridObjName}.loadXMLString(loadXMLString);
        }else{
            createDhtmlXGridLodingDelete("${CoverId}");
        }
    }

    doInitGrid2();
    if (document.getElementById("dps302C03x02.vm")) {
        var loadXMLString = document.getElementById("dps302C03x02.vm").value;
        if (loadXMLString != null && loadXMLString != "") {
            ${GridObjName2}.loadXMLString(loadXMLString);
        }else{
            createDhtmlXGridLodingDelete("${CoverId2}");
        }
    }

    ##計算、表示処理
    doEditCalc(inputColumnIdArr);
}

## ヘッダー情報DHTMLXGrid生成
function doInitGrid2() {
## add start 2018/06/25 H.Shiotai J18-0002_2018年4月組織変更対応（計画支援）　underSosCntによってヘッダーの文言変更「チーム」⇔「営業所・エリア」

    var headerSosTitle = "チーム別計画";
    #if($!calcType && !$form.bean.isTeamRank && $calcType.getDbValue().equals("2"))
    	## mod Start 2021/7/8 H.Kaneko Step4UAT課題13
        ##headerSosTitle = "営業所・エリア<BR>計画";
## mod Start 2022/5/20 R.Yoshida 2022年4月組織変更対応（支店→リージョン、営業所→エリア）
        headerSosTitle = "エリア計画";
##        headerSosTitle = "営業所・エリア計画";
## mod End   2022/5/20 R.Yoshida 2022年4月組織変更対応（支店→リージョン、営業所→エリア）
        ## mod End 2021/7/8 H.Kaneko Step4UAT課題13
    #end
    #if($!calcType && !$form.bean.isTeamRank)
        if(document.getElementById('underSosCnt').value == "0"){
        	## mod Start 2021/7/8 H.Kaneko Step4UAT課題13
            ##headerSosTitle = "営業所・エリア<BR>計画";
## mod Start 2022/5/20 R.Yoshida 2022年4月組織変更対応（支店→リージョン、営業所→エリア）
            headerSosTitle = "エリア計画";
##            headerSosTitle = "営業所・エリア計画";
## mod End   2022/5/20 R.Yoshida 2022年4月組織変更対応（支店→リージョン、営業所→エリア）
            ## mod End 2021/7/8 H.Kaneko Step4UAT課題13
        }
    #end

## add End   2018/06/25 H.Shiotai J18-0002_2018年4月組織変更対応（計画支援）　underSosCntによってヘッダーの文言変更「チーム」⇔「営業所・エリア」

    ${GridObjName2} = createDhtmlXGridLodingExt("${GridObjName2}", "${CoverId2}");
    ##${GridObjName2}.setHeader("UH,#cspan,#cspan,P,#cspan,#cspan,合計,#cspan,#cspan");
    ${GridObjName2}.setHeader("$header");
    ##営業所指定で、かつ、試算タイプが営→担の場合
## add start 2018/06/25 H.Shiotai J18-0002_2018年4月組織変更対応（計画支援）　underSosCntによってヘッダーの文言変更「チーム」⇔「営業所・エリア」
##    #if($!calcType && $calcType.getDbValue().equals("2") && !$form.bean.isTeamRank)
##    ${GridObjName2}.attachHeader("営業所計画,担当者別計画(積上),調整金額,営業所計画,担当者別計画(積上),調整金額,営業所計画,担当者別計画(積上),調整金額");
##    ##その他の場合
##    #else
##    ${GridObjName2}.attachHeader("チーム別計画,担当者別計画(積上),調整金額,チーム別計画,担当者別計画(積上),調整金額,チーム別計画,担当者別計画(積上),調整金額");
##    #end
    ${GridObjName2}.attachHeader(headerSosTitle + ",担当者別計画(積上),調整金額," + headerSosTitle + ",担当者別計画(積上),調整金額," + headerSosTitle + ",担当者別計画(積上),調整金額");
## add end   2018/06/25 H.Shiotai J18-0002_2018年4月組織変更対応（計画支援）　underSosCntによってヘッダーの文言変更「チーム」⇔「営業所・エリア」
    ## mod Start 2021/7/8 H.Kaneko Step4UAT課題13
    ##${GridObjName2}.setInitWidths("90,130,90,90,130,90,90,130,90");
    ${GridObjName2}.setInitWidths("110,130,90,110,130,90,110,130,90");
    ## mod End 2021/7/8 H.Kaneko Step4UAT課題13
    ${GridObjName2}.setColAlign("right,right,right,right,right,right,right,right,right");
    ${GridObjName2}.setColTypes("ron,ron,ron[=c0-c1],ron,ron,ron[=c3-c4],ron[=c0+c3],ron[=c1+c4],ron[=c2+c5]");
    ${GridObjName2}.enableResizing("false,false,false,false,false,false,false,false,false");
    ${GridObjName2}.enableTooltips("false,false,false,false,false,false,false,false,false");
    ${GridObjName2}.enableDistributedParsing(false);
    ${GridObjName2}.enableAutoHeight(true);
##  ${GridObjName2}.objBox.style.overflowX="hidden";
##  ${GridObjName2}.objBox.style.overflowY="hidden";
    ${GridObjName2}.enableBlockSelection();
    ${GridObjName2}.forceLabelSelection(true);
    ${GridObjName2}.setCSVDelimiter("\t");
    for(i=0; i < 9; i++){
        ${GridObjName2}.setNumberFormat("0,000", i);
    }
    ${GridObjName2}.init();
}

#if ( $form.getRequestData("DPS302C03_DATA_R"))
    #set($deliveryResultSummaryDtoList = $form.getRequestData("DPS302C03_DATA_R").getOfficePlanDto().getDeliveryResultSummaryDtoList())
#end

## データ情報DHTMLXGrid生成
function doInitGrid() {
##  ${GridObjName} = createDhtmlXGridLodingExt("${GridObjName}", "${CoverId}");
##  var headerStr = ["　,#cspan,立案品目($!prodName),#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan"];
##  var attachHeaderStr1 = ["　,担当者,前々々期<br>実績,前々期<br>実績,前期<br>実績,当期,#cspan,#cspan,翌期試算結果,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,翌期計画,#cspan,#cspan"];
##  var attachHeaderStr2 = ["#rspan,#rspan,#rspan,#rspan,#rspan,計画,実績,遂行率,特定施設<br>個別計画,理論計画①,#cspan,#cspan,理論計画②,#cspan,#cspan,営業所案,決定,前同比"];
##  var attachHeaderStr3 = ["#rspan,#rspan,#rspan,#rspan,#rspan,#rspan,#rspan,#rspan,#rspan,増分,計画,前同比,増分,計画,前同比,#rspan,#rspan,#rspan"];
## mod start 2018/06/25 H.Shiota J18-0002_2018年4月組織変更対応（計画支援）　営業所・エリアに合わせカラム幅調整
##    var initWidths = ["100,100,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80"];
## mod start 2020/07/01 趙 2020年4月組織変更対応（各種アプリ）
##    var initWidths = ["110,100,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80"];
##  var initWidths = ["110,140,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80"];
## mod end   2020/07/01 趙 2020年4月組織変更対応（各種アプリ）
## mod start 2018/06/25 H.Shiota J18-0002_2018年4月組織変更対応（計画支援）　営業所・エリアに合わせカラム幅調整
##  var colAlign = ["left,left,right,right,right,right,right,right,right,right,right,right,right,right,right,right,right,right"];
##  var colTypes = ["ro,ro,ron,ron,ron,ron,ron,ron,ron,ron,ron,ron,ron,ron,ron,ron,ron,ron"];
##  var resizing = ["false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false"];
##  var tooltips = ["false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false"];
    ${GridObjName}       = createDhtmlXGridLodingExt("${GridObjName}", "${CoverId}");
    var headerStr        = ["temp,　,#cspan,立案品目($!prodName),#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan"];
    var attachHeaderStr1 = ["#rspan,　,担当者,前々々期<br>実績,前々期<br>実績,前期<br>実績,当期,#cspan,#cspan,翌期試算結果,#cspan,#cspan,#cspan,#cspan,#cspan,#cspan,翌期計画,#cspan,#cspan"];
## mod Start 2022/5/20 R.Yoshida 2022年4月組織変更対応（支店→リージョン、営業所→エリア）
    var attachHeaderStr2 = ["#rspan,#rspan,#rspan,#rspan,#rspan,#rspan,計画,実績,遂行率,特定施設<br>個別計画,理論計画①,#cspan,#cspan,理論計画②,#cspan,#cspan,エリア案,決定,前同比"];
##    var attachHeaderStr2 = ["#rspan,#rspan,#rspan,#rspan,#rspan,#rspan,計画,実績,遂行率,特定施設<br>個別計画,理論計画①,#cspan,#cspan,理論計画②,#cspan,#cspan,営業所案,決定,前同比"];
## mod End   2022/5/20 R.Yoshida 2022年4月組織変更対応（支店→リージョン、営業所→エリア）
    var attachHeaderStr3 = ["#rspan,#rspan,#rspan,#rspan,#rspan,#rspan,#rspan,#rspan,#rspan,#rspan,増分,計画,前同比,増分,計画,前同比,#rspan,#rspan,#rspan"];
	## mod Start 2021/7/2 H.Kaneko Step4UAT課題13
    ##var initWidths       = ["0,110,140,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80"];
    var initWidths       = ["0,110,100,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68"];
    ## mod End 2021/7/2 H.Kaneko Step4UAT課題13
    var colAlign         = ["left,left,left,right,right,right,right,right,right,right,right,right,right,right,right,right,right,right,right"];
    var colTypes         = ["ro,ro,ro,ron,ron,ron,ron,ron,ron,ron,ron,ron,ron,ron,ron,ron,ron,ron,ron"];
    var resizing         = ["false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false"];
    var tooltips         = ["false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false"];
    var addHeaderStr = ",#cspan,#cspan,#cspan,#cspan,#cspan";
    var addAttachHeaderStr1 = ",前々々期<br>実績,前々期<br>実績,前期<br>実績,当期,#cspan,#cspan";
    var addAttachHeaderStr2 = ",#rspan,#rspan,#rspan,計画,実績,遂行率";
    var addAttachHeaderStr3 = ",#rspan,#rspan,#rspan,#rspan,#rspan,#rspan";
    ## mod Start 2021/7/2 H.Kaneko Step4UAT課題13
    ##var addInitWidths = ",80,80,80,80,80,80";
    var addInitWidths = ",68,68,68,68,68,68";
    ## mod End 2021/7/2 H.Kaneko Step4UAT課題13
    var addColAlign = ",right,right,right,right,right,right";
    var addColTypes = ",ron,ron,ron,ron,ron,ron";
    var addResizing = ",false,false,false,false,false,false";
    var addTooltips = ",false,false,false,false,false,false";
    #if ($deliveryResultSummaryDtoList)
    #foreach($deliveryResultSummaryDto in $deliveryResultSummaryDtoList)
        #if ($deliveryResultSummaryDto.getProdSummary())
        #set ($refProdName = $deliveryResultSummaryDto.getProdSummary().getProdName())
        #end
        headerStr.push("," + "$!refProdName" + addHeaderStr);
        attachHeaderStr1.push(addAttachHeaderStr1);
        attachHeaderStr2.push(addAttachHeaderStr2);
        attachHeaderStr3.push(addAttachHeaderStr3);
        initWidths.push(addInitWidths);
        colAlign.push(addColAlign);
        colTypes.push(addColTypes);
        resizing.push(addResizing);
        tooltips.push(addTooltips);
    #end
    #end
    ${GridObjName}.setHeader(headerStr.join(""));
    ${GridObjName}.attachHeader(attachHeaderStr1.join(""));
    ${GridObjName}.attachHeader(attachHeaderStr2.join(""));
    ${GridObjName}.attachHeader(attachHeaderStr3.join(""));
    ${GridObjName}.setInitWidths(initWidths.join(""));
    ${GridObjName}.setColAlign(colAlign.join(""));
    ${GridObjName}.setColTypes(colTypes.join(""));
    ${GridObjName}.enableResizing(resizing.join(""));
    ${GridObjName}.enableTooltips(tooltips.join(""));
##  ${GridObjName}.enableDistributedParsing(true,50,385);
    ${GridObjName}.enableAutoHeight(true, getGridHeight('dps302C03', $!gridHeight));
##  ${GridObjName}.objBox.style.overflowX="scroll";
##  ${GridObjName}.objBox.style.overflowY="scroll";
    ${GridObjName}.enableBlockSelection();
    ${GridObjName}.forceLabelSelection(true);
    ${GridObjName}.setCSVDelimiter("\t");
##  ${GridObjName}.setNumberFormat("0,000",2);
##  ${GridObjName}.setNumberFormat("0,000",3);
##  ${GridObjName}.setNumberFormat("0,000",4);
##  ${GridObjName}.setNumberFormat("0,000",5);
##  ${GridObjName}.setNumberFormat("0,000",6);
##  ${GridObjName}.setNumberFormat("00.0",7);
##  ${GridObjName}.setNumberFormat("0,000",8);
##  ${GridObjName}.setNumberFormat("0,000",9);
##  ${GridObjName}.setNumberFormat("0,000",10);
##  ${GridObjName}.setNumberFormat("00.0",11);
##  ${GridObjName}.setNumberFormat("0,000",12);
##  ${GridObjName}.setNumberFormat("0,000",13);
##  ${GridObjName}.setNumberFormat("00.0",14);
##  ${GridObjName}.setNumberFormat("0,000",15);
##  ${GridObjName}.setNumberFormat("0,000",16);
##  ${GridObjName}.setNumberFormat("00.0",17);
    ${GridObjName}.setNumberFormat("0,000",3);
    ${GridObjName}.setNumberFormat("0,000",4);
    ${GridObjName}.setNumberFormat("0,000",5);
    ${GridObjName}.setNumberFormat("0,000",6);
    ${GridObjName}.setNumberFormat("0,000",7);
    ${GridObjName}.setNumberFormat("00.0",8);
    ${GridObjName}.setNumberFormat("0,000",9);
    ${GridObjName}.setNumberFormat("0,000",10);
    ${GridObjName}.setNumberFormat("0,000",11);
    ${GridObjName}.setNumberFormat("00.0",12);
    ${GridObjName}.setNumberFormat("0,000",13);
    ${GridObjName}.setNumberFormat("0,000",14);
    ${GridObjName}.setNumberFormat("00.0",15);
    ${GridObjName}.setNumberFormat("0,000",16);
    ${GridObjName}.setNumberFormat("0,000",17);
    ${GridObjName}.setNumberFormat("00.0",18);
    #if ($deliveryResultSummaryDtoList)
##  #set($idx = 17)
    #set($idx = 18)
    #foreach($entry in $deliveryResultSummaryDtoList)
    #set ($idx = $idx + 1)
    ${GridObjName}.setNumberFormat("0,000",$idx);
    #set ($idx = $idx + 1)
    ${GridObjName}.setNumberFormat("0,000",$idx);
    #set ($idx = $idx + 1)
    ${GridObjName}.setNumberFormat("0,000",$idx);
    #set ($idx = $idx + 1)
    ${GridObjName}.setNumberFormat("0,000",$idx);
    #set ($idx = $idx + 1)
    ${GridObjName}.setNumberFormat("0,000",$idx);
    #set ($idx = $idx + 1)
    ${GridObjName}.setNumberFormat("00.0",$idx);
    #end
    #end
    ${GridObjName}.init();
##  ${GridObjName}.splitAt(2);
    ${GridObjName}.splitAt(3);
    ${GridObjName}.enableEditEvents(true, false, true);
    ##  --- 編集中に登録ボタンが押された場合のチェッカー
    window.editValueChecker = new EditingValueChecker(${GridObjName},'$text.get("DPC1036E",[""])' );
    ${GridObjName}.attachEvent("onEditCell",function(stage,rowId,cellInd,newvalue,oldvalue){
		## --- 編集中に登録ボタンが押された場合のチェック用に値とstageを保持 ---
		window.editValueChecker.saveState(stage,newvalue);
        if(stage == 1){
            editFlg=true;
            setIme(${GridObjName},rowId,cellInd,"inactive",10);
        }
        if(stage == 2){
            if(newvalue.toString() != oldvalue.toString()){
                intCheck(${GridObjName},rowId,cellInd,newvalue);
                minusStyle(${GridObjName},rowId, cellInd);
                doEditCalc(new Array(cellInd.toString()));
            }
        }
        return true;
    });
    ${GridObjName}.attachEvent("onRowSelect",function(rowId,cellInd){
        ${GridObjName}.editCell();
    });
    ${GridObjName}.attachEvent("onKeyPress",function(keycode,ctrl,shift){
        if(!(currentCellMove(${GridObjName},keycode))){return false;}
        copyBlock(${GridObjName}, keycode, ctrl, shift,inputColumnIdArr);
##      if (keycode == 86 && ctrl) {
##          doEditCalc(inputColumnIdArr);
##          editFlg=true;
##      }
        return true;
    });
    ${GridObjName}.attachEvent("onRowPaste", function(rowId){
        doEditCalc(inputColumnIdArr);
        editFlg=true;
        return true;
    });
}

//--------------------------------------------------------------------------------------------
##編集時の計算処理
function doEditCalc(columnIdArr){

    ## 計画を集計、設定
    for(colIndex=0; colIndex<columnIdArr.length; colIndex++){
        setSum(${GridObjName},columnIdArr[colIndex]);
    }

    ## 積み上げをヘッダーに設定
    #if($headerColumnId != -1)
        var pl = 0;
        for (rowId = 1; rowId <= ${GridObjName}.getRowsNum(); rowId++) {
            var rowType = ${GridObjName}.getUserData(rowId, 'rowType');
            if(rowType == "input"){
##              var inputValue = convertToInteger(${GridObjName}, rowId, 16);
                var inputValue = convertToInteger(${GridObjName}, rowId, 17);
                pl = pl + inputValue;
            }
        }
        ${GridObjName2}.cells(1, $headerColumnId).setValue(pl);
    #end

    ## 差額計算処理
    for(colIndex=0; colIndex<columnIdArr.length; colIndex++){

        ## [営業所欄差額]上位計画の決定欄と比較する(異なる列との比較)
##      setSagakuByColumn(${GridObjName},16,15,15);
        setSagakuByColumn(${GridObjName},17,16,16);

        ## [決定欄差額]上位計画の決定欄と比較する(同列比較)
##      if(columnIdArr[colIndex] == 16){
        if(columnIdArr[colIndex] == 17){
            setSagaku(${GridObjName},columnIdArr[colIndex]);
        }
    }

    ## 前同比計算処理
##  setRate2(${GridObjName},17,16,15);
    setRate2(${GridObjName},18,17,16);

    ## ヘッダー表示処理
    minusStyle(${GridObjName2},1, 0);
    minusStyle(${GridObjName2},1, 1);
    sagakuStyle(${GridObjName2},1, 2);
    minusStyle(${GridObjName2},1, 3);
    minusStyle(${GridObjName2},1, 4);
    sagakuStyle(${GridObjName2},1, 5);
    minusStyle(${GridObjName2},1, 6);
    minusStyle(${GridObjName2},1, 7);
    sagakuStyle(${GridObjName2},1, 8);

    ## 試算タイプが営⇒担の場合、[チ-担]の調整金額は非表示(背景色グレー)
    #if($!calcType && $calcType.getDbValue().equals("2"))
       hideTeamMrChoseiValue();
    #end
}
##[チ-担]の調整金額を非表示(背景色グレー)にする
function hideTeamMrChoseiValue() {
    for(colIndex=0; colIndex<inputColumnIdArr.length; colIndex++){
        ## [チ-担]行を非表示にする
        for (rowId = 1; rowId <= ${GridObjName}.getRowsNum(); rowId++) {
            var cells = ${GridObjName}.cells(rowId, inputColumnIdArr[colIndex]);
            var subValue = cells.getAttribute("sub");
            if(cells.getAttribute("sub") == "target") {
                var subId = cells.getAttribute("subId");
                ##[subId!=0]は[チ-担]行
                if (subId != null && subId.toString() != "0") {
                    cells.setValue("");
                    cells.cell.style.color = "";
                    cells.cell.style.backgroundColor = "#DCDCDC";
                    ## add start 2017/11/24 M.Wada B17-0191_【DPS】計画支援_施設マスタ取込み
                    ##[チ-担]の調整金額を非表示とする際、営業所調整計画の値が0の場合は営業所調整計画の背景色をグレーとする
                    ##　※[チ-担]の調整金額が非表示かつ営業所調整計画が0であるにもかかわらず背景色がオレンジとなっている不具合の対応
                    ##　※[チ-担]の調整金額を非表示とするなら、そもそも[チ-担]の調整金額を算出しないようにするのが正しい対応方法だと思われるが、影響範囲が見切れないため対処療法的にこの修正とする
                    var eicyoCells = ${GridObjName}.cells(2, inputColumnIdArr[colIndex]);
                    if(isInteger(eicyoCells.getValue()) && eicyoCells.getValue() == 0 ){
                        eicyoCells.cell.style.backgroundColor = "#DCDCDC";
                    }
                    ## add end   2017/11/24 M.Wada B17-0191_【DPS】計画支援_施設マスタ取込み
                }
            }
        }
    }
}
##登録、試算時入力チェック
function updateValidation() {
    for (rowId = 1; rowId <= ${GridObjName}.getRowsNum(); rowId++) {
        if(${GridObjName}.getUserData(rowId,"rowType") != "input"){
            continue;
        }
##      msgHeader = '担当者【' + ${GridObjName}.cells(rowId, 1).getValue() + '】の';
        msgHeader = '担当者【' + ${GridObjName}.cells(rowId, 2).getValue() + '】の';

        ## 営業所案
##      value = ${GridObjName}.cells(rowId, 15).getValue().toString();
        value = ${GridObjName}.cells(rowId, 16).getValue().toString();
##      amountValidation('営業所案',value,10,true,msgHeader);
## mod Start 2022/5/20 R.Yoshida 2022年4月組織変更対応（支店→リージョン、営業所→エリア）
        amountValidation('エリア案',value,11,true,msgHeader);
##        amountValidation('営業所案',value,11,true,msgHeader);
## mod End   2022/5/20 R.Yoshida 2022年4月組織変更対応（支店→リージョン、営業所→エリア）

        ## 決定
##      value = ${GridObjName}.cells(rowId, 16).getValue().toString();
##      amountValidation('決定',value,10,true,msgHeader);
        value = ${GridObjName}.cells(rowId, 17).getValue().toString();
        amountValidation('決定',value,11,true,msgHeader);
    }
    return validation();
}
## 検索処理
function dps302C03F05() {
    ##確認
    if (editFlg) {
        if (!confirm('$text.get("DPC999C99.001","dialogue")')) {
            ## キャンセルの場合、変更前のプルダウンに戻す。
            document.getElementById("insType").value = preInsType;
            return false;
        }
    }
    var actionPath = '$link.setAction('dps302C03F05')';
    document.dps302C03Form.action = actionPath;
    document.dps302C03Form.submit();
    dps302C03F10 = blockIt;
    dps302C03F15 = blockIt;
    dps302C03F05 = blockIt;
}
## 実績参照範囲変更時
function dps302C03F20() {
    ##確認
    if (editFlg) {
        if (!confirm('$text.get("DPC999C99.001","dialogue")')) {
            ## キャンセルの場合、変更前のプルダウンに戻す。
            document.getElementById("refDeliveryScope").value = refDeliveryScope;
            return false;
        }
    }
    var actionPath = '$link.setAction('dps302C03F20')';
    document.dps302C03Form.action = actionPath;
    document.dps302C03Form.submit();
    dps302C03F10 = blockIt;
    dps302C03F15 = blockIt;
    dps302C03F05 = blockIt;
    dps302C03F20 = blockIt;
}
##登録処理
function dps302C03F10() {
    ## --- 編集中セル値の登録時チェック ---
	if(window.editValueChecker.isValid() == false){
		return;
	}

	##入力チェックの前に入力行を確定
    ${GridObjName}.editStop();
    ##入力チェック
    if (!updateValidation(false)) {
        return;
    }
    ## 調整金額チェック
    #if($statusForMrPlan)
    #if($statusForMrPlan == "5" || $statusForMrPlan == "6")
    if(!executeSagakuCheck()){
        return;
    }
    #end
    #end
    ##確認
    if (!confirm('$text.get("DPS302C03.001","dialogue")')) {
        return;
    }
    ##--> 確定していたら、確定解除をしてから編集し、再度確定する仕様
##    ##営業所長以上の場合、確定済みでもダイアログを表示し、登録可能
##    #if($statusForMrPlan == "7")
##        if (!confirm('$text.get("DPS302C03.010","dialogue")')) {
##            return;
##        }
##    #end
    ##<-- 旧仕様ため、コメント削除

    ##送信データ作成
    for (i = 1; i <= ${GridObjName}.getRowsNum(); i++) {
        var userData = ${GridObjName}.getUserData(i, 'updateRowId');
        if(userData == null || userData == ""){continue;}
##      userData += "," + ${GridObjName}.cells(i,15).getValue();
##      userData += "," + ${GridObjName}.cells(i,16).getValue();
        userData += "," + ${GridObjName}.cells(i,16).getValue();
        userData += "," + ${GridObjName}.cells(i,17).getValue();
        ${GridObjName}.setUserData(i, 'updateRowId', userData);
    }
    addRowIdList(document.dps302C03Form, ${GridObjName}, 'rowIdList', 'updateRowId');

    ##送信
    var actionPath = '$link.setAction('dps302C03F10Execute')';
    document.dps302C03Form.action = actionPath;
    document.dps302C03Form.submit();
    dps302C03F05 = blockIt;
    dps302C03F15 = blockIt;
    dps302C03F10 = blockIt;
    dps302C03F20 = blockIt;
}

##確定処理
function dps302C03F15() {
    ##入力チェックの前に入力行を確定
    ${GridObjName}.editStop();
    ##入力チェック
    if (!updateValidation(false)) {
        return;
    }
    ## 調整金額チェック
    if(!executeSagakuCheck()){
        return;
    }
    ##確認
    if (!confirm('$text.get("DPS302C03.002","dialogue")')) {
        return;
    }

    ##送信データ作成
    for (i = 1; i <= ${GridObjName}.getRowsNum(); i++) {
        if(${GridObjName}.getUserData(i, "rowType") != "input"){
            continue;
        }
        var userData = ${GridObjName}.getUserData(i, 'updateRowId');
        if(userData == null || userData == ""){continue;}
##      userData += "," + ${GridObjName}.cells(i,15).getValue();
##      userData += "," + ${GridObjName}.cells(i,16).getValue();
        userData += "," + ${GridObjName}.cells(i,16).getValue();
        userData += "," + ${GridObjName}.cells(i,17).getValue();
        ${GridObjName}.setUserData(i, 'updateRowId', userData);
    }
    addRowIdList(document.dps302C03Form, ${GridObjName}, 'rowIdList', 'updateRowId');

    ##送信
    var actionPath = '$link.setAction('dps302C03F15Execute')';
    document.dps302C03Form.action = actionPath;
    document.dps302C03Form.submit();
    dps302C03F05 = blockIt;
    dps302C03F10 = blockIt;
    dps302C03F15 = blockIt;
    dps302C03F20 = blockIt;
}

## 過去実績参照ダイアログ
function openResultDialog() {

    #if ($form.bean.isTeamRank)
        var url ="$link.setAction('dps913C00F00').addQueryData('category',$!form.bean.getCategory()).addQueryData('sosCd3',$!form.bean.getSosCd3()).addQueryData('sosCd4',$!form.bean.getSosCd4()).addQueryData('prodCode',$!form.bean.getProdCode()).addQueryData('page','4')";
    #else
        var url ="$link.setAction('dps913C00F00').addQueryData('category',$!form.bean.getCategory()).addQueryData('sosCd3',$!form.bean.getSosCd3()).addQueryData('prodCode',$!form.bean.getProdCode()).addQueryData('page','4'))";
    #end
    var width = 990;
    if(screen.availWidth > 990){
        width = screen.availWidth;
    }
    var height = dialogHeight=screen.availHeight - 40;
    window.open(url,'dps913C00',"width=" + width +"px,height=" + height +"px");
}

## コピーダイアログを閉じる
function closeCopyDialog(){
    tb_remove();
}

## 論理計画１を営業所案にコピー
function copyTheoreticalValue1toOfficeValueY(){
    if(window.confirm('$text.get("DPS302C03.003","dialogue")')){
##      copyColData(${GridObjName}, 10, 15);
        copyColData(${GridObjName}, 11, 16);
        closeCopyDialog();
        doEditCalc(inputColumnIdArr);
        editFlg = true;
    }
}

## 論理計画１を決定にコピー
function copyTheoreticalValue1toPlannedValueY(){
    if(window.confirm('$text.get("DPS302C03.004","dialogue")')){
##      copyColData(${GridObjName}, 10, 16);
        copyColData(${GridObjName}, 11, 17);
        closeCopyDialog();
        doEditCalc(inputColumnIdArr);
        editFlg = true;
    }
}

## 論理計画２を営業所案にコピー
function copyTheoreticalValue2toOfficeValueY(){
    if(window.confirm('$text.get("DPS302C03.005","dialogue")')){
##      copyColData(${GridObjName}, 13, 15);
        copyColData(${GridObjName}, 14, 16);
        closeCopyDialog();
        doEditCalc(inputColumnIdArr);
        editFlg = true;
    }
}

## 論理計画２を決定にコピー
function copyTheoreticalValue2toPlannedValueY(){
    if(window.confirm('$text.get("DPS302C03.006","dialogue")')){
##      copyColData(${GridObjName}, 13, 16);
        copyColData(${GridObjName}, 14, 17);
        closeCopyDialog();
        doEditCalc(inputColumnIdArr);
        editFlg = true;
    }
}

## 営業所案を決定にコピー
function copyOfficeValueYtoPlannedValueY(){
    if(window.confirm('$text.get("DPS302C03.007","dialogue")')){
##      copyColData(${GridObjName}, 15, 16);
        copyColData(${GridObjName}, 16, 17);
        closeCopyDialog();
        doEditCalc(inputColumnIdArr);
        editFlg = true;
    }
}
## リンク移動
function executeLink() {
##    var actionPath = '$link.setAction('dps302C01F00')';
    var actionPath ="$link.setAction('dps302C01F00').addQueryData('category',$!form.bean.getCategory())";
    document.dps302C03Form.action = actionPath;
    document.dps302C03Form.submit();
}
## ダイアログを閉じる(画面内の閉じるボタン)
function closeWindow() {
    if (editFlg) {
        if (!window.confirm('$text.get("DPC999C99.001","dialogue")')) {
            return false;
        }
    }
    window.close();
}
## ダイアログを閉じる(ウィンドウの閉じるボタン)
window.onbeforeunload = function(event) {
    if (editFlg){
        var closeMsg = "$text.get('DPC999C99.000','dialogue')";
        event = (event || window.event);
        var flg = (event.clientX > 0 && event.clientY < 0);
        if (flg) {
            event.returnValue = closeMsg;
        }
    }
};
##リンク移動確認
function linkClick(){
    if(editFlg){
        var answer = window.confirm('$text.get("DPC999C99.001","dialogue")');
        if(!answer){
            return false;
        }
    }
    return true;
}

## 調整金額チェック
function executeSagakuCheck() {
    var sagakuFlg = false;
    ## 試算タイプが営⇒担の場合、かつ、営業所ユーザの場合
    #if($!calcType && $calcType.getDbValue().equals("2") && !$form.bean.isTeamRank)
##      var cell = ${GridObjName}.cells(2, 16);
        var cell = ${GridObjName}.cells(2, 17);
        if (cell != null) {
            var cValue = cell.getValue();
            if (cValue != null && cValue.toString() != "0") {
                sagakuFlg = true;
            }
        }
    ## 上記以外の場合
    #else
    var rowId = #if($form.bean.isTeamRank) 2 #else 3 #end;
    for (; rowId <= ${GridObjName}.getRowsNum(); rowId++) {
##      var cell = ${GridObjName}.cells(rowId, 16);
        var cell = ${GridObjName}.cells(rowId, 17);
        if(cell.getAttribute("sub") == "target"){
            var value = cell.getValue().toString();
            if (value != "") {
                if (value != "0") {
                    sagakuFlg = true;
                }
            }
        }
    }
    #end

    #if($form.bean.insType == "1")
        var rowInfo = "対象【" + '$form.bean.headerUh' + "】";
    #elseif($form.bean.insType == "2")
        var rowInfo = "対象【" + '$form.bean.headerP' + "】";
    #end
    if(sagakuFlg){
        if (!confirm('$text.get("DPS302C03.008","dialogue", ["' + rowInfo + '"])')) {
            return false;
        }
    }
    return true;
}
//-->
</script>

<div class="disp" style="padding:0px;margin:5px;">
<form name="dps302C03Form" method="post">
    ##品目情報
    <div align="left" style="float: left;width: 70%;">
    <table class="gridTableLine" cellspacing="0" cellpadding="0" width ="100%">
        <tbody class="tableBody">
            <tr>
                <td class="header" style="width:70px;">組織</td>
                <td id="sos">　</td>
                <td class="header" style="width:80px;">品目</td>
                <td>$prodName</td>
            </tr>
        </tbody>
    </table>
    </div>
    ##最終更新情報
    <div class="label" align="right" style="float: left;width: 30%;">
        #upDateInfo($!{resultData.lastUpdateUser},$!{resultData.lastUpdate})
        <a href="#" onclick="if(linkClick())executeLink()">試算結果詳細画面へ</a>
    </div>
    ##メイン情報
    <div class="label" align="left" style="float: left;width: 100%;">
        ##ヘッダー情報グリッド表示
        #loadingGridDiv2("${GridObjName2}", "${CoverId2}", "width: 100%; clear: both;")
        <table style="margin-top:4px; width: 100%;">
            <tr><td style="text-align:left;">
                #if($!form.bean.insType == "9")
                    #set($disabled = "disabled")
                #else
                    #set($disabled = "")
                #end
                #if ($!security.hasAuthEdit("DPS302C03"))
                    #if ($form.getRequestData("DATA_EXIST"))
                        #if($form.bean.isTeamRank)
                            ## ALの場合
                            #if($statusForMrPlan == "5" || $statusForMrPlan == "6")
                            <input type="button" value="担当者別計画を登録する"  style="width:140px;" onclick="dps302C03F10()" $!disabled />
                            <input type="button" value="担当者別計画を確定する"  style="width:140px;" onclick="dps302C03F15()" $!disabled />
                            #else
                            <input type="button" value="担当者別計画を登録する"  style="width:140px;" onclick="dps302C03F10()" disabled />
                            <input type="button" value="担当者別計画を確定する"  style="width:140px;" onclick="dps302C03F15()" disabled />
                            #end
                        #else
                            ## 営業所の場合
                            <input type="button" value="担当者別計画を登録する"  style="width:140px;" onclick="dps302C03F10()" $!disabled />
                        #end
                    #else
                        <input type="button" value="担当者別計画を登録する"  style="width:140px;" disabled/>
                        #if($form.bean.isTeamRank)
                        <input type="button" value="担当者別計画を確定する" style="width:140px;" disabled/>
                        #end
                    #end
                #end
                    <input type="button" value="閉じる" onclick="closeWindow()" />
                </td>
                <td style="text-align:right;">
                    #selectWithFunc("refDeliveryScope", $form.bean.refDeliveryScopes, $form.bean.refDeliveryScope, "dps302C03F20()")　
                    <input type="button" value="過去実績参照" onclick="openResultDialog()" />
                </td>
            </tr>
        </table>
        ##明細情報グリッド表示
        <table cellspacing="0" cellpadding="0" style="width:100%; margin-top:5px; margin-bottom:5px;">
            <tr>
                <td width="50px">#selectWithFunc ("insType", $form.bean.insTypes, $!form.bean.insType, "dps302C03F05()")</td>
                #if ($!form.bean.insType)
                #if ($!form.bean.insType != "9")
                    ## ALの場合、担当者別計画公開・AL修正に表示
                    #if($form.bean.isTeamRank)
                        #if($statusForMrPlan == "5" || $statusForMrPlan == "6")
                            <td width="150px">&nbsp;&nbsp;<a href="#TB_inline?height=400&width=300&inlineId=copyDialog&modal=true" class="thickbox">翌期計画にコピー</a></td>
                        #else
                            <td width="150px"></td>
                        #end
                    #else
                        #if($statusForMrPlan == "4"|| $statusForMrPlan == "5" || $statusForMrPlan == "6")
                            <td width="150px">&nbsp;&nbsp;<a href="#TB_inline?height=400&width=300&inlineId=copyDialog&modal=true" class="thickbox">翌期計画にコピー</a></td>
                        ## 担当者別計画確定時は、表示しない
                        #else
                            <td width="150px"></td>
                        #end
                    #end
                #end
                #end
                #if($form.bean.category == "$vaccineCode")
                    <td class="label" style="text-align:right;vertical-align:bottom;">$consts.tableHeaderB</td>
                #else
                    <td class="label" style="text-align:right;vertical-align:bottom;">$consts.tableHeaderY</td>
                #end
            </tr>
        </table>
        #loadingGridDiv2("${GridObjName}", "${CoverId}", "width: 100%; clear: both;")
        ## mod Start 2021/7/8 H.Kaneko Step4UAT課題13
        ##<div class="guide">
        <div class="guide" style="padding-top:0px;">
        ## mod End 2021/7/8 H.Kaneko Step4UAT課題13
## mod Start 2022/5/20 R.Yoshida 2022年4月組織変更対応（支店→リージョン、営業所→エリア）
        ※エリア案及び決定は、10千円単位で入力してください。<br>
##        ※営業所案及び決定は、10千円単位で入力してください。<br>
## mod End   2022/5/20 R.Yoshida 2022年4月組織変更対応（支店→リージョン、営業所→エリア）
        #if($form.bean.isTeamRank)
        ※確定するをクリックすると、担当者別計画(決定)を確定します。<br>
        ※確定する場合は、調整金額が0になるように担当者別計画(決定)を調整してください。<br>
        #end
        </div>
    </div>
    <input type="hidden" id="prodCode" name="prodCode" value="$!form.bean.getProdCode()" />
    <input type="hidden" id="prodName" name="prodName" value="$!{resultData.prodName}" />
    <input type="hidden" id="isTeamRank" name="isTeamRank" value="$!form.bean.getIsTeamRank()" />
    #token()
    <input type="hidden" id="sosCd2" name="sosCd2" />
    <input type="hidden" id="sosCd3" name="sosCd3" value="$!form.bean.getSosCd3()" />
    <input type="hidden" id="sosCd4" name="sosCd4" value="$!form.bean.getSosCd4()" />
    <input type="hidden" id="jgiNo" name="jgiNo"  />
    <input type="hidden" id="initSosCodeValue" name="initSosCodeValue"  value="$!security.defaultSosCd"/>
## add start 2018/06/25 H.Shiota J18-0002_2018年4月組織変更対応（計画支援）
    <input type="hidden" id="underSosCnt" name="underSosCnt"  />
## add end   2018/06/25 H.Shiota J18-0002_2018年4月組織変更対応（計画支援）
</form>
</div>
<div id="copyDialog" style="display:none;">
<div align="right">
    <a href="javaScript:closeCopyDialog();">閉じる</a><br />
</div>
【翌期計画にコピー】<br />
#if ($form.bean.isTeamRank)
    ##ALの場合
    ## 担当者別計画公開・AL修正
    #if($statusForMrPlan == "5" || $statusForMrPlan == "6")
    <a href="javaScript:copyTheoreticalValue1toPlannedValueY()" >理論計画①を決定にコピー</a><br />
    <a href="javaScript:copyTheoreticalValue2toPlannedValueY()" >理論計画②を決定にコピー</a><br />
## mod Start 2022/5/20 R.Yoshida 2022年4月組織変更対応（支店→リージョン、営業所→エリア）
    <a href="javaScript:copyOfficeValueYtoPlannedValueY()" >エリア案を決定にコピー</a>
##    <a href="javaScript:copyOfficeValueYtoPlannedValueY()" >営業所案を決定にコピー</a>
## mod End   2022/5/20 R.Yoshida 2022年4月組織変更対応（支店→リージョン、営業所→エリア）
    #end
#else
##営業所の場合
    ## チーム別計画確定
    #if($statusForMrPlan == "4")
## mod Start 2022/5/20 R.Yoshida 2022年4月組織変更対応（支店→リージョン、営業所→エリア）
    <a href="javaScript:copyTheoreticalValue1toOfficeValueY()" >理論計画①をエリア案にコピー</a><br />
    <a href="javaScript:copyTheoreticalValue2toOfficeValueY()" >理論計画②をエリア案にコピー</a><br />
##    <a href="javaScript:copyTheoreticalValue1toOfficeValueY()" >理論計画①を営業所案にコピー</a><br />
##    <a href="javaScript:copyTheoreticalValue2toOfficeValueY()" >理論計画②を営業所案にコピー</a><br />
## mod End   2022/5/20 R.Yoshida 2022年4月組織変更対応（支店→リージョン、営業所→エリア）
    #end
    ## 担当者別計画公開・AL修正
    #if($statusForMrPlan == "5" || $statusForMrPlan == "6")
## mod Start 2022/5/20 R.Yoshida 2022年4月組織変更対応（支店→リージョン、営業所→エリア）
    <a href="javaScript:copyTheoreticalValue1toOfficeValueY()" >理論計画①をエリア案にコピー</a><br />
    <a href="javaScript:copyTheoreticalValue1toPlannedValueY()" >理論計画①を決定にコピー</a><br />
    <a href="javaScript:copyTheoreticalValue2toOfficeValueY()" >理論計画②をエリア案にコピー</a><br />
    <a href="javaScript:copyTheoreticalValue2toPlannedValueY()" >理論計画②を決定にコピー</a><br />
    <a href="javaScript:copyOfficeValueYtoPlannedValueY()" >エリア案を決定にコピー</a>
##    <a href="javaScript:copyTheoreticalValue1toOfficeValueY()" >理論計画①を営業所案にコピー</a><br />
##    <a href="javaScript:copyTheoreticalValue1toPlannedValueY()" >理論計画①を決定にコピー</a><br />
##    <a href="javaScript:copyTheoreticalValue2toOfficeValueY()" >理論計画②を営業所案にコピー</a><br />
##    <a href="javaScript:copyTheoreticalValue2toPlannedValueY()" >理論計画②を決定にコピー</a><br />
##    <a href="javaScript:copyOfficeValueYtoPlannedValueY()" >営業所案を決定にコピー</a>
## mod End   2022/5/20 R.Yoshida 2022年4月組織変更対応（支店→リージョン、営業所→エリア）
    #end
#end
</div>
