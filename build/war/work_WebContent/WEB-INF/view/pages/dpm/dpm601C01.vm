## (ワ)施設品目別計画編集画面
#set($pageTitle = $text.get("dpm601C01","title"))
#set($bodyOnloadMethod = "dpm601C01F00()")
#set($dataListFileName = "dpm601C01x01.vm")
#set($dataListFileName2 = "dpm601C01x02.vm")
## 検索結果
#set($enableEntry = false)
#if($form.getRequestData("DPM601C01_DATA_R_SEARCH_RESULT"))
    #set($resultDetail = $form.getRequestData("DPM601C01_DATA_R_SEARCH_RESULT").detailList)
    #set($enableEntry = $form.getRequestData("DPM601C01_DATA_R_SEARCH_RESULT").enableEntry)
#end
## 施設名
#set($insName = "　")
#if($form.bean.insName && $form.bean.insName != "")
    #set($insName = $form.bean.insName)
#end
## 府県名
#set($shikuchosonMeiKj = "")
#if($!form.bean.shikuchosonMeiKj && $!form.bean.shikuchosonMeiKj != "")
    #set($shikuchosonMeiKj = $!form.bean.shikuchosonMeiKj)
#end
## 重点先/一般先
#if($form.bean.activityType && $form.bean.activityType != "")
    #if($form.bean.activityType == "2")
        #set($activityTypeLabel = "一般先")
    #else
        #set($activityTypeLabel = "重点先")
    #end
#else
    #set($activityTypeLabel = "　")
#end
## 市区町村名
#set($fukenMeiKj = "")
#if($!form.bean.fukenMeiKj && $!form.bean.fukenMeiKj != "")
    #set($fukenMeiKj = $!form.bean.fukenMeiKj)
#end
## 実施計画区分
#set($plannedType = $security.getPlannedType().toString())
#set($plannedTypeStr = "")
#if ($plannedType == "PLANNED_1")
    #set($plannedTypeStr = "実施計画１")
#elseif ($plannedType == "PLANNED_2")
    #set($plannedTypeStr = "実施計画２")
#end
<script language="javascript">
<!--
document.getElementById("closeWindow").value = "true";

#set($GridObjName = "dpm601C01Grid")
#set($GridObjName2 = "dpm601C01Grid2")
#set($CoverId = "dpm601C01CoverId")
#set($gridHeight = $text.get("${GridObjName}","grid"))
var ${GridObjName};
var ${GridObjName2};
var editFlg = false;
## 表示時雑組織フラグ
var iniEtcSosFlg = false;

## 初期表示
function dpm601C01F00() {
    doInitGrid();
    doInitGrid2();
    ## 明細行のデータ読み込み
    if (document.getElementById("$dataListFileName")) {
        var loadXMLString = document.getElementById("$dataListFileName").value;
        if (loadXMLString != null && loadXMLString != "") {
            ${GridObjName}.loadXMLString(loadXMLString);
        }else{
            createDhtmlXGridLodingDelete("${CoverId}");
        }
    }
    ## 集計行のデータ読み込み
    if (document.getElementById("$dataListFileName2")) {
        var loadXMLString = document.getElementById("$dataListFileName2").value;
        if (loadXMLString != null && loadXMLString != "") {
            ${GridObjName2}.loadXMLString(loadXMLString);
            ## 施設合計行計算処理
            setAllRowSumOtherGrid(${GridObjName},${GridObjName2},2);
            setAllRowSumOtherGrid(${GridObjName},${GridObjName2},3);
            setAllRowSumOtherGrid(${GridObjName},${GridObjName2},4);
        }
    }
    ## 担当者・施設のセット
    ## 担当者選択時
    #if ($form.bean.jgiNo && $form.bean.jgiNo != "")
        sosApply("", "$!form.bean.jgiNo", "04","$!form.bean.etcSosFlg");
        var _etcSosFlg = document.getElementById('etcSosFlg');
        if(_etcSosFlg == true){
            iniEtcSosFlg = true;
        }
    ## チーム選択時
    #elseif ($form.bean.sosCd4 && $form.bean.sosCd4 != "")
        sosApply("$!form.bean.sosCd4", "", "04","$!form.bean.etcSosFlg");
    ## 特約店Ｇ選択時
    #elseif ($form.bean.sosCd3 && $form.bean.sosCd3 != "")
        sosApply("$!form.bean.sosCd3", "", "04","$!form.bean.etcSosFlg");
    ## 特約店部選択時
    #elseif ($form.bean.sosCd2 && $form.bean.sosCd2 != "")
        sosApply("$!form.bean.sosCd2", "", "04","$!form.bean.etcSosFlg");
    ## 全社選択時
    #else
        sosApply("", "", "04","$!form.bean.etcSosFlg");
    #end
}

## DHTMLXGrid生成
function doInitGrid() {
    ${GridObjName} = createDhtmlXGridLodingExt("${GridObjName}", "${CoverId}");
    ${GridObjName}.setHeader(",,,,");
    ${GridObjName}.setInitWidths("230,70,90,90,90");
    ${GridObjName}.setColAlign("left,center,right,right,right");
    ${GridObjName}.setColTypes("ro,ro,ron,ron,ron");
    ${GridObjName}.enableResizing("false,false,false,false,false");
    ${GridObjName}.enableTooltips("false,false,false,false,false");
    ${GridObjName}.enableDistributedParsing(true,50,300);
    ${GridObjName}.enableAutoHeight(true, getGridHeight('dpm601C01', $!gridHeight));
    ${GridObjName}.enableBlockSelection();
    ${GridObjName}.forceLabelSelection(true);
    ${GridObjName}.setCSVDelimiter("\t");
    ${GridObjName}.setNumberFormat("0,000",2);
    ${GridObjName}.setNumberFormat("0,000",3);
    ${GridObjName}.setNumberFormat("0,000",4);
    ${GridObjName}.setSizes();
    ${GridObjName}.setNoHeader(true);
    ${GridObjName}.init();
    ${GridObjName}.enableEditEvents(true, false, true);
    ${GridObjName}.attachEvent("onEditCell",function(stage,rowId,columnId,newvalue,oldvalue){
        if(stage == 1){
            setIme(${GridObjName},rowId,columnId,"inactive",10);
            editFlg = true;
        }
        if(stage == 2){
            if(newvalue.toString() != oldvalue.toString()){
                intCheck(${GridObjName},rowId,columnId,newvalue);
                tyChangeRate = ${GridObjName}.getUserData(rowId,"tyChangeRate");
                calcTBaseValue(${GridObjName}, rowId, columnId, rowId, columnId+1, tyChangeRate);
                setAllRowSumOtherGrid(${GridObjName},${GridObjName2},columnId);
                setAllRowSumOtherGrid(${GridObjName},${GridObjName2},4);
            }
        }
        return true;
    });
    ${GridObjName}.attachEvent("onRowSelect",function(rowId,columnId){
        ${GridObjName}.editCell();
    });
    ${GridObjName}.attachEvent("onKeyPress",function(keycode,ctrl,shift){
        if(!(currentCellMove(${GridObjName},keycode))){return false;}
        ## ペースト処理時
        copyBlock(${GridObjName}, keycode, ctrl, shift, new Array("3"));
        if (keycode == 86 && ctrl) {
            for (rowId = 1; rowId <= ${GridObjName}.getRowsNum(); rowId++) {
                ## T価ベース計算処理
                tyChangeRate = ${GridObjName}.getUserData(rowId,"tyChangeRate");
                calcTBaseValue(${GridObjName}, rowId, 3, rowId, 3+1, tyChangeRate);
            }
            setSumOtherGrid(${GridObjName}, ${GridObjName2}, 3);
            setSumOtherGrid(${GridObjName}, ${GridObjName2}, 4);
            editFlg = true;
        }
        return true;
    });
    ${GridObjName}.attachEvent("onMouseOver",function(rowId,cellInd){
        var title = "";
        if(cellInd == 3){
            title = ${GridObjName}.getUserData(rowId,"toolTip");
            if(title == null){
                title = "";
            }
            ${GridObjName}.cells(rowId,cellInd).cell.title = title;
        }
    });
}

function doInitGrid2() {
    if (${GridObjName2} == null) {
        ${GridObjName2} = createDhtmlXGrid("${GridObjName2}");
        ${GridObjName2}.setHeader("施設計画　$plannedTypeStr,#cspan,#cspan,#cspan,#cspan");
        ${GridObjName2}.attachHeader("品目名称,,B価ベース,#cspan,T価ベース",["","","border-bottom:0px;","",""],null);
        ${GridObjName2}.attachHeader("#rspan,#rspan,,修正欄,#rspan",["","","border-top:0px;","border-top-color:#93afba;border-left:0px;",""],null);
        ${GridObjName2}.setInitWidths("230,70,90,90,90");
        ${GridObjName2}.setColAlign("left,center,right,right,right");
        ${GridObjName2}.setColTypes("ro,ro,ron,ron,ron");
        ${GridObjName2}.enableResizing("false,false,false,false,false");
        ${GridObjName2}.enableTooltips("false,false,false,false,false");
        ${GridObjName2}.enableDistributedParsing(true,50,300);
        ${GridObjName2}.enableAutoHeight(true, 100);
        ${GridObjName2}.setNumberFormat("0,000",2);
        ${GridObjName2}.setNumberFormat("0,000",3);
        ${GridObjName2}.setNumberFormat("0,000",4);
        ${GridObjName2}.objBox.style.overflowX="hidden";
        ${GridObjName2}.objBox.style.overflowY="hidden";
        ${GridObjName2}.init();
        ${GridObjName2}.enableEditEvents(true, false, true);
        ${GridObjName2}.enableBlockSelection();
        ${GridObjName2}.forceLabelSelection(true);
        ${GridObjName2}.setCSVDelimiter("\t");
        ${GridObjName2}.attachEvent("onKeyPress",function(keycode,ctrl,shift){
            copyBlock(${GridObjName2}, keycode, ctrl, shift, new Array("2"));
            return true;
            });
        ${GridObjName2}.attachEvent("onBeforeSelect",function(newId,oldId){return;});
    }
}

## 【検索】市区町村選択ダイアログ コールバック
function dpm601C01AddrApply(fukenCode,shikuCode,fukenName,shikuName){
    document.getElementById("addrCodePref").value = fukenCode;
    document.getElementById("addrCodeCity").value = shikuCode;
    document.getElementById("shikuchosonMeiKjLabel").innerHTML = "<label>" + fukenName + "　" + shikuName + "</label>";
    document.getElementById("fukenMeiKj").value = fukenName;
    document.getElementById("shikuchosonMeiKj").value = shikuName;
}

## 【検索】施設選択画面呼出
function dpm911C00F00Search() {
    var func = "dpm601C01InsApplySearch";
    var insPtn = "01";
    var ptn = "02";
    var min = "04";
    var max = "04";
    var sosInitSosCodeValue = document.getElementById('initSosCodeValue').value;
    var jgiNo = document.getElementById('jgiNo').value;
    var url ='$link.setAction('dpm911C00F00')' + '?insApplyFuncName=' + func + '&insSelectPtnType=' + insPtn + '&sosSrchPtnType=' + ptn + '&sosMinSrchValue=' + min + '&sosMaxSrchGetValue=' + max + '&sosInitSosCodeValue=' + sosInitSosCodeValue + '&paramJgiNo=' + jgiNo + '&sosSearchNonFlg=false&paramJtnFlg=false&disableMallInsSelect=true';
    var args = new Array();
    openModalWindowW(url, func, args);
}

## 【検索】施設選択ダイアログ コールバック
function dpm601C01InsApplySearch(insNo, jgiNo, insName){
    document.getElementById("insNo").value = insNo;
    document.getElementById("insNameLabel").innerHTML = "<label>" + insName + "</label>";
    document.getElementById('insName').value = insName;
    sosApply("", jgiNo, "04");

    ## 施設情報取得
    var url ="$link.setAction('dpm911C00F10')";
    url = url.concat("?sFlg=true");
    url = url.concat("&jgiNo=").concat(jgiNo);
    url = url.concat("&insNo=").concat(insNo);
    var insResult = getPage(url);

    ## 活動区分、府県コード、市区町村コード、市区町村名 設定
    var insResultArray = insResult.split(",");
    var activityType = insResultArray[8];
    var fukenCode = insResultArray[6];
    var shikuCode = insResultArray[7];
    var shikuchosonMeiKj = insResultArray[5];
    var fukenMeiKj = insResultArray[9];
    if(activityType == "IPPAN"){
            document.getElementById("activityTypeLabel").innerHTML = "<label>一般先</label>";
            document.getElementById("activityType").value = "2";
    }else{
            document.getElementById("activityTypeLabel").innerHTML = "<label>重点先</label>";
            document.getElementById("activityType").value = "1";
    }

    ## 市区町村設定
    dpm601C01AddrApply(fukenCode,shikuCode,fukenMeiKj,shikuchosonMeiKj);
}

## 【検索】施設名 初期化
function dpm601C01InsNameClear(){
    document.getElementById("insNameLabel").innerHTML = "<label>　</label>";
    document.getElementById('insName').value = "";
}
## 【検索】施設コード 初期化
function dpm601C01InsNoClear(){
    document.getElementById('insNo').value = "";
}

## 検索処理
function dpm601C01F05() {
    if (searchValidation()) {
        if (editFlg) {
            if (!window.confirm('$text.get("DPC999C99.001","dialogue")')) {
                return;
            }
        }
        var actionPath = "$link.setAction('dpm601C01F05')";
        document.dpm601C01Form.action = actionPath;
        document.dpm601C01Form.submit();

        dpm601C01F05 = blockIt;
        dpm601C01F10Execute = blockIt;
        dpm600C01F05 = blockIt;
    }
}

## 検索時入力チェック
function searchValidation() {
    ## 入力フォーム
    var form = document.dpm601C01Form;

    var errorMsg = "";
    var isAdded = false;

    ## 施設コード
    var insNo = form.insNo.value;

    ## [必須]担当者または施設コード
    if(!isAdded){
        if(insNo == "") {
            errorMsg = '$text.get("DPC1003E",["施設コード"])';
            isAdded = addErrorInfo(!isEntered(""), errorMsg)
        }
    }
    if(insNo != "") {
        ## [数値]施設コード
        if(!isAdded){
            errorMsg = '$text.get("DPC1004E",["施設コード","半角数字"])';
            isAdded = addErrorInfo(!isNumber(insNo), errorMsg)
        }
    }
    return validation();
}

## 更新処理
function dpm601C01F10Execute() {
    ##入力チェック
    if (!executeValidation()) {
        return;
    }
    ##確認
    if (!confirm('$text.get("DPM601C01.001","dialogue")')) {
        return;
    }
    ##updateRowId→rowIdList
    var form = document.dpm601C01Form;
    ## ユーザデータに編集後の計画値を追加
    var rowNum = ${GridObjName}.getRowsNum();
    for (i = 0; i < rowNum; i++) {
        ##//i番目の列のrowIdを取得
        var rowId = ${GridObjName}.getRowId(i);
        ##//指定項目のみ取得し、hiddenをformに追加
        ##//集計行じゃない場合
        if(${GridObjName}.getUserData(rowId, "rowType") == "input"){
            var value = ${GridObjName}.cells(rowId, 3).getValue();
            var rowIdList = ${GridObjName}.getUserData(rowId, "updateRowId");
            var sendvalue = rowIdList + "," + value;
            var element = document.createElement('input');
            element.type = "hidden";
            element.name = "rowIdList";
            element.value = sendvalue;
            form.appendChild(element);
        }
    }
    ##送信
    form.action = '$link.setAction("dpm601C01F10Execute")';
    form.submit();

    dpm601C01F05 = blockIt;
    dpm601C01F10Execute = blockIt;
    dpm600C01F05 = blockIt;
}

## 更新時入力チェック
function executeValidation() {
    var rowNum = ${GridObjName}.getRowsNum();
    for (i = 0; i < rowNum; i++) {
        var id = ${GridObjName}.getRowId(i);
        ## メッセージ準備
        var rowInfo = "";
        rowInfo = ${GridObjName}.cells(id, 0).getValue();
        ## エラーチェック
        if(${GridObjName}.getUserData(id,"rowType") == "input"){
        	## [B価ベース]
            var checkValue = ${GridObjName}.cells(id, 3).getValue().toString();
            amountValidationNotTailCheck("", checkValue, 10, true, rowInfo);
        }
    }
    return validation();
}

## 施設品目別計画編集画面を開く
function dpm600C01F05(prodCode) {
    if (editFlg) {
        if (!window.confirm('$text.get("DPC999C99.001","dialogue")')) {
            return;
        }
    }

    var sosCd2 = document.getElementById('sosCd2');
    sosCd2.value = "$!form.bean.sosCd2";
    var sosCd3 = document.getElementById('sosCd3');
    sosCd3.value = "$!form.bean.sosCd3";
    var sosCd4 = document.getElementById('sosCd4');
    sosCd4.value = "$!form.bean.sosCd4";
    var jgiNo = document.getElementById('jgiNo');
    jgiNo.value = "$!form.bean.jgiNo";
    var etcSosFlg = document.getElementById('etcSosFlg');
    etcSosFlg.value = iniEtcSosFlg;

    var form = document.dpm601C01Form;
    form.activityType.value = "$!form.bean.activityType";
    form.prodCode.value = prodCode;
    form.planData.value = "$!form.bean.planData";

    var url ="$link.setAction('dpm600C01F05')";
    form.action = url;
    form.submit();

    dpm601C01F05 = blockIt;
    dpm601C01F10Execute = blockIt;
    dpm600C01F05 = blockIt;
}

//-->
</script>
<div id="noTabBox">
<form name="dpm601C01Form" method="post">
<input type="hidden" id="sosCd2Tran" name="sosCd2Tran" value="$!form.bean.sosCd2Tran">
<input type="hidden" id="sosCd3Tran" name="sosCd3Tran" value="$!form.bean.sosCd3Tran">
<input type="hidden" id="sosCd4Tran" name="sosCd4Tran" value="$!form.bean.sosCd4Tran">
<input type="hidden" id="jgiNoTran" name="jgiNoTran" value="$!form.bean.jgiNoTran">
<input type="hidden" id="planDataTran" name="planDataTran" value="$!form.bean.planDataTran">
<input type="hidden" id="insNoTran" name="insNoTran" value="$!form.bean.insNoTran">
<input type="hidden" id="etcSosFlgTran" name="etcSosFlgTran" value="$!form.bean.etcSosFlgTran">

<input type="hidden" name="shikuchosonMeiKj" id="shikuchosonMeiKj" value="$!form.bean.shikuchosonMeiKj" />
<input type="hidden" name="fukenMeiKj" id="fukenMeiKj" value="$!form.bean.fukenMeiKj" />
<input type="hidden" name="addrCodePref" id="addrCodePref" value="$!form.bean.addrCodePref" />
<input type="hidden" name="addrCodeCity" id="addrCodeCity" value="$!form.bean.addrCodeCity" />
<input type="hidden" id="insName" name="insName" value="">
<input type="hidden" id="prodCode" name="prodCode" value="">
<input type="hidden" id="activityType" name="activityType" value="">
## テキストボックスが１つの場合、Enterキーでsubmitされるため、非表示を１項目追加する。
<div style="display: none;">
<input type="text" style="visibility:hidden;"/>
</div>
##
<table class="gridLine" cellspacing="0" cellpadding="1">
    <tr>
        <td class="gridIndex" style="width: 150px;">担当者</td>
        <td>#sosDialogExt("01", "04", "04", false)</td>
    </tr>
    <tr>
        <td class="gridIndex" style="width: 150px;">施設</td>
        <td>
        <table cellspacing="0" cellpadding="0" style="border-collapse: collapse;">
            <tr>
                <td>
                <table class="gridLine" cellspacing="0" cellpadding="0" style="border-collapse: collapse;">
                    <tr>
                        <td style="width: 270px;"><nobr><label id="insNameLabel">$insName</label></nobr></td>
                    </tr>
                </table>
                </td>
                <td style="padding: 0px 5px 0px 5px"><input type="button" value="選択" style="width: 80px;"
                    onclick="dpm911C00F00Search()" /></td>
                <td class="gridIndex" style="width: 150px;">施設コード*</td>
                <td><input type="text" name="insNo" id="insNo" value="$!form.bean.insNo" size="20" maxlength="14" style="ime-mode: disabled" onChange="dpm601C01InsNameClear()"; />
                </td>
            </tr>
        </table>
        </td>
    </tr>
    <tr>
        <td class="gridIndex" style="width: 150px;">重点先/一般先</td>
        <td>
        <table cellspacing="0" cellpadding="0" style="border-collapse: collapse;">
            <tr>
                <td class="gridLine" style="width: 100px;"><nobr><label id="activityTypeLabel">$activityTypeLabel</label></nobr></td>
                <td class="gridIndex" style="width: 150px;">市区町村</td>
                <td class="gridLine" style="width: 270px;"><nobr><label id="shikuchosonMeiKjLabel">$fukenMeiKj　$shikuchosonMeiKj</label></nobr></td>
            </tr>
        </table>
        </td>
    </tr>
    <tr>
        <td class="gridIndex" style="width: 150px;">計画*</td>
        <td style="padding: 0px 7px 0px 0px;">
        #if($form.bean.planData == "0")
            <label><input type="radio" name="planData" value="0" checked />計画あり</label>
            <label><input type="radio" name="planData" value="1"         />全品目</label>
        #elseif($form.bean.planData == "1")
            <label><input type="radio" name="planData" value="0"         />計画あり</label>
            <label><input type="radio" name="planData" value="1" checked />全品目</label>
        #else
            <label><input type="radio" name="planData" value="0" checked />計画あり</label>
            <label><input type="radio" name="planData" value="1"         />全品目</label>
        #end
        </td>
    </tr>
</table>
<table style="margin-top: 2px; margin-bottom: 2px; float: left; width: 100%;">
    <tr>
        <td>
        <input type="button" value="表示" style="width: 80px;" onclick="dpm601C01F05()" />
            #if ($!security.hasAuthEdit("DPM60"))
            #if ($resultDetail && $enableEntry)
            <input type="button" value="登録" style="width: 80px;" onclick="dpm601C01F10Execute()" />
            #else
            <input type="button" value="登録" style="width: 80px;" onclick="dpm601C01F10Execute()" disabled />
            #end
            #end
        </td>
        <td style="text-align: right; vertical-align: bottom;"><label>単位:千円</label></td>
    </tr>
</table>
<div id="${GridObjName2}" style="width: 99.5%; clear: both;"></div>
#loadingGridDiv2("${GridObjName}", "${CoverId}", "width: 99.5%; clear: both;") #token()</form>
</div>
