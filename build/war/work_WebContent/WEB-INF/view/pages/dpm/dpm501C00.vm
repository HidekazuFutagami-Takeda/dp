## (医)品目別計画編集画面
#set($pageTitle = $text.get("dpm501C00","title"))
#set($bodyOnloadMethod  = "dpm501C00F00()")
#set($dataListFileName  = "dpm501C00x01.vm")
#set($dataListFileName2 = "dpm501C00x02.vm")
## 検索結果
#if($form.getRequestData("DPM501C00_DATA_R_SEARCH_RESULT"))
    #set($resultDetail = $form.getRequestData("DPM501C00_DATA_R_SEARCH_RESULT").detailList)
#end
## カテゴリリスト
#set($categoryList = $!form.bean.prodCategoryList)
## カテゴリ名
#set($prodCategory = "")
#if($form.bean.prodCategory)
#foreach($codeAndValue in $categoryList)
    #if($codeAndValue.code == $form.bean.prodCategory)
        #set($prodCategory = "$codeAndValue.value")
    #end
#end
#end

## ワクチンコード
#set($vaccineCode = $service.getVaccineCode())
## JRNSコード
#set($jrnsCode = $service.getJrnsCode())

## 実施計画区分
#set($plannedType = $security.getPlannedType().toString())
#set($plannedTypeStr = "実施計画")

## グリッドのヘッダ
#set($headerDetail = $form.bean.headerDetail)
#set($headerSum = $form.bean.headerSum)
#set($attachHeader1row = $form.bean.attachHeader1row)
#set($attachHeader2row = $form.bean.attachHeader2row)
#set($attachHeader3row = $form.bean.attachHeader3row)
#set($initWidths = $form.bean.initWidths)
#set($colAlign = $form.bean.colAlign)
#set($colTypes = $form.bean.colTypes)
#set($enableResizing = $form.bean.enableResizing)
#set($enableTooltips = $form.bean.enableTooltips)

## add Start 2022/11/29 H.futagami No.19　「合計」欄は「前月までの実績＋当月以降の入力した計画」の合計を表示
#set($tougetuCount = $form.bean.tougetuCount)
## add End 2022/11/29 H.futagami No.19　「合計」欄は「前月までの実績＋当月以降の入力した計画」の合計を表示

## 当月以降であることによる編集可能リスト
#set($enableEdit = $form.bean.enableEdit)

## ログインユーザが、JRNS選択可能ユーザか
#set($jrnsUser = $form.bean.jrnsUser)

## JRNSに含まれるカテゴリリスト
#set($jrnsCategoryList = $form.bean.jrnsCategoryList)

<script language="javascript">
<!--
document.getElementById("closeWindow").value = "true";

## 明細行グリッド
#set($CoverId1 = "dpm501C00CoverId1")
#set($GridObjName1 = "dpm501C00Grid1")
#set($gridHeight = $text.get("${GridObjName1}","grid"))
var ${GridObjName1};
## 集計行グリッド
#set($CoverId2 = "dpm501C00CoverId2")
#set($GridObjName2 = "dpm501C00Grid2")
var ${GridObjName2};
## 編集検知フラグ
var editFlg = false;

## 初期表示
function dpm501C00F00() {
    doInitGrid1(); ## 明細行
    doInitGrid2(); ## 集計行
    ## 明細行のデータ読み込み
    if (document.getElementById("$dataListFileName")) {
        var loadXMLString = document.getElementById("$dataListFileName").value;
        if (loadXMLString != null && loadXMLString != "") {
            ${GridObjName1}.loadXMLString(loadXMLString);
            for (rowId = 1; rowId <= ${GridObjName1}.getRowsNum(); rowId++) {
                ## 合計列の計算処理
                doCalcPlannedStackedValueSumCol(${GridObjName1},rowId);
                doCalcPlannedYBValueSumCol(${GridObjName1}, rowId);
                doCalcExpectedStackedValueSumCol(${GridObjName1}, rowId);
                doCalcExpectedYBValueSumCol(${GridObjName1}, rowId);
                ## 遂行率の計算処理
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##                for (columnId = 2; columnId <= 56; columnId = columnId + 2) {
                for (columnId = 4; columnId <= 58; columnId = columnId + 9) {
                    doCalcExecuteRate(${GridObjName1}, rowId, columnId);
                    doCalcExecuteRate(${GridObjName1}, rowId, columnId + 2);
                    doCalcExecuteRate(${GridObjName1}, rowId, columnId + 4);
                    doCalcExecuteRate(${GridObjName1}, rowId, columnId + 6);
                }
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
            }
        }
    }
    ## 集計行のデータ読み込み
    if (document.getElementById("$dataListFileName2")) {
        var loadXMLString = document.getElementById("$dataListFileName2").value;
        if (loadXMLString != null && loadXMLString != "") {
            ${GridObjName2}.loadXMLString(loadXMLString);
            ## 集計行の値をセット
            setSumGrid(${GridObjName1}, ${GridObjName2}, 1);
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
            setSumGrid(${GridObjName1}, ${GridObjName2}, 2);
            setSumGrid(${GridObjName1}, ${GridObjName2}, 3);
##            for (colomnId = 2; colomnId <= 56; colomnId = colomnId + 2) {
            for (colomnId = 4; colomnId <= 58; colomnId = colomnId + 9) {
##              setSumGrid(${GridObjName1}, ${GridObjName2}, colomnId);
              setSumGrid(${GridObjName1}, ${GridObjName2}, colomnId);
##            }
            }
            for (colomnId = 6; colomnId <= 60; colomnId = colomnId + 9) {
              setSumGrid(${GridObjName1}, ${GridObjName2}, colomnId);
            }
            for (colomnId = 8; colomnId <= 62; colomnId = colomnId + 9) {
              setSumGrid(${GridObjName1}, ${GridObjName2}, colomnId);
            }
            for (colomnId = 10; colomnId <= 64; colomnId = colomnId + 9) {
              setSumGrid(${GridObjName1}, ${GridObjName2}, colomnId);
            }
            for (colomnId = 12; colomnId <= 57; colomnId = colomnId + 9) {
              setSumGrid(${GridObjName1}, ${GridObjName2}, colomnId);
            }
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
            ## 合計列の計算処理
            doCalcPlannedStackedValueSumCol(${GridObjName2},1);
            doCalcPlannedYBValueSumCol(${GridObjName2}, 1);
            doCalcExpectedStackedValueSumCol(${GridObjName2}, 1);
            doCalcExpectedYBValueSumCol(${GridObjName2}, 1);
            ## 遂行率の計算処理
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##            for (columnId = 2; columnId <= 56; columnId = columnId + 2) {
            for (columnId = 4; columnId <= 58; columnId = columnId + 9) {
                doCalcExecuteRate(${GridObjName2}, 1, columnId);
                doCalcExecuteRate(${GridObjName2}, 1, columnId + 2);
                doCalcExecuteRate(${GridObjName2}, 1, columnId + 4);
                doCalcExecuteRate(${GridObjName2}, 1, columnId + 6);
            }
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
        }
    }

## add Start 2022/11/16 H.futagami No.8　計画管理の月別計画に納入実績の値を表示
    ## 実績の四捨五入処理
    ## 集計行
    if (document.getElementById("$dataListFileName2") && ${GridObjName2}.getRowsNum() > 0) {
        for (columnId = 2; columnId <= 3; columnId = columnId + 1) {
            var valueRound = ${GridObjName2}.cells(1,columnId).getValue();
            if(valueRound != null && valueRound.toString() != ""){
                valueRound = Math.round(valueRound);
        	    ${GridObjName2}.cells(1,columnId).setValue(valueRound);
            }
        }
        for (columnId = 12; columnId <= 57; columnId = columnId + 9) {
            var valueRound = ${GridObjName2}.cells(1,columnId).getValue();
            if(valueRound != null && valueRound.toString() != ""){
                valueRound = Math.round(valueRound);
        	    ${GridObjName2}.cells(1,columnId).setValue(valueRound);
            }
        }
    }
    ## 明細行
    if (document.getElementById("$dataListFileName")) {
        for (rowId = 1; rowId <= ${GridObjName1}.getRowsNum(); rowId++) {
            for (columnId = 2; columnId <= 3; columnId = columnId + 1) {
                var valueRound;
				if(columnId == "2"){
				    valueRound = ${GridObjName1}.getUserData(rowId, 'hiddenRecordTotalValueYbJisseki');
				}else if(columnId == "3"){
				    valueRound = ${GridObjName1}.getUserData(rowId, 'hiddenRecordTougetuValueYbJisseki');
				}
                if(valueRound != null && valueRound.toString() != ""){
                    valueRound = Math.round(Number(valueRound));
            	    ${GridObjName1}.cells(rowId,columnId).setValue(valueRound);
                }
            }
            for (columnId = 12; columnId <= 57; columnId = columnId + 9) {
                var valueRound;
				if(columnId == "12"){
				    valueRound = ${GridObjName1}.getUserData(rowId, 'hiddenRecord1ValueYbJisseki');
				}else if(columnId == "21"){
				    valueRound = ${GridObjName1}.getUserData(rowId, 'hiddenRecord2ValueYbJisseki');
				}else if(columnId == "30"){
				    valueRound = ${GridObjName1}.getUserData(rowId, 'hiddenRecord3ValueYbJisseki');
				}else if(columnId == "39"){
				    valueRound = ${GridObjName1}.getUserData(rowId, 'hiddenRecord4ValueYbJisseki');
				}else if(columnId == "48"){
				    valueRound = ${GridObjName1}.getUserData(rowId, 'hiddenRecord5ValueYbJisseki');
				}else if(columnId == "57"){
				    valueRound = ${GridObjName1}.getUserData(rowId, 'hiddenRecord6ValueYbJisseki');
				}
	            if(valueRound != null && valueRound.toString() != ""){
	            	valueRound = Math.round(Number(valueRound));
	            	${GridObjName1}.cells(rowId,columnId).setValue(valueRound);
	            }
            }
        }
    }
    ## 小数点以下を削除するためにsetNumberFormatを変更して再セット
    ${GridObjName1}.setNumberFormat("0,000",2);
    ${GridObjName1}.setNumberFormat("0,000",3);
    ${GridObjName1}.setNumberFormat("0,000",12);
    ${GridObjName1}.setNumberFormat("0,000",21);
    ${GridObjName1}.setNumberFormat("0,000",30);
    ${GridObjName1}.setNumberFormat("0,000",39);
    ${GridObjName1}.setNumberFormat("0,000",48);
    ${GridObjName1}.setNumberFormat("0,000",57);
    ${GridObjName2}.setNumberFormat("0,000",2);
    ${GridObjName2}.setNumberFormat("0,000",3);
    ${GridObjName2}.setNumberFormat("0,000",12);
    ${GridObjName2}.setNumberFormat("0,000",21);
    ${GridObjName2}.setNumberFormat("0,000",30);
    ${GridObjName2}.setNumberFormat("0,000",39);
    ${GridObjName2}.setNumberFormat("0,000",48);
    ${GridObjName2}.setNumberFormat("0,000",57);
    ## 集計行
    if (document.getElementById("$dataListFileName2") && ${GridObjName2}.getRowsNum() > 0) {
        for (columnId = 2; columnId <= 3; columnId = columnId + 1) {
            var valueRound = ${GridObjName2}.cells(1,columnId).getValue();
            ${GridObjName2}.cells(1,columnId).setValue(valueRound);
        }
        for (columnId = 12; columnId <= 57; columnId = columnId + 9) {
            var valueRound = ${GridObjName2}.cells(1,columnId).getValue();
            ${GridObjName2}.cells(1,columnId).setValue(valueRound);
        }
    }
    ## 明細行
    if (document.getElementById("$dataListFileName")) {
        for (rowId = 1; rowId <= ${GridObjName1}.getRowsNum(); rowId++) {
            for (columnId = 2; columnId <= 3; columnId = columnId + 1) {
                var valueRound = ${GridObjName1}.cells(rowId,columnId).getValue();
                ${GridObjName1}.cells(rowId,columnId).setValue(valueRound);
            }
            for (columnId = 12; columnId <= 57; columnId = columnId + 9) {
                var valueRound = ${GridObjName1}.cells(rowId,columnId).getValue();
                ${GridObjName1}.cells(rowId,columnId).setValue(valueRound);
            }
        }
    }
## add End 2022/11/16 H.futagami No.8　計画管理の月別計画に納入実績の値を表示

    ## データ部とヘッダーのずれ修正 ############
    #correctMisalignedHeader(${GridObjName1} ${GridObjName2})

}

## DHTMLXGrid生成(明細行)
function doInitGrid1() {
    #if($resultDetail)
        ${GridObjName1} = createDhtmlXGridLodingExt("${GridObjName1}", "${CoverId1}");
    #else
        ${GridObjName1} = createDhtmlXGrid("${GridObjName1}");
    #end
    ${GridObjName1}.setHeader("$headerDetail");
    ${GridObjName1}.setInitWidths("350,$initWidths");
    ${GridObjName1}.setColAlign("left,$colAlign");
    ${GridObjName1}.setColTypes("ro,$colTypes");
    ${GridObjName1}.enableResizing("false,$enableResizing");
    ${GridObjName1}.enableTooltips("false,$enableTooltips");
    ${GridObjName1}.enableDistributedParsing(true,50,300);
    ${GridObjName1}.enableAutoHeight(true, getGridHeight('dpm501C00', $!gridHeight));
    ${GridObjName1}.enableBlockSelection();
    ${GridObjName1}.forceLabelSelection(true);
    ${GridObjName1}.setCSVDelimiter("\t");
    ${GridObjName1}.setNumberFormat("0,000",1);
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
    ${GridObjName1}.setNumberFormat("0,000.000",2);
    ${GridObjName1}.setNumberFormat("0,000.000",3);
##    for (var i = 2; i <= 57; i++) {
    for (var i = 4; i <= 65; i++) {
##        if (i % 2 == 0) {
##            ${GridObjName1}.setNumberFormat("0,000",i);
##        } else {
##            ${GridObjName1}.setNumberFormat("0,000.0%",i);
##        }
        switch(i % 9){
        case 1:
        case 4:
        case 6:
        case 8:
            ${GridObjName1}.setNumberFormat("0,000",i);
            break;
        case 3:
            ${GridObjName1}.setNumberFormat("0,000.000",i);
            break;
        case 0:
        case 2:
        case 5:
        case 7:
            ${GridObjName1}.setNumberFormat("0,000.0%",i);
            break;
        default:
            break;
        }
##    }
    }
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
    ${GridObjName1}.setSizes();
    ${GridObjName1}.setNoHeader(true);
    ${GridObjName1}.init();
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##    ${GridObjName1}.splitAt(2);
    ${GridObjName1}.splitAt(4);
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
    ${GridObjName1}.enableEditEvents(true, false, true);

    ##  --- 編集中に登録ボタンが押された場合のチェッカー
    window.editValueChecker = new EditingValueChecker(${GridObjName1},'$text.get("DPC1036E",[""])' );

    ${GridObjName1}.attachEvent("onEditCell",function(stage,rowId,colId,newvalue,oldvalue){

		## --- 編集中に登録ボタンが押された場合のチェック用に値とstageを保持 ---
		window.editValueChecker.saveState(stage,newvalue);

        if(stage == 1){
            setIme(${GridObjName1},rowId,colId,"inactive",10);
        }
        if(stage == 2){
            if(newvalue.toString() != oldvalue.toString()){
                intCheck(${GridObjName1},rowId,colId,newvalue);
                ## 合計列(明細行)の計算処理
                doCalcPlannedStackedValueSumCol(${GridObjName1},rowId);
                doCalcPlannedYBValueSumCol(${GridObjName1}, rowId);
                doCalcExpectedStackedValueSumCol(${GridObjName1}, rowId);
                doCalcExpectedYBValueSumCol(${GridObjName1}, rowId);
                ## 集計行の値をセット
                setSumGrid(${GridObjName1}, ${GridObjName2}, colId);
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##                for (colomnId = 50; colomnId <= 56; colomnId = colomnId + 2) {
                for (colomnId = 58; colomnId <= 64; colomnId = colomnId + 2) {
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
                    setSumGrid(${GridObjName1}, ${GridObjName2}, colomnId);
                }
                ## 合計列(集計行)の計算処理
                doCalcPlannedStackedValueSumCol(${GridObjName2}, 1);
                doCalcPlannedYBValueSumCol(${GridObjName2}, 1);
                doCalcExpectedStackedValueSumCol(${GridObjName2}, 1);
                doCalcExpectedYBValueSumCol(${GridObjName2}, 1);
                ## 遂行率の計算処理
                doCalcExecuteRate(${GridObjName1}, rowId, colId);
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##                for (columnId = 50; columnId <= 56; columnId = columnId + 2) {
                for (columnId = 58; columnId <= 64; columnId = columnId + 2) {
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
                    doCalcExecuteRate(${GridObjName1}, rowId, columnId);
                }
                doCalcExecuteRate(${GridObjName2}, 1, colId);
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##                for (columnId = 50; columnId <= 56; columnId = columnId + 2) {
                for (columnId = 58; columnId <= 64; columnId = columnId + 2) {
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
                    doCalcExecuteRate(${GridObjName2}, 1, columnId);
                }
                editFlg = true;

            }
        }
        return true;
    });
    ${GridObjName1}.attachEvent("onRowSelect",function(rowId,colId){
        ${GridObjName1}.editCell();
    });
    ${GridObjName1}.attachEvent("onKeyPress",function(keycode,ctrl,shift){
        if(!(currentCellMove(${GridObjName1},keycode))){return false;}
        ## ペースト処理時
        ##copyBlock(${GridObjName1}, keycode, ctrl, shift, new Array("2","4","6"));
        if (keycode == 86 && ctrl) {
            ## 集計行の値をセット
            setSumGrid(${GridObjName1}, ${GridObjName2}, 1);
            ## 行・列のインデックス指定が不可のため全インデックスで処理実行
            for (rowId = 1; rowId <= ${GridObjName1}.getRowsNum(); rowId++) {
                  ## 合計列の計算処理
                  doCalcPlannedStackedValueSumCol(${GridObjName1},rowId);
                  doCalcPlannedYBValueSumCol(${GridObjName1}, rowId);
                  doCalcExpectedStackedValueSumCol(${GridObjName1}, rowId);
                  doCalcExpectedYBValueSumCol(${GridObjName1}, rowId);
                  ## 遂行率の計算処理
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##                  for (columnId = 4; columnId <= 56; columnId = columnId + 4) {
                  for (columnId = 6; columnId <= 60; columnId = columnId + 9) {
##                      doCalcExecuteRate(${GridObjName1}, rowId, columnId);
                      doCalcExecuteRate(${GridObjName1}, rowId, columnId);
##                  }
                  }
                  for (columnId = 10; columnId <= 64; columnId = columnId + 4) {
                      doCalcExecuteRate(${GridObjName1}, rowId, columnId);
                  }
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
            }
            editFlg = true;
        }
        return true;
    });
    ${GridObjName1}.attachEvent("onMouseOver",function(rowId,columnId){
        var title = "";
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##            if(columnId % 4 == 0 && columnId <= 48){
            if(columnId % 9 == 6 && columnId <= 51){
##                title = ${GridObjName1}.getUserData(rowId,"toolTip");
                title = ${GridObjName1}.getUserData(rowId,"toolTip");
##            }
            }
            if(columnId % 9 == 1 && columnId <= 55){
                title = ${GridObjName1}.getUserData(rowId,"toolTip");
            }
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
            if(title == null){
                title = "";
            }
            ${GridObjName1}.cells(rowId,columnId).cell.title = title;
    });
    ${GridObjName1}.attachEvent("onScroll",function(sLeft,sTop){
    	${GridObjName2}.objBox.scrollLeft=${GridObjName1}.objBox.scrollLeft
    });
}

## DHTMLXGrid生成(集計行)
function doInitGrid2() {
    #if($resultDetail)
        ${GridObjName2} = createDhtmlXGridLodingExt("${GridObjName2}", "${CoverId2}");
    #else
        ${GridObjName2} = createDhtmlXGrid("${GridObjName2}");
    #end
    ## 品目名
    var prodCategory = "";
    #if($form.bean.prodCategory)
    #foreach($codeAndValue in $categoryList)
        #if($codeAndValue.code == $form.bean.prodCategory)
            prodCategory = "$codeAndValue.value";
        #end
    #end
    #end
    ## 担当者選択時
    #if ($form.bean.jgiNo)
        sosApply("", "$form.bean.jgiNo", "04");
        ${GridObjName2}.setHeader("担当者計画　$!plannedTypeStr　$!prodCategory,$headerSum");
        ${GridObjName2}.attachHeader("品目名称,$attachHeader1row");
        ${GridObjName2}.attachHeader("#rspan,$attachHeader2row");
        ${GridObjName2}.attachHeader("#rspan,$attachHeader3row")
    ## 営業所選択時
    #elseif ($form.bean.sosCd3)
        sosApply("$form.bean.sosCd3", "", "04","$form.bean.etcSosFlg");
        ${GridObjName2}.setHeader("エリア計画　$!plannedTypeStr　$!prodCategory,$headerSum");
        ${GridObjName2}.attachHeader("品目名称,$attachHeader1row");
        ${GridObjName2}.attachHeader("#rspan,$attachHeader2row");
        ${GridObjName2}.attachHeader("#rspan,$attachHeader3row")
    ## 支店選択時"2
    #elseif ($form.bean.sosCd2)
        sosApply("$form.bean.sosCd2", "", "04","$form.bean.etcSosFlg");
        ${GridObjName2}.setHeader("リージョン計画　$!plannedTypeStr　$!prodCategory,$headerSum");
        ${GridObjName2}.attachHeader("品目名称,$attachHeader1row");
        ${GridObjName2}.attachHeader("#rspan,$attachHeader2row");
        ${GridObjName2}.attachHeader("#rspan,$attachHeader3row")
    ## 全社選択時
    #else
        sosApply("", "", "04","$form.bean.etcSosFlg");
        ${GridObjName2}.setHeader("全社計画　$!plannedTypeStr　$!prodCategory,$headerSum");
        ${GridObjName2}.attachHeader("品目名称,$attachHeader1row");
        ${GridObjName2}.attachHeader("#rspan,$attachHeader2row");
        ${GridObjName2}.attachHeader("#rspan,$attachHeader3row")
    #end
    ${GridObjName2}.setInitWidths("350,$initWidths");
    ${GridObjName2}.setColAlign("left,$colAlign");
    ${GridObjName2}.setColTypes("ro,$colTypes");
    ${GridObjName2}.enableResizing("false,$enableResizing");
    ${GridObjName2}.enableTooltips("false,$enableTooltips");
    ${GridObjName2}.enableAutoHeight(true, 117, true);
    ##${GridObjName2}.objBox.style.overflowX="hidden";
    ##${GridObjName2}.objBox.style.overflowY="hidden";
    ${GridObjName2}.enableBlockSelection();
    ${GridObjName2}.forceLabelSelection(true);
    ${GridObjName2}.setCSVDelimiter("\t");
    ${GridObjName2}.setNumberFormat("0,000",1);
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
    ${GridObjName2}.setNumberFormat("0,000.000",2);
    ${GridObjName2}.setNumberFormat("0,000.000",3);
##    for (var i = 2; i <= 57; i++){
    for (var i = 4; i <= 65; i++){
##        if (i % 2 == 0) {
##            ${GridObjName2}.setNumberFormat("0,000",i);
##        } else {
##            ${GridObjName2}.setNumberFormat("0,000.0%",i);
##        }
        switch(i % 9){
        case 1:
        case 4:
        case 6:
        case 8:
            ${GridObjName2}.setNumberFormat("0,000",i);
            break;
        case 3:
            ${GridObjName2}.setNumberFormat("0,000.000",i);
            break
        case 0:
        case 2:
        case 5:
        case 7:
            ${GridObjName2}.setNumberFormat("0,000.0%",i);
            break;
        default:
            break;
        }
##    }
    }
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
    ${GridObjName2}.setSizes();
    ${GridObjName2}.init();
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##    ${GridObjName2}.splitAt(2);
    ${GridObjName2}.splitAt(4);
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
    ${GridObjName2}.attachEvent("onKeyPress",function(keycode,ctrl,shift){
        copyBlock(${GridObjName2}, keycode, ctrl, shift);
        return true;
    });
    ${GridObjName2}.attachEvent("onBeforeSelect",function(newId,oldId){return;});
}

## 遂行率の計算処理
function doCalcExecuteRate(grid, rowId, colId){
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##    if (!(colId >= 2 && colId % 2 == 0)){
    if (!(colId >= 4 && ((colId + 5) % 9) % 2 == 0)){
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
      return;
    }

    ## 積上値/計画値
    var value1 = grid.cells(rowId, colId).getValue();
    ## 期別計画値
    var value2 = grid.cells(rowId, 1).getValue();
    ## 算出値の設定セル
    var cell = grid.cells(rowId, colId + 1);

    ## 算出不能の場合は空白
    if (value2.toString() == "0" || value2.toString() == "") {
      cell.setValue("");
    } else {
      ## 遂行率算出
      var rate = Math.round((value1 / value2) * 1000) / 10;
      if (rate == 0) {
          cell.setValue("0.0");
      } else {
          cell.setValue(rate);
      }
    }
}

## 月初計画の積上値合計列の計算処理
function doCalcPlannedStackedValueSumCol(grid, rowId){
    ## 月初計画積上値
    var sumValue = null;
## mod Start 2022/11/29 H.futagami No.19　「合計」欄は「前月までの実績＋当月以降の入力した計画」の合計を表示
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##    var value1 = grid.cells(rowId,2).getValue();
##    var value2 = grid.cells(rowId,10).getValue();
##    var value3 = grid.cells(rowId,18).getValue();
##    var value4 = grid.cells(rowId,26).getValue();
##    var value5 = grid.cells(rowId,34).getValue();
##    var value6 = grid.cells(rowId,42).getValue();
##    var value1 = grid.cells(rowId,4).getValue();
##    var value2 = grid.cells(rowId,13).getValue();
##    var value3 = grid.cells(rowId,22).getValue();
##    var value4 = grid.cells(rowId,31).getValue();
##    var value5 = grid.cells(rowId,40).getValue();
##    var value6 = grid.cells(rowId,49).getValue();

##    if(value1 != null && value1.toString() != ""){
####        sumValue = convertToInteger(grid,rowId,2);
##        sumValue = convertToInteger(grid,rowId,4);
##    }
##    if(value2 != null && value2.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,10);
##        sumValue = sumValue + convertToInteger(grid,rowId,13);
##    }
##    if(value3 != null && value3.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,18);
##        sumValue = sumValue + convertToInteger(grid,rowId,22);
##    }
##    if(value4 != null && value4.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,26);
##        sumValue = sumValue + convertToInteger(grid,rowId,31);
##    }
##    if(value5 != null && value5.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,34);
##        sumValue = sumValue + convertToInteger(grid,rowId,40);
##    }
##    if(value6 != null && value6.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,42);
##        sumValue = sumValue + convertToInteger(grid,rowId,49);
##    }

    var value = null;
    for (monthCount = 0; monthCount <= 5; monthCount = monthCount + 1) {
      if(monthCount < $tougetuCount){
        ## 各月実績
        ## add Start 2022/12/21 H.futagami No.8　計画管理の月別計画に納入実績の値を表示
		if(monthCount == 0){
		    value = grid.getUserData(rowId, 'hiddenRecord1ValueYbJisseki');
		}else if(monthCount == 1){
		    value = grid.getUserData(rowId, 'hiddenRecord2ValueYbJisseki');
		}else if(monthCount == 2){
		    value = grid.getUserData(rowId, 'hiddenRecord3ValueYbJisseki');
		}else if(monthCount == 3){
		    value = grid.getUserData(rowId, 'hiddenRecord4ValueYbJisseki');
		}else if(monthCount == 4){
		    value = grid.getUserData(rowId, 'hiddenRecord5ValueYbJisseki');
		}else if(monthCount == 5){
		    value = grid.getUserData(rowId, 'hiddenRecord6ValueYbJisseki');
	　　　 }
        ## add End 2022/12/21 H.futagami No.8　計画管理の月別計画に納入実績の値を表示
        if(value != null && value.toString() != ""){
          sumValue = sumValue + Number(value);
        }
      }else{
        ## 各月月初計画積上
        value = grid.cells(rowId,monthCount * 9 + 4).getValue();
        if(value != null && value.toString() != ""){
          sumValue = sumValue + convertToInteger(grid,rowId,monthCount * 9 + 4);
        }
      }
    }
## mod End 2022/11/29 H.futagami No.19　「合計」欄は「前月までの実績＋当月以降の入力した計画」の合計を表示

##    var cell = grid.cells(rowId, 50);
    var cell = grid.cells(rowId, 58);
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
    if (sumValue != null) {
        cell.setValue(sumValue);
    }
    else {
        cell.setValue(null);
    }
}

## 月初計画の計画値合計列の計算処理
function doCalcPlannedYBValueSumCol(grid, rowId){
    ## 月初計画計画値
    var sumValue = null;
## mod Start 2022/11/29 H.futagami No.19　「合計」欄は「前月までの実績＋当月以降の入力した計画」の合計を表示
#### mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
####    var value1 = grid.cells(rowId,4).getValue();
##    var value1 = grid.cells(rowId,6).getValue();
####    var value2 = grid.cells(rowId,12).getValue();
##    var value2 = grid.cells(rowId,15).getValue();
####    var value3 = grid.cells(rowId,20).getValue();
##    var value3 = grid.cells(rowId,24).getValue();
####    var value4 = grid.cells(rowId,28).getValue();
##    var value4 = grid.cells(rowId,33).getValue();
####    var value5 = grid.cells(rowId,36).getValue();
##    var value5 = grid.cells(rowId,42).getValue();
####    var value6 = grid.cells(rowId,44).getValue();
##    var value6 = grid.cells(rowId,51).getValue();
##
####    if(value1 != null && value1.toString() != ""){
##    if(value1 != null && value1.toString() != ""){
####        sumValue = convertToInteger(grid,rowId,4);
##        sumValue = convertToInteger(grid,rowId,6);
####    }
##    }
####    if(value2 != null && value2.toString() != ""){
##    if(value2 != null && value2.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,12);
##        sumValue = sumValue + convertToInteger(grid,rowId,15);
####    }
##    }
####    if(value3 != null && value3.toString() != ""){
##    if(value3 != null && value3.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,20);
##        sumValue = sumValue + convertToInteger(grid,rowId,24);
####    }
##    }
####    if(value4 != null && value4.toString() != ""){
##    if(value4 != null && value4.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,28);
##        sumValue = sumValue + convertToInteger(grid,rowId,33);
####    }
##    }
####    if(value5 != null && value5.toString() != ""){
##    if(value5 != null && value5.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,36);
##        sumValue = sumValue + convertToInteger(grid,rowId,42);
####    }
##    }
####    if(value6 != null && value6.toString() != ""){
##    if(value6 != null && value6.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,44);
##        sumValue = sumValue + convertToInteger(grid,rowId,51);
####    }
##    }

    var value = null;
    for (monthCount = 0; monthCount <= 5; monthCount = monthCount + 1) {
      if(monthCount < $tougetuCount){
        ## 各月実績
        ## add Start 2022/12/21 H.futagami No.8　計画管理の月別計画に納入実績の値を表示
		if(monthCount == 0){
		    value = grid.getUserData(rowId, 'hiddenRecord1ValueYbJisseki');
		}else if(monthCount == 1){
		    value = grid.getUserData(rowId, 'hiddenRecord2ValueYbJisseki');
		}else if(monthCount == 2){
		    value = grid.getUserData(rowId, 'hiddenRecord3ValueYbJisseki');
		}else if(monthCount == 3){
		    value = grid.getUserData(rowId, 'hiddenRecord4ValueYbJisseki');
		}else if(monthCount == 4){
		    value = grid.getUserData(rowId, 'hiddenRecord5ValueYbJisseki');
		}else if(monthCount == 5){
		    value = grid.getUserData(rowId, 'hiddenRecord6ValueYbJisseki');
	　　　 }
        ## add End 2022/12/21 H.futagami No.8　計画管理の月別計画に納入実績の値を表示
        if(value != null && value.toString() != ""){
          sumValue = sumValue + Number(value);
        }
      }else{
        ## 各月月初計画計画値
        value = grid.cells(rowId,monthCount * 9 + 6).getValue();
        if(value != null && value.toString() != ""){
          sumValue = sumValue + convertToInteger(grid,rowId,monthCount * 9 + 6);
        }
      }
    }
## mod End 2022/11/29 H.futagami No.19　「合計」欄は「前月までの実績＋当月以降の入力した計画」の合計を表示

##    var cell = grid.cells(rowId, 52);
    var cell = grid.cells(rowId, 60);
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
    if (sumValue != null) {
        cell.setValue(sumValue);
    }
    else {
        cell.setValue(null);
    }
}

## 月末見込の積上値合計列の計算処理
function doCalcExpectedStackedValueSumCol(grid, rowId){
    ## 月末見込積上値
    var sumValue = null;
## mod Start 2022/11/29 H.futagami No.19　「合計」欄は「前月までの実績＋当月以降の入力した計画」の合計を表示
#### mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
####    var value1 = grid.cells(rowId,6).getValue();
##    var value1 = grid.cells(rowId,8).getValue();
####    var value2 = grid.cells(rowId,14).getValue();
##    var value2 = grid.cells(rowId,17).getValue();
####    var value3 = grid.cells(rowId,22).getValue();
##    var value3 = grid.cells(rowId,26).getValue();
####    var value4 = grid.cells(rowId,30).getValue();
##    var value4 = grid.cells(rowId,35).getValue();
####    var value5 = grid.cells(rowId,38).getValue();
##    var value5 = grid.cells(rowId,44).getValue();
####    var value6 = grid.cells(rowId,46).getValue();
##    var value6 = grid.cells(rowId,53).getValue();
####
##
####    if(value1 != null && value1.toString() != ""){
##    if(value1 != null && value1.toString() != ""){
####        sumValue = convertToInteger(grid,rowId,6);
##        sumValue = convertToInteger(grid,rowId,8);
####    }
##    }
####    if(value2 != null && value2.toString() != ""){
##    if(value2 != null && value2.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,14);
##        sumValue = sumValue + convertToInteger(grid,rowId,17);
####    }
##    }
####    if(value3 != null && value3.toString() != ""){
##    if(value3 != null && value3.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,22);
##        sumValue = sumValue + convertToInteger(grid,rowId,26);
####    }
##    }
####    if(value4 != null && value4.toString() != ""){
##    if(value4 != null && value4.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,30);
##        sumValue = sumValue + convertToInteger(grid,rowId,35);
####    }
##    }
####    if(value5 != null && value5.toString() != ""){
##    if(value5 != null && value5.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,38);
##        sumValue = sumValue + convertToInteger(grid,rowId,44);
####    }
##    }
####    if(value6 != null && value6.toString() != ""){
##    if(value6 != null && value6.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,46);
##        sumValue = sumValue + convertToInteger(grid,rowId,53);
####    }
##    }

    var value = null;
    for (monthCount = 0; monthCount <= 5; monthCount = monthCount + 1) {
      if(monthCount < $tougetuCount){
        ## 各月実績
        ## add Start 2022/12/21 H.futagami No.8　計画管理の月別計画に納入実績の値を表示
		if(monthCount == 0){
		    value = grid.getUserData(rowId, 'hiddenRecord1ValueYbJisseki');
		}else if(monthCount == 1){
		    value = grid.getUserData(rowId, 'hiddenRecord2ValueYbJisseki');
		}else if(monthCount == 2){
		    value = grid.getUserData(rowId, 'hiddenRecord3ValueYbJisseki');
		}else if(monthCount == 3){
		    value = grid.getUserData(rowId, 'hiddenRecord4ValueYbJisseki');
		}else if(monthCount == 4){
		    value = grid.getUserData(rowId, 'hiddenRecord5ValueYbJisseki');
		}else if(monthCount == 5){
		    value = grid.getUserData(rowId, 'hiddenRecord6ValueYbJisseki');
	　　　 }
        ## add End 2022/12/21 H.futagami No.8　計画管理の月別計画に納入実績の値を表示
        if(value != null && value.toString() != ""){
          sumValue = sumValue + Number(value);
        }
      }else{
        ## 各月月末計画積上値
        value = grid.cells(rowId,monthCount * 9 + 8).getValue();
        if(value != null && value.toString() != ""){
          sumValue = sumValue + convertToInteger(grid,rowId,monthCount * 9 + 8);
        }
      }
    }
## mod End 2022/11/29 H.futagami No.19　「合計」欄は「前月までの実績＋当月以降の入力した計画」の合計を表示

##    var cell = grid.cells(rowId, 54);
    var cell = grid.cells(rowId, 62);
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
    if (sumValue != null) {
        cell.setValue(sumValue);
    }
    else {
        cell.setValue(null);
    }
}

## 月末見込の計画値合計列の計算処理
function doCalcExpectedYBValueSumCol(grid, rowId){
    ## 月末見込計画値
    var sumValue = null;
## mod Start 2022/11/29 H.futagami No.19　「合計」欄は「前月までの実績＋当月以降の入力した計画」の合計を表示
#### mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
####    var value1 = grid.cells(rowId,8).getValue();
##    var value1 = grid.cells(rowId,10).getValue();
####    var value2 = grid.cells(rowId,16).getValue();
##    var value2 = grid.cells(rowId,19).getValue();
####    var value3 = grid.cells(rowId,24).getValue();
##    var value3 = grid.cells(rowId,28).getValue();
####    var value4 = grid.cells(rowId,32).getValue();
##    var value4 = grid.cells(rowId,37).getValue();
####    var value5 = grid.cells(rowId,40).getValue();
##    var value5 = grid.cells(rowId,46).getValue();
####    var value6 = grid.cells(rowId,48).getValue();
##    var value6 = grid.cells(rowId,55).getValue();
####
##
####    if(value1 != null && value1.toString() != ""){
##    if(value1 != null && value1.toString() != ""){
####        sumValue = convertToInteger(grid,rowId,8);
##        sumValue = convertToInteger(grid,rowId,10);
####    }
##    }
####    if(value2 != null && value2.toString() != ""){
##    if(value2 != null && value2.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,16);
##        sumValue = sumValue + convertToInteger(grid,rowId,19);
####    }
##    }
####    if(value3 != null && value3.toString() != ""){
##    if(value3 != null && value3.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,24);
##        sumValue = sumValue + convertToInteger(grid,rowId,28);
####    }
##    }
####    if(value4 != null && value4.toString() != ""){
##    if(value4 != null && value4.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,32);
##        sumValue = sumValue + convertToInteger(grid,rowId,37);
####    }
##    }
####    if(value5 != null && value5.toString() != ""){
##    if(value5 != null && value5.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,40);
##        sumValue = sumValue + convertToInteger(grid,rowId,46);
####    }
##    }
####    if(value6 != null && value6.toString() != ""){
##    if(value6 != null && value6.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,48);
##        sumValue = sumValue + convertToInteger(grid,rowId,55);
####    }
##    }

    var value = null;
    for (monthCount = 0; monthCount <= 5; monthCount = monthCount + 1) {
      if(monthCount < $tougetuCount){
        ## 各月実績
        ## add Start 2022/12/21 H.futagami No.8　計画管理の月別計画に納入実績の値を表示
		if(monthCount == 0){
		    value = grid.getUserData(rowId, 'hiddenRecord1ValueYbJisseki');
		}else if(monthCount == 1){
		    value = grid.getUserData(rowId, 'hiddenRecord2ValueYbJisseki');
		}else if(monthCount == 2){
		    value = grid.getUserData(rowId, 'hiddenRecord3ValueYbJisseki');
		}else if(monthCount == 3){
		    value = grid.getUserData(rowId, 'hiddenRecord4ValueYbJisseki');
		}else if(monthCount == 4){
		    value = grid.getUserData(rowId, 'hiddenRecord5ValueYbJisseki');
		}else if(monthCount == 5){
		    value = grid.getUserData(rowId, 'hiddenRecord6ValueYbJisseki');
	　　　 }
        ## add End 2022/12/21 H.futagami No.8　計画管理の月別計画に納入実績の値を表示
        if(value != null && value.toString() != ""){
          sumValue = sumValue + Number(value);
        }
      }else{
        ## 各月月末計画計画値
        value = grid.cells(rowId,monthCount * 9 + 10).getValue();
        if(value != null && value.toString() != ""){
          sumValue = sumValue + convertToInteger(grid,rowId,monthCount * 9 + 10);
        }
      }
    }
## mod End 2022/11/29 H.futagami No.19　「合計」欄は「前月までの実績＋当月以降の入力した計画」の合計を表示

##    var cell = grid.cells(rowId, 56);
    var cell = grid.cells(rowId, 64);
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
    if (sumValue != null) {
        cell.setValue(sumValue);
    }
    else {
        cell.setValue(null);
    }
}

## 合計行の設定
function setSumGrid(detailGrid, sumGrid, columnId){
	// 全合計取得
	var allSum = 0;
	// 入力行のデータを、合計
	for (rowId = 1; rowId <= detailGrid.getRowsNum(); rowId++) {
		var targetSum = detailGrid.getUserData(rowId, 'targetSummary');
		// 集計対象の行の値のみ
		if(targetSum == "1"){
            ## add Start 2022/12/21 H.futagami No.8　計画管理の月別計画に納入実績の値を表示
		    var value;
		    if(columnId == "2"){
				value = detailGrid.getUserData(rowId, 'hiddenRecordTotalValueYbJisseki');
			}else if(columnId == "3"){
				value = detailGrid.getUserData(rowId, 'hiddenRecordTougetuValueYbJisseki');
			}else if(columnId == "12"){
			    value = detailGrid.getUserData(rowId, 'hiddenRecord1ValueYbJisseki');
			}else if(columnId == "21"){
			    value = detailGrid.getUserData(rowId, 'hiddenRecord2ValueYbJisseki');
			}else if(columnId == "30"){
			    value = detailGrid.getUserData(rowId, 'hiddenRecord3ValueYbJisseki');
			}else if(columnId == "39"){
			    value = detailGrid.getUserData(rowId, 'hiddenRecord4ValueYbJisseki');
			}else if(columnId == "48"){
			    value = detailGrid.getUserData(rowId, 'hiddenRecord5ValueYbJisseki');
			}else if(columnId == "57"){
			    value = detailGrid.getUserData(rowId, 'hiddenRecord6ValueYbJisseki');
			}else{
				value = convertToInteger(detailGrid,rowId,columnId);
			}
            ## add End 2022/12/21 H.futagami No.8　計画管理の月別計画に納入実績の値を表示
			if(value == null || value.toString() == ""){
				continue;
			}
			allSum = allSum + Number(value);
			minusStyle(detailGrid,rowId, columnId);
		}
	}

	## 他カテゴリの加算値
	var otherPlanValue  = "";
	if (columnId == 1) {
		otherPlanValue = detailGrid.getUserData("", 'otherPlanTerm');
	}
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
	if (columnId == 2) {
		otherPlanValue = detailGrid.getUserData("", 'otherPlanTotal');
	}
	if (columnId == 3) {
		otherPlanValue = detailGrid.getUserData("", 'otherPlanTougetu');
	}
##	if (columnId == 2) {
	if (columnId == 4) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanPS1');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanPS1');
##	}
	}
##	if (columnId == 4) {
	if (columnId == 6) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanP1');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanP1');
##	}
	}
##	if (columnId == 6) {
	if (columnId == 8) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanES1');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanES1');
##	}
	}
##	if (columnId == 8) {
	if (columnId == 10) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanE1');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanE1');
##	}
	}
	if (columnId == 12) {
		otherPlanValue = detailGrid.getUserData("", 'otherPlanR1');
	}
##	if (columnId == 10) {
	if (columnId == 13) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanPS2');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanPS2');
##	}
	}
##	if (columnId == 12) {
	if (columnId == 15) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanP2');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanP2');
##	}
	}
##	if (columnId == 14) {
	if (columnId == 17) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanES2');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanES2');
##	}
	}
##	if (columnId == 16) {
	if (columnId == 19) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanE2');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanE2');
##	}
	}
	if (columnId == 21) {
		otherPlanValue = detailGrid.getUserData("", 'otherPlanR2');
	}
##	if (columnId == 18) {
	if (columnId == 22) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanPS3');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanPS3');
##	}
	}
##	if (columnId == 20) {
	if (columnId == 24) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanP3');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanP3');
##	}
	}
##	if (columnId == 22) {
	if (columnId == 26) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanES3');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanES3');
##	}
	}
##	if (columnId == 24) {
	if (columnId == 28) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanE3');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanE3');
##	}
	}
	if (columnId == 30) {
		otherPlanValue = detailGrid.getUserData("", 'otherPlanR3');
	}
##	if (columnId == 26) {
	if (columnId == 31) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanPS4');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanPS4');
##	}
	}
##	if (columnId == 28) {
	if (columnId == 33) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanP4');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanP4');
##	}
	}
##	if (columnId == 30) {
	if (columnId == 35) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanES4');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanES4');
##	}
	}
##	if (columnId == 32) {
	if (columnId == 37) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanE5');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanE4');
##	}
	}
	if (columnId == 39) {
		otherPlanValue = detailGrid.getUserData("", 'otherPlanR4');
	}
##	if (columnId == 34) {
	if (columnId == 40) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanPS5');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanPS5');
##	}
	}
##	if (columnId == 36) {
	if (columnId == 42) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanP5');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanP5');
##	}
	}
##	if (columnId == 38) {
	if (columnId == 44) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanES5');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanES5');
##	}
	}
##	if (columnId == 40) {
	if (columnId == 46) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanE6');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanE5');
##	}
	}
	if (columnId == 48) {
		otherPlanValue = detailGrid.getUserData("", 'otherPlanR5');
	}
##	if (columnId == 42) {
	if (columnId == 49) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanPS6');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanPS6');
##	}
	}
##	if (columnId == 44) {
	if (columnId == 51) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanP6');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanP6');
##	}
	}
##	if (columnId == 46) {
	if (columnId == 53) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanES6');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanES6');
##	}
	}
##	if (columnId == 48) {
	if (columnId == 55) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanE6');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanE6');
##	}
	}
	if (columnId == 57) {
		otherPlanValue = detailGrid.getUserData("", 'otherPlanR6');
	}
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示

	if (otherPlanValue != null && otherPlanValue != "") {
		allSum = allSum + Number(otherPlanValue);
	}

	// 全合計行に設定
	for (rowId = 1; rowId <= sumGrid.getRowsNum(); rowId++) {
		var rowType = sumGrid.getUserData(rowId, 'rowType');
		if(rowType == "total"){
			sumGrid.cells(rowId, columnId).setValue(allSum);
			minusStyle(sumGrid,rowId, columnId);
		}
        ## add Start 2022/12/21 H.futagami No.8　計画管理の月別計画に納入実績の値を表示
	    if(columnId == "2"){
	        sumGrid.setUserData(rowId, 'hiddenRecordTotalValueYbJisseki', allSum);
		}else if(columnId == "3"){
		    sumGrid.setUserData(rowId, 'hiddenRecordTougetuValueYbJisseki', allSum);
		}else if(columnId == "12"){
			sumGrid.setUserData(rowId, 'hiddenRecord1ValueYbJisseki', allSum);
		}else if(columnId == "21"){
		    sumGrid.setUserData(rowId, 'hiddenRecord2ValueYbJisseki', allSum);
		}else if(columnId == "30"){
		    sumGrid.setUserData(rowId, 'hiddenRecord3ValueYbJisseki', allSum);
		}else if(columnId == "39"){
		    sumGrid.setUserData(rowId, 'hiddenRecord4ValueYbJisseki', allSum);
		}else if(columnId == "48"){
		    sumGrid.setUserData(rowId, 'hiddenRecord5ValueYbJisseki', allSum);
		}else if(columnId == "57"){
		    sumGrid.setUserData(rowId, 'hiddenRecord6ValueYbJisseki', allSum);
		}
        ## add End 2022/12/21 H.futagami No.8　計画管理の月別計画に納入実績の値を表示
	}
}

## 指定セルスタイルの再設定処理
function setCellStyle(grid, rowId, colIdArr) {
    for(arrIdx = 0; arrIdx < colIdArr.length; arrIdx++){
        var colId = colIdArr[arrIdx];
        var value = grid.cells(rowId,colId).getValue();
        minusStyle(grid, rowId, colId, value);
        if (value.toString() == "NaN") {
            grid.cells(rowId,colId).setValue("");
        }
    }
}

## 検索処理
function dpm501C00F05() {
    if (searchValidation()) {
        if (editFlg) {
            if (!window.confirm('$text.get("DPC999C99.001","dialogue")')) {
                return;
            }
        }
        var actionPath = "$link.setAction('dpm501C00F05')";
        document.dpm501C00Form.action = actionPath;
        document.dpm501C00Form.submit();

        dpm501C00F05 = blockIt;
        execute = blockIt;
        dpm500C00F05 = blockIt;
        dpm600C00F05 = blockIt;
    }
}

## 組織・従業員選択後の処理
function changeSos(sosCd, jgiNo, sosMaxSrchGetValue, etcSosFlg) {
	let memorizer = new CategoryAndProdCodeMemorizer();
	sosApply(sosCd, jgiNo, sosMaxSrchGetValue, etcSosFlg);
	changeCategory();
    memorizer.undoCategoryCodeValue();
}

## 検索時入力チェック
function searchValidation() {
    ## 入力フォーム
    var form = document.dpm501C00Form;
    var value = "";

    ## [必須] カテゴリ
    value = form.prodCategory.value;
    errorMsg = '$text.get("DPC1003E",["カテゴリ"])';
    addErrorInfo(!isEntered(value), errorMsg);

    return validation();
}

## 更新処理
function dpm501C00FXXExecute() {
    ## 担当者選択時
    #if ($form.bean.jgiNo)
        execute('$text.get("DPM501C00.004","dialogue")', '$link.setAction("dpm501C00F14Execute")');
    ## 営業所選択時
    #elseif ($form.bean.sosCd3)
        execute('$text.get("DPM501C00.003","dialogue")', '$link.setAction("dpm501C00F12Execute")');
    ## 支店選択時
    #elseif ($form.bean.sosCd2)
        execute('$text.get("DPM501C00.002","dialogue")', '$link.setAction("dpm501C00F11Execute")');
    ## 全社選択時
    #else
        execute('$text.get("DPM501C00.001","dialogue")', '$link.setAction("dpm501C00F10Execute")');
    #end
}

## 更新処理
function execute(confirmMsg, actionPath) {

    ## --- 編集中セル値の登録時チェック ---
	if(window.editValueChecker.isValid() == false){
		return;
	}

    ##入力チェック
    if (!executeValidation()) {
        return;
    }
    ##確認
    if (!confirm(confirmMsg)) {
        return;
    }
    var form = document.dpm501C00Form;
    ## ユーザデータに編集後の計画値を追加
    var rowNum = ${GridObjName1}.getRowsNum();
    for (i = 1; i <= rowNum; i++) {
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##        var p1 = ${GridObjName1}.cells(i,4).getValue();
        var p1 = ${GridObjName1}.cells(i,6).getValue();
##        var e1 = ${GridObjName1}.cells(i,8).getValue();
        var e1 = ${GridObjName1}.cells(i,10).getValue();
##        p1 = p1.toString().replace(/,/g,"");
        p1 = p1.toString().replace(/,/g,"");
##        e1 = e1.toString().replace(/,/g,"");
        e1 = e1.toString().replace(/,/g,"");
##        var p2 = ${GridObjName1}.cells(i,12).getValue();
        var p2 = ${GridObjName1}.cells(i,15).getValue();
##        var e2 = ${GridObjName1}.cells(i,16).getValue();
        var e2 = ${GridObjName1}.cells(i,19).getValue();
##        p2 = p2.toString().replace(/,/g,"");
        p2 = p2.toString().replace(/,/g,"");
##        e2 = e2.toString().replace(/,/g,"");
        e2 = e2.toString().replace(/,/g,"");
##        var p3 = ${GridObjName1}.cells(i,20).getValue();
        var p3 = ${GridObjName1}.cells(i,24).getValue();
##        var e3 = ${GridObjName1}.cells(i,24).getValue();
        var e3 = ${GridObjName1}.cells(i,28).getValue();
##        p3 = p3.toString().replace(/,/g,"");
        p3 = p3.toString().replace(/,/g,"");
##        e3 = e3.toString().replace(/,/g,"");
        e3 = e3.toString().replace(/,/g,"");
##        var p4 = ${GridObjName1}.cells(i,28).getValue();
        var p4 = ${GridObjName1}.cells(i,33).getValue();
##        var e4 = ${GridObjName1}.cells(i,32).getValue();
        var e4 = ${GridObjName1}.cells(i,37).getValue();
##        p4 = p4.toString().replace(/,/g,"");
        p4 = p4.toString().replace(/,/g,"");
##        e4 = e4.toString().replace(/,/g,"");
        e4 = e4.toString().replace(/,/g,"");
##        var p5 = ${GridObjName1}.cells(i,36).getValue();
        var p5 = ${GridObjName1}.cells(i,42).getValue();
##        var e5 = ${GridObjName1}.cells(i,40).getValue();
        var e5 = ${GridObjName1}.cells(i,46).getValue();
##        p5 = p5.toString().replace(/,/g,"");
        p5 = p5.toString().replace(/,/g,"");
##        e5 = e5.toString().replace(/,/g,"");
        e5 = e5.toString().replace(/,/g,"");
##        var p6 = ${GridObjName1}.cells(i,44).getValue();
        var p6 = ${GridObjName1}.cells(i,51).getValue();
##        var e6 = ${GridObjName1}.cells(i,48).getValue();
        var e6 = ${GridObjName1}.cells(i,55).getValue();
##        p6 = p6.toString().replace(/,/g,"");
        p6 = p6.toString().replace(/,/g,"");
##        e6 = e6.toString().replace(/,/g,"");
        e6 = e6.toString().replace(/,/g,"");
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
        var userData = ${GridObjName1}.getUserData(i, 'updateRowId');
        userData += "," + p1 + "," + e1 + "," + p2 + "," + e2 + "," + p3 + "," + e3 + "," + p4 + "," + e4 + "," + p5 + "," + e5 + "," + p6 + "," + e6 ;
        ${GridObjName1}.setUserData(i, 'updateRowId', userData);
    }
    ##フォームに更新情報を格納
    addRowIdList(form, ${GridObjName1}, 'rowIdList', 'updateRowId');
    ##送信
    document.dpm501C00Form.action = actionPath;
    document.dpm501C00Form.submit();

    dpm501C00F05 = blockIt;
    execute = blockIt;
    dpm500C00F05 = blockIt;
    dpm600C00F05 = blockIt;
}

## 更新時入力チェック
function executeValidation() {
    var rowNum = ${GridObjName1}.getRowsNum();
    for (i = 1; i <= rowNum; i++) {
        ## メッセージ準備
        var rowInfo = ${GridObjName1}.getUserData(i, 'prodName');
        ## エラーチェック
        ## [UH Y価ベース]
        var checkValueUH = ${GridObjName1}.cells(i, 2).getValue().toString();
        amountValidationNotTailCheck("【UH】", checkValueUH, 10, true, rowInfo);
        ## [UH Y価ベース]
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##        var checkValueP  = ${GridObjName1}.cells(i, 4).getValue().toString();
        var checkValueP  = ${GridObjName1}.cells(i, 6).getValue().toString();
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
        amountValidationNotTailCheck("【P】", checkValueP, 10, true, rowInfo);
        ## [Z Y価ベース]
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##        var checkValueZ  = ${GridObjName1}.cells(i, 6).getValue().toString();
        var checkValueZ  = ${GridObjName1}.cells(i, 8).getValue().toString();
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
        amountValidationNotTailCheck("【Z】", checkValueZ, 10, true, rowInfo);
    }
    return validation();
}

## 支店計画で組織別計画編集画面を開く
function dpm500C00F05Siten(prodCode) {
    var sosCd2 = document.getElementById('sosCd2');
    sosCd2.value = "";
    var sosCd3 = document.getElementById('sosCd3');
    sosCd3.value = "";
    var sosCd4 = document.getElementById('sosCd4');
    sosCd4.value = "";
    var etcSosFlg = document.getElementById('etcSosFlg');
    etcSosFlg.value = false;
    var oncSosFlg = document.getElementById('oncSosFlg');
    oncSosFlg.value = "$!form.bean.oncSosFlg";
## add start 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）
    var sosCategory = document.getElementById('sosCategory');
    if (sosCategory != null && sosCategory != "") {
	    sosCategory.value = "$!form.bean.sosCategory";
	}
## add end 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）

    var form = document.dpm501C00Form;
    form.prodCategory.value = "$!form.bean.prodCategory";
    form.prodCode.value = prodCode;
    dpm500C00F05();
}

## 営業所計画で組織別計画編集画面を開く
function dpm500C00F05Office(prodCode) {
    var sosCd2 = document.getElementById('sosCd2');
    sosCd2.value = "$!form.bean.sosCd2";
    var sosCd3 = document.getElementById('sosCd3');
    sosCd3.value = "";
    var sosCd4 = document.getElementById('sosCd4');
    sosCd4.value = "";
    var etcSosFlg = document.getElementById('etcSosFlg');
    etcSosFlg.value = false;
    var oncSosFlg = document.getElementById('oncSosFlg');
    oncSosFlg.value = "$!form.bean.oncSosFlg";
## add start 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）
    var sosCategory = document.getElementById('sosCategory');
    if (sosCategory != null && sosCategory != "") {
	    sosCategory.value = "$!form.bean.sosCategory";
	}
## add end 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）

    var form = document.dpm501C00Form;
    form.prodCategory.value = "$!form.bean.prodCategory";
    form.prodCode.value = prodCode;
    dpm500C00F05();
}

## 担当者計画で組織別計画編集画面を開く
function dpm500C00F05Jgi(prodCode) {
    var sosCd2 = document.getElementById('sosCd2');
    sosCd2.value = "$!form.bean.sosCd2";
    var sosCd3 = document.getElementById('sosCd3');
    sosCd3.value = "$!form.bean.sosCd3";
    var sosCd4 = document.getElementById('sosCd4');
    sosCd4.value = "$!form.bean.sosCd4";
    var etcSosFlg = document.getElementById('etcSosFlg');
    etcSosFlg.value = $!form.bean.etcSosFlg;
    var oncSosFlg = document.getElementById('oncSosFlg');
    oncSosFlg.value = "$!form.bean.oncSosFlg";
## add start 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）
    var sosCategory = document.getElementById('sosCategory');
    if (sosCategory != null && sosCategory != "") {
	    sosCategory.value = "$!form.bean.sosCategory";
	}
## add end 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）

    var form = document.dpm501C00Form;
    form.prodCategory.value = "$!form.bean.prodCategory";
    form.prodCode.value = prodCode;
    dpm500C00F05();
}

## 組織別計画編集画面を開く
function dpm500C00F05() {
    if (editFlg) {
        if (!window.confirm('$text.get("DPC999C99.001","dialogue")')) {
            return;
        }
    }
    var url ="$link.setAction('dpm500C00F05')";
    document.dpm501C00Form.action = url;
    document.dpm501C00Form.submit();

    dpm501C00F05 = blockIt;
    execute = blockIt;
    dpm500C00F05 = blockIt;
    dpm600C00F05 = blockIt;
}

## 担当者計画で[UH]施設別計画編集画面を開く
function dpm600C00F05UH(prodCode) {
    var sosCd2 = document.getElementById('sosCd2');
    sosCd2.value = "$!form.bean.sosCd2";
    var sosCd3 = document.getElementById('sosCd3');
    sosCd3.value = "$!form.bean.sosCd3";
    var sosCd4 = document.getElementById('sosCd4');
    sosCd4.value = "$!form.bean.sosCd4";
    var jgiNo = document.getElementById('jgiNo');
    jgiNo.value = "$!form.bean.jgiNo";
    var etcSosFlg = document.getElementById('etcSosFlg');
    etcSosFlg.value = $!form.bean.etcSosFlg;
    var oncSosFlg = document.getElementById('oncSosFlg');
    oncSosFlg.value = "$!form.bean.oncSosFlg";
## add start 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）
    var sosCategory = document.getElementById('sosCategory');
    if (sosCategory != null && sosCategory != "") {
	    sosCategory.value = "$!form.bean.sosCategory";
	}
## add end 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）

    var form = document.dpm501C00Form;
    form.prodCategory.value = "$!form.bean.prodCategory";
    form.prodCode.value = prodCode;
    form.insType.value = "1";
    form.planData.value = "0";
    form.insNo.value = "";
    form.insName.value = "";
    dpm600C00F05();
}

## 担当者計画で[P]施設別計画編集画面を開く
function dpm600C00F05P(prodCode) {
    var sosCd2 = document.getElementById('sosCd2');
    sosCd2.value = "$!form.bean.sosCd2";
    var sosCd3 = document.getElementById('sosCd3');
    sosCd3.value = "$!form.bean.sosCd3";
    var sosCd4 = document.getElementById('sosCd4');
    sosCd4.value = "$!form.bean.sosCd4";
    var jgiNo = document.getElementById('jgiNo');
    jgiNo.value = "$!form.bean.jgiNo";
    var etcSosFlg = document.getElementById('etcSosFlg');
    etcSosFlg.value = $!form.bean.etcSosFlg;

    var form = document.dpm501C00Form;
    form.prodCategory.value = "$!form.bean.prodCategory";
    form.prodCode.value = prodCode;
    form.insType.value = "2";
    form.planData.value = "0";
    form.insNo.value = "";
    form.insName.value = "";
    dpm600C00F05();
}

## 担当者計画で[Z]施設別計画編集画面を開く
function dpm600C00F05Z(prodCode) {
    var sosCd2 = document.getElementById('sosCd2');
    sosCd2.value = "$!form.bean.sosCd2";
    var sosCd3 = document.getElementById('sosCd3');
    sosCd3.value = "$!form.bean.sosCd3";
    var sosCd4 = document.getElementById('sosCd4');
    sosCd4.value = "$!form.bean.sosCd4";
    var jgiNo = document.getElementById('jgiNo');
    jgiNo.value = "$!form.bean.jgiNo";
    var etcSosFlg = document.getElementById('etcSosFlg');
    etcSosFlg.value = $!form.bean.etcSosFlg;

    var form = document.dpm501C00Form;
    form.prodCategory.value = "$!form.bean.prodCategory";
    form.prodCode.value = prodCode;
    form.insType.value = "3";
    form.planData.value = "0";
    form.insNo.value = "";
    form.insName.value = "";
    dpm600C00F05();
}

## 出力処理
function dpm501C00F15(){
    if (!searchValidation()) {
        return;
    }

    ##確認
    if (!confirm('$text.get("DPM501C00.005","dialogue")')) {
        return;
    }

    ##送信
    var actionPath = '$link.setAction('dpm501C00F15Output')';
    document.dpm501C00Form.action = actionPath;
    document.dpm501C00Form.submit();

    return false;
}


## 施設別計画編集画面を開く
function dpm600C00F05() {
    if (editFlg) {
        if (!window.confirm('$text.get("DPC999C99.001","dialogue")')) {
            return;
        }
    }
    var url ="$link.setAction('dpm600C00F05')";
    var form = document.dpm501C00Form;
    if (form.prodCategory.value == "$vaccineCode") {
        if (!form.activityType.value) {
            form.activityType.value = "2";
        }
        url ="$link.setAction('dpm600C00F25')";
    }
    document.dpm501C00Form.action = url;
    document.dpm501C00Form.submit();

    dpm501C00F05 = blockIt;
    execute = blockIt;
    dpm500C00F05 = blockIt;
    dpm600C00F05 = blockIt;
}

## カテゴリリストの変更処理
## 組織・担当者を変更した時
function changeCategory() {
	var form = document.dpm501C00Form;

    var sosCategoryAry = document.getElementById('sosCategory').value.split(',');

    ## 組織コードの取得
    var sosCd;
    if(isEntered(form.sosCd4.value)){
      sosCd = form.sosCd4.value;
    } else if(isEntered(form.sosCd3.value)){
      sosCd = form.sosCd3.value;
    } else if(isEntered(form.sosCd2.value)){
      sosCd = form.sosCd2.value;
    } else {
      sosCd = null;
    }


    ## 計画対象カテゴリ領域より、立案レベルを条件にカテゴリを取得
    var planLvCtgList = [];
    if (isEntered(form.sosCd3.value)) {
      planLvCtgList = [
                      #foreach($val in $service.getCategoryByPlanLevel($form.getField("DPM501C00_PLANLEVEL_MR")))
                      , '$val'
                      #end
                      ];
    } else if (isEntered(form.sosCd2.value)) {
      planLvCtgList = [
                      #foreach($val in $service.getCategoryByPlanLevel($form.getField("DPM501C00_PLANLEVEL_OFFICE")))
                      , '$val'
                      #end
                      ];
    } else {
      planLvCtgList = [
                      #foreach($val in $service.getCategoryByPlanLevel($form.getField("DPM501C00_PLANLEVEL_SITEN")))
                      , '$val'
                      #end
                      ];
    }

	## 選択した組織のカテゴリは、このタイミングでvelocityで取得できないので、カテゴリを一旦全て取得
    var categoryList = [
                      #foreach($codeAndValue in $service.getDpmCategoryPlanList(null, '2', false))
                      , { text: '$codeAndValue.value', value: '$codeAndValue.code' }
                      #end
                     ];

	## JRNSに含まれるカテゴリリスト
	var jrnsCategoryList = [
                      #foreach($code in $jrnsCategoryList)
                      , '$code'
                      #end
                     ];

	var jrnsUser = $jrnsUser;
	var jrnsCode =  '$jrnsCode';

    ## カテゴリのselectbox
	var prodCategory = document.getElementsByName('prodCategory')[0];
	## 一旦selectboxのoptionを削除
	while(prodCategory.lastChild)
	{
		prodCategory.removeChild(prodCategory.lastChild);
	}
	## optionを作成
	var option;
	document.createElement('option');
	## 選択した組織のカテゴリのみ残す
    for (var i = 1; i < categoryList.length; i++){
		// JRNSの場合、支店スタッフ以上である＆営業所・NSG・ワクチン・CVのいずれかがリストに存在する場合に、リストに追加する
		if (jrnsCode == categoryList[i].value && jrnsUser && isExistJrnsCtg) {
			option = document.createElement('option');
			option.setAttribute('value', categoryList[i].value);
			option.innerHTML = categoryList[i].text;
    		prodCategory.appendChild(option);
		} else if (jrnsCode != categoryList[i].value) {
	    	for(var j = 0; j < sosCategoryAry.length; j++) {
	    		if (categoryList[i].value == sosCategoryAry[j] && planLvCtgList.includes(categoryList[i].value)) {
					option = document.createElement('option');
					option.setAttribute('value', categoryList[i].value);
					option.innerHTML = categoryList[i].text;
	    			prodCategory.appendChild(option);
					if (jrnsCategoryList.includes(categoryList[i].value)) {
						isExistJrnsCtg = true;
					}
	    		}
	    	}
	    }
    }
}

## 施設積上ダイアログ
function openInsDialog() {
    if (editFlg) {
        if (!window.confirm('$text.get("DPC999C99.001","dialogue")')) {
            return;
        }
    }
    var url = "$link.setAction('dpm501C01F00')";
    url = url.concat("?jgiNo=$form.bean.jgiNo");
    url = url.concat("&prodCategory=$form.bean.prodCategory");
    openModalWindow(url);
    editFlg = false;


    var sosCd2 = document.getElementById('sosCd2');
    sosCd2.value = "$!form.bean.sosCd2";
    var sosCd3 = document.getElementById('sosCd3');
    sosCd3.value = "$!form.bean.sosCd3";
    var sosCd4 = document.getElementById('sosCd4');
    sosCd4.value = "$!form.bean.sosCd4";
    var jgiNo = document.getElementById('jgiNo');
    jgiNo.value = "$!form.bean.jgiNo";
    var etcSosFlg = document.getElementById('etcSosFlg');
    etcSosFlg.value = "$!form.bean.etcSosFlg";
    var oncSosFlg = document.getElementById('oncSosFlg');
    oncSosFlg.value = "$!form.bean.oncSosFlg";
    var prodCategory = document.getElementById('prodCategory');
    prodCategory.value = "$!form.bean.prodCategory";
## add start 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）
    var sosCategory = document.getElementById('sosCategory');
    if (sosCategory != null && sosCategory != "") {
	    sosCategory.value = "$!form.bean.sosCategory";
	}
## add end 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）

    dpm501C00F05();
}
//-->
</script>

<div id="noTabBox">
<form name="dpm501C00Form" method="post">
<input type="hidden" name="sosCd2Tran" value="$!form.bean.sosCd2Tran">
<input type="hidden" name="sosCd3Tran" value="$!form.bean.sosCd3Tran">
<input type="hidden" name="sosCd4Tran" value="$!form.bean.sosCd4Tran">
<input type="hidden" name="jgiNoTran" value="$!form.bean.jgiNoTran">
<input type="hidden" name="etcSosFlgTran" value="$!form.bean.etcSosFlgTran">
<input type="hidden" name="oncSosFlgTran" value="$!form.bean.oncSosFlgTran">
<input type="hidden" name="prodCategoryTran" value="$!form.bean.prodCategoryTran">
## add start 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）
<input type="hidden" name="sosCategoryTran" value="$!form.bean.sosCategoryTran">
## add end 2018/1/18 M.Wada J17-0010_2018年4月組織変更対応（各種アプリ）
<input type="hidden" name="prodCode" value="">
<input type="hidden" name="insType" value="">
<input type="hidden" name="planData" value="">
<input type="hidden" name="insNo" value="">
<input type="hidden" name="insName" value="">
<input type="hidden" name="vaccineCode" value="$vaccineCode">
<input type="hidden" name="activityType" value="">
<input type="hidden" name="addrCodePref" id="addrCodePref" value="">
<input type="hidden" name="addrCodeCity" id="addrCodeCity" value="">
<table class="gridLine" cellspacing="0" cellpadding="1">
    <tr>
        <td class="gridIndex" style="width: 150px;">組織・担当者*</td>
        <td>#sosDialogExt2("changeSos" ,"01", "00", "04", "DPM50")</td>
    </tr>
    <tr>
        <td class="gridIndex" style="width: 150px;">カテゴリ*</td>
        <td>#select ("prodCategory", $!form.bean.prodCategoryList, $!form.bean.prodCategory)</td>
    </tr>
</table>
<table style="margin-top: 2px; margin-bottom: 2px; width: 100%;">
    <tr>
        <td>
            <input type="button" value="表示" style="width: 80px;" onclick="dpm501C00F05()" />
            #if ($!security.hasAuthEdit("DPM50"))
            #if ($resultDetail)
                <input type="button" value="登録" style="width: 80px;" onclick="dpm501C00FXXExecute()" />
            #else
                <input type="button" value="登録" style="width: 80px;" onclick="dpm501C00FXXExecute()" disabled />
            #end
            #end
            #if ($resultDetail)
            	<input type="button" value="ダウンロード" style="width: 120px;" onclick="dpm501C00F15()" />
            #else
                <input type="button" value="ダウンロード" style="width: 120px;" disabled />
            #end

        </td>
        <td style="text-align: right; vertical-align: bottom;"><label>$consts.tableHeader</label></td>
    </tr>
</table>
#if($resultDetail)
    #loadingGridDiv2("${GridObjName2}", "${CoverId2}" ,"width: 99.5%; clear: both;")
    #loadingGridDiv2("${GridObjName1}", "${CoverId1}" ,"width: 99.5%; clear: both;")
#else
    <div id="${GridObjName2}" style="width: 99.5%; clear: both;"></div>
    <div id="${GridObjName1}" style="width: 99.5%; clear: both;"></div>
#end
#token()
</form>
</div>
