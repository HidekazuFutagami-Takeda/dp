## (医)施設品目別計画編集画面
#set($pageTitle = $text.get("dpm601C00","title"))
#set($bodyOnloadMethod  = "dpm601C00F00()")
#set($dataListFileName  = "dpm601C00x01.vm")
#set($dataListFileName2 = "dpm601C00x02.vm")
## 検索結果
#set($enableEntry = false)
#if($form.getRequestData("DPM601C00_DATA_R_SEARCH_RESULT"))
    #set($resultDetail = $form.getRequestData("DPM601C00_DATA_R_SEARCH_RESULT").detailList)
    #set($enableEntry = $form.getRequestData("DPM601C00_DATA_R_SEARCH_RESULT").enableEntry)
#end
## ワクチンのカテゴリ
#set($vaccineCode = $service.getVaccineCode())
## カテゴリリスト
#set($categoryList = $!form.bean.prodCategoryList)
## カテゴリ名
#set($prodCategory = "")
#if($form.bean.prodCategory)
#foreach($codeAndValue in $categoryList)
    #if($codeAndValue.code == $form.bean.prodCategory)
        #set($prodCategory = "$codeAndValue.value")
    #end
#end
#end

## 全MRフラグ
#set($mrflg = $!form.bean.mrFlg)

## 施設名
#set($insName = "　")
#if($form.bean.insName && $form.bean.insName != "")
    #set($insName = $form.bean.insName)
#end
## 実施計画区分
#set($plannedType = $security.getPlannedType().toString())
#set($plannedTypeStr = "実施計画")

## グリッドのヘッダ
#set($headerDetail = $form.bean.headerDetail)
#set($headerSum = $form.bean.headerSum)
#set($attachHeader1row = $form.bean.attachHeader1row)
#set($attachHeader2row = $form.bean.attachHeader2row)
#set($attachHeader3row = $form.bean.attachHeader3row)
#set($initWidths = $form.bean.initWidths)
#set($colAlign = $form.bean.colAlign)
#set($colTypes = $form.bean.colTypes)
#set($enableResizing = $form.bean.enableResizing)
#set($enableTooltips = $form.bean.enableTooltips)

## add Start 2022/11/29 H.futagami No.19　「合計」欄は「前月までの実績＋当月以降の入力した計画」の合計を表示
#set($tougetuCount = $form.bean.tougetuCount)
## add End 2022/11/29 H.futagami No.19　「合計」欄は「前月までの実績＋当月以降の入力した計画」の合計を表示

## 当月以降であることによる編集可能リスト
#set($enableEditList = $form.bean.enableEditList)

<script language="javascript">
<!--
document.getElementById("closeWindow").value = "true";

## 明細行グリッド
#set($CoverId1 = "dpm601C00CoverId1")
#set($GridObjName1 = "dpm601C00Grid1")
#set($gridHeight = $text.get("${GridObjName1}","grid"))
var ${GridObjName1};
## 集計行グリッド
#set($CoverId2 = "dpm601C00CoverId2")
#set($GridObjName2 = "dpm601C00Grid2")
var ${GridObjName2};
## 編集検知フラグ
var editFlg = false;
## 初期表示
function dpm601C00F00() {
    doInitGrid1(); ## 明細行
    doInitGrid2(); ## 集計行
    ## 明細行のデータ読み込み
    if (document.getElementById("$dataListFileName")) {
        var loadXMLString = document.getElementById("$dataListFileName").value;
        if (loadXMLString != null && loadXMLString != "") {
            ${GridObjName1}.loadXMLString(loadXMLString);
            for (rowId = 1; rowId <= ${GridObjName1}.getRowsNum(); rowId++) {
                ## 合計列の計算処理(月初計画)
                doCalcPlannedValueSum(${GridObjName1}, rowId);
                ## 合計列の計算処理(月末計画)
                doCalcExpectedValueSum(${GridObjName1}, rowId);
                ## 遂行率の計算処理
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##                for (columnId = 3; columnId <= 29; columnId = columnId + 2) {
                for (columnId = 5; columnId <= 35; columnId = columnId + 5) {
##                    doCalcExecuteRate(${GridObjName1}, rowId, columnId);
                    doCalcExecuteRate(${GridObjName1}, rowId, columnId);
##                }
                }
                for (columnId = 7; columnId <= 37; columnId = columnId + 5) {
                    doCalcExecuteRate(${GridObjName1}, rowId, columnId);
                }
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
            }
        }
    }
    ## 集計行のデータ読み込み
    if (document.getElementById("$dataListFileName2")) {
        var loadXMLString = document.getElementById("$dataListFileName2").value;
        if (loadXMLString != null && loadXMLString != "") {
            ${GridObjName2}.loadXMLString(loadXMLString);
            ##集計グリッドの高さを設定
            ${GridObjName2}.entBox.style.height="125px";
            ## 集計行の値をセット
            setSumGrid(${GridObjName1}, ${GridObjName2}, 1);
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
            setSumGrid(${GridObjName1}, ${GridObjName2}, 2);
            setSumGrid(${GridObjName1}, ${GridObjName2}, 3);
##            for (colomnId = 2; colomnId <= 28; colomnId = colomnId + 2) {
            for (colomnId = 4; colomnId <= 34; colomnId = colomnId + 5) {
##              setSumGrid(${GridObjName1}, ${GridObjName2}, colomnId);
              setSumGrid(${GridObjName1}, ${GridObjName2}, colomnId);
##            }
            }
            for (colomnId = 6; colomnId <= 36; colomnId = colomnId + 5) {
              setSumGrid(${GridObjName1}, ${GridObjName2}, colomnId);
            }
            for (colomnId = 8; colomnId <= 33; colomnId = colomnId + 5) {
              setSumGrid(${GridObjName1}, ${GridObjName2}, colomnId);
            }
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
            ## 遂行率の計算処理
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##            for (columnId = 3; columnId <= 29; columnId = columnId + 2) {
            for (columnId = 5; columnId <= 35; columnId = columnId + 5) {
##				doCalcExecuteRate(${GridObjName2}, 1, columnId);
				doCalcExecuteRate(${GridObjName2}, 1, columnId);
##        	}
        	}
            for (columnId = 7; columnId <= 37; columnId = columnId + 5) {
				doCalcExecuteRate(${GridObjName2}, 1, columnId);
        	}
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
        }
    }

## add Start 2022/11/16 H.futagami No.8　計画管理の月別計画に納入実績の値を表示
    ## 実績の四捨五入処理
    ## 集計行
    if (document.getElementById("$dataListFileName2") && ${GridObjName2}.getRowsNum() > 0) {
        for (columnId = 2; columnId <= 3; columnId = columnId + 1) {
            var valueRound = ${GridObjName2}.cells(1,columnId).getValue();
            if(valueRound != null && valueRound.toString() != ""){
                valueRound = Math.round(valueRound);
        	    ${GridObjName2}.cells(1,columnId).setValue(valueRound);
            }
        }
        for (columnId = 8; columnId <= 33; columnId = columnId + 5) {
            var valueRound = ${GridObjName2}.cells(1,columnId).getValue();
            if(valueRound != null && valueRound.toString() != ""){
                valueRound = Math.round(valueRound);
        	    ${GridObjName2}.cells(1,columnId).setValue(valueRound);
            }
        }
    }
    ## 明細行
    if (document.getElementById("$dataListFileName")) {
        for (rowId = 1; rowId <= ${GridObjName1}.getRowsNum(); rowId++) {
            for (columnId = 2; columnId <= 3; columnId = columnId + 1) {
                var valueRound;
				if(columnId == "2"){
				    valueRound = ${GridObjName1}.getUserData(rowId, 'hiddenRecordTotalValueYbJisseki');
				}else if(columnId == "3"){
				    valueRound = ${GridObjName1}.getUserData(rowId, 'hiddenRecordTougetuValueYbJisseki');
				}
                if(valueRound != null && valueRound.toString() != ""){
                    valueRound = Math.round(Number(valueRound));
            	    ${GridObjName1}.cells(rowId,columnId).setValue(valueRound);
                }
            }
            for (columnId = 8; columnId <= 33; columnId = columnId + 5) {
                var valueRound;
				if(columnId == "8"){
				    valueRound = ${GridObjName1}.getUserData(rowId, 'hiddenRecord1ValueYbJisseki');
				}else if(columnId == "13"){
				    valueRound = ${GridObjName1}.getUserData(rowId, 'hiddenRecord2ValueYbJisseki');
				}else if(columnId == "18"){
				    valueRound = ${GridObjName1}.getUserData(rowId, 'hiddenRecord3ValueYbJisseki');
				}else if(columnId == "23"){
				    valueRound = ${GridObjName1}.getUserData(rowId, 'hiddenRecord4ValueYbJisseki');
				}else if(columnId == "28"){
				    valueRound = ${GridObjName1}.getUserData(rowId, 'hiddenRecord5ValueYbJisseki');
				}else if(columnId == "33"){
				    valueRound = ${GridObjName1}.getUserData(rowId, 'hiddenRecord6ValueYbJisseki');
				}
	            if(valueRound != null && valueRound.toString() != ""){
	            	valueRound = Math.round(Number(valueRound));
	            	${GridObjName1}.cells(rowId,columnId).setValue(valueRound);
	            }
            }
        }
    }
    ## 小数点以下を削除するためにsetNumberFormatを変更して再セット
    ${GridObjName1}.setNumberFormat("0,000",2);
    ${GridObjName1}.setNumberFormat("0,000",3);
    ${GridObjName1}.setNumberFormat("0,000",8);
    ${GridObjName1}.setNumberFormat("0,000",13);
    ${GridObjName1}.setNumberFormat("0,000",18);
    ${GridObjName1}.setNumberFormat("0,000",23);
    ${GridObjName1}.setNumberFormat("0,000",28);
    ${GridObjName1}.setNumberFormat("0,000",33);
    ${GridObjName2}.setNumberFormat("0,000",2);
    ${GridObjName2}.setNumberFormat("0,000",3);
    ${GridObjName2}.setNumberFormat("0,000",8);
    ${GridObjName2}.setNumberFormat("0,000",13);
    ${GridObjName2}.setNumberFormat("0,000",18);
    ${GridObjName2}.setNumberFormat("0,000",23);
    ${GridObjName2}.setNumberFormat("0,000",28);
    ${GridObjName2}.setNumberFormat("0,000",33);
    ## 集計行
    if (document.getElementById("$dataListFileName2") && ${GridObjName2}.getRowsNum() > 0) {
        for (columnId = 2; columnId <= 3; columnId = columnId + 1) {
            var valueRound = ${GridObjName2}.cells(1,columnId).getValue();
            ${GridObjName2}.cells(1,columnId).setValue(valueRound);
        }
        for (columnId = 8; columnId <= 33; columnId = columnId + 5) {
            var valueRound = ${GridObjName2}.cells(1,columnId).getValue();
            ${GridObjName2}.cells(1,columnId).setValue(valueRound);
        }
    }
    ## 明細行
    if (document.getElementById("$dataListFileName")) {
        for (rowId = 1; rowId <= ${GridObjName1}.getRowsNum(); rowId++) {
            for (columnId = 2; columnId <= 3; columnId = columnId + 1) {
                var valueRound = ${GridObjName1}.cells(rowId,columnId).getValue();
                ${GridObjName1}.cells(rowId,columnId).setValue(valueRound);
            }
            for (columnId = 8; columnId <= 33; columnId = columnId + 5) {
                var valueRound = ${GridObjName1}.cells(rowId,columnId).getValue();
                ${GridObjName1}.cells(rowId,columnId).setValue(valueRound);
            }
        }
    }
## add End 2022/11/16 H.futagami No.8　計画管理の月別計画に納入実績の値を表示

    ## データ部とヘッダーのずれ修正 ############
    #correctMisalignedHeader(${GridObjName1} ${GridObjName2})
}

## DHTMLXGrid生成(明細行)
function doInitGrid1() {
    #if($resultDetail)
        ${GridObjName1} = createDhtmlXGridLodingExt("${GridObjName1}", "${CoverId1}");
    #else
        ${GridObjName1} = createDhtmlXGrid("${GridObjName1}");
    #end
    ${GridObjName1}.setHeader("$headerDetail");
    ${GridObjName1}.setInitWidths("230,$initWidths");
    ${GridObjName1}.setColAlign("left,$colAlign");
    ${GridObjName1}.setColTypes("ro,$colTypes");
    ${GridObjName1}.enableResizing("false,$enableResizing");
    ${GridObjName1}.enableTooltips("false,$enableTooltips");
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##    ${GridObjName1}.setNumberFormat("0,000",1);
    ${GridObjName1}.setNumberFormat("0,000",1);
    ${GridObjName1}.setNumberFormat("0,000.000",2);
    ${GridObjName1}.setNumberFormat("0,000.000",3);
##    ${GridObjName1}.setNumberFormat("0,000",2);
    ${GridObjName1}.setNumberFormat("0,000",4);
##    ${GridObjName1}.setNumberFormat("0,000",4);
    ${GridObjName1}.setNumberFormat("0,000",6);
    ${GridObjName1}.setNumberFormat("0,000.000",8);
##    ${GridObjName1}.setNumberFormat("0,000",6);
    ${GridObjName1}.setNumberFormat("0,000",9);
##    ${GridObjName1}.setNumberFormat("0,000",8);
    ${GridObjName1}.setNumberFormat("0,000",11);
    ${GridObjName1}.setNumberFormat("0,000.000",13);
##    ${GridObjName1}.setNumberFormat("0,000",10);
    ${GridObjName1}.setNumberFormat("0,000",14);
##    ${GridObjName1}.setNumberFormat("0,000",12);
    ${GridObjName1}.setNumberFormat("0,000",16);
    ${GridObjName1}.setNumberFormat("0,000.000",18);
##    ${GridObjName1}.setNumberFormat("0,000",14);
    ${GridObjName1}.setNumberFormat("0,000",19);
##    ${GridObjName1}.setNumberFormat("0,000",16);
    ${GridObjName1}.setNumberFormat("0,000",21);
    ${GridObjName1}.setNumberFormat("0,000.000",23);
##    ${GridObjName1}.setNumberFormat("0,000",18);
    ${GridObjName1}.setNumberFormat("0,000",24);
##    ${GridObjName1}.setNumberFormat("0,000",20);
    ${GridObjName1}.setNumberFormat("0,000",26);
    ${GridObjName1}.setNumberFormat("0,000.000",28);
##    ${GridObjName1}.setNumberFormat("0,000",22);
    ${GridObjName1}.setNumberFormat("0,000",29);
##    ${GridObjName1}.setNumberFormat("0,000",24);
    ${GridObjName1}.setNumberFormat("0,000",31);
    ${GridObjName1}.setNumberFormat("0,000.000",33);
##    ${GridObjName1}.setNumberFormat("0,000",26);
    ${GridObjName1}.setNumberFormat("0,000",34);
##    ${GridObjName1}.setNumberFormat("0,000",28);
    ${GridObjName1}.setNumberFormat("0,000",36);
## mod ENd 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
    ${GridObjName1}.enableDistributedParsing(true,50,300);
    ${GridObjName1}.enableAutoHeight(true, getGridHeight('dpm601C00', $!gridHeight));
    ${GridObjName1}.setSizes();
    ${GridObjName1}.setNoHeader(true);
    ${GridObjName1}.init();
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##    ${GridObjName1}.splitAt(2);
    ${GridObjName1}.splitAt(4);
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
    ${GridObjName1}.enableEditEvents(true, false, true);
    ${GridObjName1}.enableBlockSelection();
    ${GridObjName1}.forceLabelSelection(true);
    ${GridObjName1}.setCSVDelimiter("\t");

    ##  --- 編集中に登録ボタンが押された場合のチェッカー
    window.editValueChecker = new EditingValueChecker(${GridObjName1},'$text.get("DPC1036E",[""])' );

    ${GridObjName1}.attachEvent("onEditCell",function(stage,rowId,colId,newvalue,oldvalue){

        ## --- 編集中に登録ボタンが押された場合のチェック用に値とstageを保持 ---
    	window.editValueChecker.saveState(stage,newvalue);

        if(stage == 1){
            setIme(${GridObjName1},rowId,colId,"inactive",10);
        }
        if(stage == 2){
            if(newvalue.toString() != oldvalue.toString()){
                intCheck(${GridObjName1},rowId,colId,newvalue);
                ## 合計列の計算処理(月初計画)
                doCalcPlannedValueSum(${GridObjName1}, rowId);
                ## 合計列の計算処理(月末計画)
                doCalcExpectedValueSum(${GridObjName1}, rowId);
                ## 集計行の値をセット
                setSumGrid(${GridObjName1}, ${GridObjName2}, colId);
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##                for (colomnId = 26; colomnId <= 28; colomnId = colomnId + 2) {
                for (colomnId = 34; colomnId <= 36; colomnId = colomnId + 2) {
##                    setSumGrid(${GridObjName1}, ${GridObjName2}, colomnId);
                    setSumGrid(${GridObjName1}, ${GridObjName2}, colomnId);
##                }
                }
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
				## 遂行率の計算処理（明細行）
				doCalcExecuteRate(${GridObjName1}, rowId, colId + 1);
				## 遂行率の計算処理（明細行の合計）
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##				doCalcExecuteRate(${GridObjName1}, rowId, 27);
				doCalcExecuteRate(${GridObjName1}, rowId, 35);
##				doCalcExecuteRate(${GridObjName1}, rowId, 29);
				doCalcExecuteRate(${GridObjName1}, rowId, 37);
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
				## 遂行率の計算処理（集計行）
				doCalcExecuteRate(${GridObjName2}, 1, colId + 1);
				## 遂行率の計算処理（集計行の合計）
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##				doCalcExecuteRate(${GridObjName2}, 1, 27);
				doCalcExecuteRate(${GridObjName2}, 1, 35);
##				doCalcExecuteRate(${GridObjName2}, 1, 29);
				doCalcExecuteRate(${GridObjName2}, 1, 37);
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
                editFlg = true;
            }
        }
        return true;
    });
    ${GridObjName1}.attachEvent("onRowSelect",function(rowId,colId){
        ${GridObjName1}.editCell();
    });
    ${GridObjName1}.attachEvent("onKeyPress",function(keycode,ctrl,shift){
        if(!(currentCellMove(${GridObjName1},keycode))){return false;}
        ## ペースト処理時
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##        copyBlock(${GridObjName1}, keycode, ctrl, shift, new Array("3"));
        copyBlock(${GridObjName1}, keycode, ctrl, shift, new Array("5"));
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
        if (keycode == 86 && ctrl) {
            setSumOtherGrid(${GridObjName1}, ${GridObjName2}, 2);
            editFlg = true;
        }
        return true;
    });
    ${GridObjName1}.attachEvent("onMouseOver",function(rowId,columnId){
        var title = "";
        if(${GridObjName1}.getUserData(rowId,"rowType") == "input"){
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##            ##1ヶ月目
            ##1ヶ月目
##            if(columnId == 2){
            if(columnId == 4){
##                title = ${GridObjName1}.getUserData(rowId,"toolTip");
                title = ${GridObjName1}.getUserData(rowId,"toolTip");
##            }
            }
##            if(columnId == 4){
            if(columnId == 6){
##                title = ${GridObjName1}.getUserData(rowId,"toolTip");
                title = ${GridObjName1}.getUserData(rowId,"toolTip");
##            }
            }
            if(columnId == 8){
                title = ${GridObjName1}.getUserData(rowId,"toolTip");
            }

##            ##2ヶ月目
            ##2ヶ月目
##            if(columnId == 6){
            if(columnId == 9){
##                title = ${GridObjName1}.getUserData(rowId,"toolTip");
                title = ${GridObjName1}.getUserData(rowId,"toolTip");
##            }
            }
##            if(columnId == 8){
            if(columnId == 11){
##                title = ${GridObjName1}.getUserData(rowId,"toolTip");
                title = ${GridObjName1}.getUserData(rowId,"toolTip");
##            }
            }
            if(columnId == 13){
                title = ${GridObjName1}.getUserData(rowId,"toolTip");
            }

##            ##3ヶ月目
            ##3ヶ月目
##            if(columnId == 10){
            if(columnId == 14){
##                title = ${GridObjName1}.getUserData(rowId,"toolTip");
                title = ${GridObjName1}.getUserData(rowId,"toolTip");
##            }
            }
##            if(columnId == 12){
            if(columnId == 16){
##                title = ${GridObjName1}.getUserData(rowId,"toolTip");
                title = ${GridObjName1}.getUserData(rowId,"toolTip");
##            }
            }
            if(columnId == 18){
                title = ${GridObjName1}.getUserData(rowId,"toolTip");
            }

##            ##4ヶ月目
            ##4ヶ月目
##            if(columnId == 14){
            if(columnId == 19){
##                title = ${GridObjName1}.getUserData(rowId,"toolTip");
                title = ${GridObjName1}.getUserData(rowId,"toolTip");
##            }
            }
##            if(columnId == 16){
            if(columnId == 21){
##                title = ${GridObjName1}.getUserData(rowId,"toolTip");
                title = ${GridObjName1}.getUserData(rowId,"toolTip");
##            }
            }
            if(columnId == 23){
                title = ${GridObjName1}.getUserData(rowId,"toolTip");
            }

##            ##5ヶ月目
            ##5ヶ月目
##            if(columnId == 18){
            if(columnId == 24){
##                title = ${GridObjName1}.getUserData(rowId,"toolTip");
                title = ${GridObjName1}.getUserData(rowId,"toolTip");
##            }
            }
##            if(columnId == 20){
            if(columnId == 26){
##                title = ${GridObjName1}.getUserData(rowId,"toolTip");
                title = ${GridObjName1}.getUserData(rowId,"toolTip");
##            }
            }
            if(columnId == 28){
                title = ${GridObjName1}.getUserData(rowId,"toolTip");
            }

##            ##6ヶ月目
            ##6ヶ月目
##            if(columnId == 22){
            if(columnId == 29){
##                title = ${GridObjName1}.getUserData(rowId,"toolTip");
                title = ${GridObjName1}.getUserData(rowId,"toolTip");
##            }
            }
##            if(columnId == 24){
            if(columnId == 31){
##                title = ${GridObjName1}.getUserData(rowId,"toolTip");
                title = ${GridObjName1}.getUserData(rowId,"toolTip");
##            }
            }
            if(columnId == 33){
                title = ${GridObjName1}.getUserData(rowId,"toolTip");
            }
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
            if(title == null){
                title = "";
            }
            ${GridObjName1}.cells(rowId,columnId).cell.title = title;
        }
    });
    ${GridObjName1}.attachEvent("onScroll",function(sLeft,sTop){
    	${GridObjName2}.objBox.scrollLeft=${GridObjName1}.objBox.scrollLeft
    });
}

## DHTMLXGrid生成(集計行)
function doInitGrid2() {
    #if($resultDetail)
        ${GridObjName2} = createDhtmlXGridLodingExt("${GridObjName2}", "${CoverId2}");
    #else
        ${GridObjName2} = createDhtmlXGrid("${GridObjName2}");
    #end
    ${GridObjName2}.setHeader("施設計画　$plannedTypeStr　$prodCategory,$headerSum");
    ${GridObjName2}.attachHeader("品目名称,$attachHeader1row");
    ${GridObjName2}.attachHeader("#rspan,$attachHeader2row");
    ${GridObjName2}.attachHeader("#rspan,$attachHeader3row");
    ${GridObjName2}.setInitWidths("230,$initWidths");
    ${GridObjName2}.setColAlign("left,$colAlign");
    ${GridObjName2}.setColTypes("ro,$colTypes");
    ${GridObjName2}.enableResizing("false,$enableResizing");
    ${GridObjName2}.enableTooltips("false,$enableTooltips");
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##    ${GridObjName2}.setNumberFormat("0,000",1);
    ${GridObjName2}.setNumberFormat("0,000",1);
    ${GridObjName2}.setNumberFormat("0,000.000",2);
    ${GridObjName2}.setNumberFormat("0,000.000",3);
##    ${GridObjName2}.setNumberFormat("0,000",2);
    ${GridObjName2}.setNumberFormat("0,000",4);
##    ${GridObjName2}.setNumberFormat("0,000",4);
    ${GridObjName2}.setNumberFormat("0,000",6);
    ${GridObjName2}.setNumberFormat("0,000.000",8);
##    ${GridObjName2}.setNumberFormat("0,000",6);
    ${GridObjName2}.setNumberFormat("0,000",9);
##    ${GridObjName2}.setNumberFormat("0,000",8);
    ${GridObjName2}.setNumberFormat("0,000",11);
    ${GridObjName2}.setNumberFormat("0,000.000",13);
##    ${GridObjName2}.setNumberFormat("0,000",10);
    ${GridObjName2}.setNumberFormat("0,000",14);
##    ${GridObjName2}.setNumberFormat("0,000",12);
    ${GridObjName2}.setNumberFormat("0,000",16);
    ${GridObjName2}.setNumberFormat("0,000.000",18);
##    ${GridObjName2}.setNumberFormat("0,000",14);
    ${GridObjName2}.setNumberFormat("0,000",19);
##    ${GridObjName2}.setNumberFormat("0,000",16);
    ${GridObjName2}.setNumberFormat("0,000",21);
    ${GridObjName2}.setNumberFormat("0,000.000",23);
##    ${GridObjName2}.setNumberFormat("0,000",18);
    ${GridObjName2}.setNumberFormat("0,000",24);
##    ${GridObjName2}.setNumberFormat("0,000",20);
    ${GridObjName2}.setNumberFormat("0,000",26);
    ${GridObjName2}.setNumberFormat("0,000.000",28);
##    ${GridObjName2}.setNumberFormat("0,000",22);
    ${GridObjName2}.setNumberFormat("0,000",29);
##    ${GridObjName2}.setNumberFormat("0,000",24);
    ${GridObjName2}.setNumberFormat("0,000",31);
    ${GridObjName2}.setNumberFormat("0,000.000",33);
##    ${GridObjName2}.setNumberFormat("0,000",26);
    ${GridObjName2}.setNumberFormat("0,000",34);
##    ${GridObjName2}.setNumberFormat("0,000",28);
    ${GridObjName2}.setNumberFormat("0,000",36);
## mod ENd 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
    ${GridObjName2}.enableAutoHeight(true, 117, true);
    ${GridObjName2}.setSizes();
    ${GridObjName2}.init();
## mod ENd 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##    ${GridObjName2}.splitAt(2);
    ${GridObjName2}.splitAt(4);
## mod ENd 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
    ${GridObjName2}.enableBlockSelection();
    ${GridObjName2}.forceLabelSelection(true);
    ${GridObjName2}.setCSVDelimiter("\t");
    ${GridObjName2}.attachEvent("onKeyPress",function(keycode,ctrl,shift){
        copyBlock(${GridObjName2}, keycode, ctrl, shift);
        return true;
    });
    ${GridObjName2}.attachEvent("onBeforeSelect",function(newId,oldId){return;});
}

## T価ベースの計算処理
function doCalcTBaseValue(grid, rowId, colId){
    var tyChangeRate = grid.getUserData(rowId,"tyChangeRate");
    calcTBaseValue(grid, rowId, colId, rowId, colId+1, tyChangeRate);
}

## 検索処理
function dpm601C00F05() {
    if (searchValidation()) {
        if (editFlg) {
            if (!window.confirm('$text.get("DPC999C99.001","dialogue")')) {
                return;
            }
        }
        var actionPath = "$link.setAction('dpm601C00F05')";
        document.dpm601C00Form.action = actionPath;
        document.dpm601C00Form.submit();

        dpm601C00F05 = blockIt;
        dpm601C00F10Execute = blockIt;
        dpm600C00F05 = blockIt;
    }
}

## 検索時入力チェック
function searchValidation() {
    ## 入力フォーム
    var form = document.dpm601C00Form;

    var errorMsg = "";
    var isAdded = false;

    ## 施設コード
    var insNo = form.insNo.value;

    ## [必須]施設コード
    if(!isAdded){
        errorMsg = '$text.get("DPC1003E",["施設コード"])';
        isAdded = addErrorInfo(!isEntered(insNo), errorMsg)
    }
    ## [半角数字]施設コード
    if(!isAdded){
        errorMsg = '$text.get("DPC1004E",["施設コード","半角数字"])';
        isAdded = addErrorInfo(!isNumber(insNo), errorMsg)
    }

    return validation();
}

## 更新処理
function dpm601C00F10Execute() {
    ## --- 編集中セル値の登録時チェック ---
	if(window.editValueChecker.isValid() == false){
		return;
	}
    ##入力チェック
    if (!executeValidation()) {
        return;
    }
    ##確認
    if (!confirm('$text.get("DPM601C00.001","dialogue")')) {
        return;
    }
    var form = document.dpm601C00Form;
    ## ユーザデータに編集後の計画値を追加
    var rowNum = ${GridObjName1}.getRowsNum();
    for (i = 1; i <= rowNum; i++) {

	    ##月初計画（YB価）
	    var plannedValueAll;
	    ##月末見込（YB価）
	    var expectedValueAll;

		##月初計画（YB価）の取得
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##		for (plannedColumnId = 2; plannedColumnId <= 22; plannedColumnId = plannedColumnId + 4) {
		for (plannedColumnId = 4; plannedColumnId <= 29; plannedColumnId = plannedColumnId + 5) {
##			var plannedValue = ${GridObjName1}.cells(i,plannedColumnId).getValue();
			var plannedValue = ${GridObjName1}.cells(i,plannedColumnId).getValue();
##			if (plannedColumnId == 2){
			if (plannedColumnId == 4){
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
				plannedValueAll = plannedValue.toString().replace(/,/g,"");
			}else{
				plannedValueAll = plannedValueAll + "," + plannedValue.toString().replace(/,/g,"");
			}
		}

	    ##月末見込（YB価）の取得
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##		for (expectedColumnId = 4; expectedColumnId <= 24; expectedColumnId = expectedColumnId + 4) {
		for (expectedColumnId = 6; expectedColumnId <= 31; expectedColumnId = expectedColumnId + 5) {
##			var expectedValue = ${GridObjName1}.cells(i,expectedColumnId).getValue();
			var expectedValue = ${GridObjName1}.cells(i,expectedColumnId).getValue();
##			if (expectedColumnId == 4){
			if (expectedColumnId == 6){
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
				expectedValueAll = expectedValue.toString().replace(/,/g,"");
			}else{
				expectedValueAll = expectedValueAll + "," + expectedValue.toString().replace(/,/g,"");
			}
		}
	    var userData = ${GridObjName1}.getUserData(i, 'updateRowId');
		userData += "," + plannedValueAll + "," + expectedValueAll;
	    ${GridObjName1}.setUserData(i, 'updateRowId', userData);

    }
    ##フォームに更新情報を格納
    addRowIdList(form, ${GridObjName1}, 'rowIdList', 'updateRowId');
    ##送信
    document.dpm601C00Form.action = '$link.setAction("dpm601C00F10Execute")';
    document.dpm601C00Form.submit();

    dpm601C00F05 = blockIt;
    dpm601C00F10Execute = blockIt;
    dpm600C00F05 = blockIt;
}

## 更新時入力チェック
function executeValidation() {
    var rowNum = ${GridObjName1}.getRowsNum();
    for (i = 1; i <= rowNum; i++) {
        ## メッセージ準備
        var rowInfo = ${GridObjName1}.getUserData(i, 'prodName');
        ## エラーチェック
		##月初計画（ＹB価）の取得
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##		for (plannedColumnId = 2; plannedColumnId <= 22; plannedColumnId = plannedColumnId + 4) {
		for (plannedColumnId = 4; plannedColumnId <= 29; plannedColumnId = plannedColumnId + 5) {
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
			var plannedCheckValue = ${GridObjName1}.cells(i,plannedColumnId).getValue();
			amountValidationNotTailCheck("の月初計画", plannedCheckValue, 10, true, rowInfo);
		}

	    ##月末見込（ＹB価）の取得
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
##		for (expectedColumnId = 4; expectedColumnId <= 24; expectedColumnId = expectedColumnId + 4) {
		for (expectedColumnId = 6; expectedColumnId <= 31; expectedColumnId = expectedColumnId + 5) {
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
			var expectedCheckValue = ${GridObjName1}.cells(i,expectedColumnId).getValue();
			amountValidationNotTailCheck("の月末見込", expectedCheckValue, 10, true, rowInfo);
		}
    }
    return validation();
}

## 施設選択画面呼出
function dpm911C00F00() {
    var func = "dpm601C00InsApply";
    var insPtn = "01";
    var ptn = "01";
    var min = "02";
    var max = "04";
    var insType = "";
    var sosInitSosCodeValue = '';
    var jgiNo = '';
    ##全MR担当は、担当者まで表示
    if ($mrflg) {
        jgiNo = "$!form.bean.jgiNo";
    }
    var url ='$link.setAction('dpm911C00F00')' + '?insApplyFuncName=' + func + '&insSelectPtnType=' + insPtn + '&sosSrchPtnType=' + ptn + '&sosMinSrchValue=' + min + '&sosMaxSrchGetValue=' + max + '&paramInsType=' + insType + '&sosInitSosCodeValue=' + sosInitSosCodeValue + '&paramJgiNo=' + jgiNo + '&sosSearchNonFlg=false&paramJtnFlg=false&disableMallInsSelect=true';
    var args = new Array();
    openModalWindowW(url, func, args);
}

## 施設選択ダイアログ コールバック
function dpm601C00InsApply(insNo, jgiNo, insName){
    document.getElementById("insNo").value = insNo;
    document.getElementById("insName").value = insName;
    document.getElementById("insNameLabel").innerHTML = "<label>" + insName + "</label>";
}

## 施設名のクリア処理
function clearInsName() {
    document.getElementById("insNameLabel").innerHTML = "<label>　</label>";
    document.getElementById('insName').value = "";
}

## 施設別計画編集画面を開く
function dpm600C00F05(prodCode,etcSosFlg) {

    if (editFlg) {
        if (!window.confirm('$text.get("DPC999C99.001","dialogue")')) {
            return;
        }
    }
    var form = document.dpm601C00Form;
    form.insNo.value = "$!form.bean.insNo";
    form.prodCategory.value = "$!form.bean.prodCategory";
    form.prodCode.value = prodCode;
    form.insType.value = "$!form.bean.insType";
    ##form.planData.value = "$!form.bean.planData";
    form.etcSosFlg.value = etcSosFlg;

    var category = document.getElementById("prodCategory").value;

	## ワクチンの場合
    if(category == "$vaccineCode"){
    	var url ="$link.setAction('dpm600C00F25')";
    }else{
    	var url ="$link.setAction('dpm600C00F05')";
    }

    document.dpm601C00Form.action = url;
    document.dpm601C00Form.submit();

    dpm601C00F05 = blockIt;
    dpm601C00F10Execute = blockIt;
    dpm600C00F05 = blockIt;
}

## 出力処理
function dpm601C00F14(){
    if (!searchValidation()) {
        return;
    }

    ##確認
    if (!confirm('$text.get("DPM601C00.005","dialogue")')) {
        return;
    }

    ##送信
    var actionPath = '$link.setAction('dpm601C00F14Output')';
    document.dpm601C00Form.action = actionPath;
    document.dpm601C00Form.submit();

    return false;
}

## 遂行率の計算処理
function doCalcExecuteRate(grid, rowId, colId){

    ## 積上値/計画値
    var value1 = grid.cells(rowId, colId - 1).getValue();
    ## 期別計画値
    var value2 = grid.cells(rowId, 1).getValue();
    ## 算出値の設定セル
    var cell = grid.cells(rowId, colId);

    ## 算出不能の場合は空白
    if (value2.toString() == "0" || value2.toString() == "") {
      cell.setValue("");
    } else {
      ## 遂行率算出
      var exRate = (Math.round((value1 / value2) * 1000) / 10).toFixed(1);
      var num = String(exRate).replace( /(\d)(?=(\d\d\d)+(?!\d))/g, '$1,');
      cell.setValue(num + "%");
    }
}


## 合計列の計算処理(月初計画)
function doCalcPlannedValueSum(grid, rowId){
    var sumValue = null;
## mod Start 2022/11/29 H.futagami No.19　「合計」欄は「前月までの実績＋当月以降の入力した計画」の合計を表示
#### mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
####    var value1 = grid.cells(rowId,2).getValue();
##    var value1 = grid.cells(rowId,4).getValue();
####    var value2 = grid.cells(rowId,6).getValue();
##    var value2 = grid.cells(rowId,9).getValue();
####    var value3 = grid.cells(rowId,10).getValue();
##    var value3 = grid.cells(rowId,14).getValue();
####    var value4 = grid.cells(rowId,14).getValue();
##    var value4 = grid.cells(rowId,19).getValue();
####    var value5 = grid.cells(rowId,18).getValue();
##    var value5 = grid.cells(rowId,24).getValue();
####    var value6 = grid.cells(rowId,22).getValue();
##    var value6 = grid.cells(rowId,29).getValue();
##
####    if(value1 != null && value1.toString() != ""){
##    if(value1 != null && value1.toString() != ""){
####        sumValue = convertToInteger(grid,rowId,2);
##        sumValue = convertToInteger(grid,rowId,4);
####    }
##    }
##
####    if(value2 != null && value2.toString() != ""){
##    if(value2 != null && value2.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,6);
##        sumValue = sumValue + convertToInteger(grid,rowId,9);
####    }
##    }
##
####    if(value3 != null && value3.toString() != ""){
##    if(value3 != null && value3.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,10);
##        sumValue = sumValue + convertToInteger(grid,rowId,14);
####    }
##    }
##
####    if(value4 != null && value4.toString() != ""){
##    if(value4 != null && value4.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,14);
##        sumValue = sumValue + convertToInteger(grid,rowId,19);
####    }
##    }
##
####    if(value5 != null && value5.toString() != ""){
##    if(value5 != null && value5.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,18);
##        sumValue = sumValue + convertToInteger(grid,rowId,24);
####    }
##    }
##
####    if(value6 != null && value6.toString() != ""){
##    if(value6 != null && value6.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,22);
##        sumValue = sumValue + convertToInteger(grid,rowId,29);
####    }
##    }

    var value = null;
    for (monthCount = 0; monthCount <= 5; monthCount = monthCount + 1) {
      if(monthCount < $tougetuCount){
        ## 各月実績
        ## add Start 2022/12/21 H.futagami No.8　計画管理の月別計画に納入実績の値を表示
		if(monthCount == 0){
		    value = grid.getUserData(rowId, 'hiddenRecord1ValueYbJisseki');
		}else if(monthCount == 1){
		    value = grid.getUserData(rowId, 'hiddenRecord2ValueYbJisseki');
		}else if(monthCount == 2){
		    value = grid.getUserData(rowId, 'hiddenRecord3ValueYbJisseki');
		}else if(monthCount == 3){
		    value = grid.getUserData(rowId, 'hiddenRecord4ValueYbJisseki');
		}else if(monthCount == 4){
		    value = grid.getUserData(rowId, 'hiddenRecord5ValueYbJisseki');
		}else if(monthCount == 5){
		    value = grid.getUserData(rowId, 'hiddenRecord6ValueYbJisseki');
	　　　 }
        ## add End 2022/12/21 H.futagami No.8　計画管理の月別計画に納入実績の値を表示
        if(value != null && value.toString() != ""){
          sumValue = sumValue + Number(value);
        }
      }else{
        ## 各月月初計画積上
        value = grid.cells(rowId,monthCount * 5 + 4).getValue();
        if(value != null && value.toString() != ""){
          sumValue = sumValue + convertToInteger(grid,rowId,monthCount * 5 + 4);
        }
      }
    }
## mod End 2022/11/29 H.futagami No.19　「合計」欄は「前月までの実績＋当月以降の入力した計画」の合計を表示

##    var cell = grid.cells(rowId, 26);
    var cell = grid.cells(rowId, 34);
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
    if (sumValue != null) {
        cell.setValue(sumValue);
    }
    else {
        cell.setValue(null);
    }
}

## 合計列の計算処理(月末計画)
function doCalcExpectedValueSum(grid, rowId){
    var sumValue = null;
## mod Start 2022/11/29 H.futagami No.19　「合計」欄は「前月までの実績＋当月以降の入力した計画」の合計を表示
#### mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
####    var value1 = grid.cells(rowId,4).getValue();
##    var value1 = grid.cells(rowId,6).getValue();
####    var value2 = grid.cells(rowId,8).getValue();
##    var value2 = grid.cells(rowId,11).getValue();
####    var value3 = grid.cells(rowId,12).getValue();
##    var value3 = grid.cells(rowId,16).getValue();
####    var value4 = grid.cells(rowId,16).getValue();
##    var value4 = grid.cells(rowId,21).getValue();
####    var value5 = grid.cells(rowId,20).getValue();
##    var value5 = grid.cells(rowId,26).getValue();
####    var value6 = grid.cells(rowId,24).getValue();
##    var value6 = grid.cells(rowId,31).getValue();
##
####    if(value1 != null && value1.toString() != ""){
##    if(value1 != null && value1.toString() != ""){
####        sumValue = convertToInteger(grid,rowId,4);
##        sumValue = convertToInteger(grid,rowId,6);
####    }
##    }
####    if(value2 != null && value2.toString() != ""){
##    if(value2 != null && value2.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,8);
##        sumValue = sumValue + convertToInteger(grid,rowId,11);
####    }
##    }
##
####    if(value3 != null && value3.toString() != ""){
##    if(value3 != null && value3.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,12);
##        sumValue = sumValue + convertToInteger(grid,rowId,16);
####    }
##    }
##
####    if(value4 != null && value4.toString() != ""){
##    if(value4 != null && value4.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,16);
##        sumValue = sumValue + convertToInteger(grid,rowId,21);
####    }
##    }
##
####    if(value5 != null && value5.toString() != ""){
##    if(value5 != null && value5.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,20);
##        sumValue = sumValue + convertToInteger(grid,rowId,26);
####    }
##    }
####
##
####    if(value6 != null && value6.toString() != ""){
##    if(value6 != null && value6.toString() != ""){
####        sumValue = sumValue + convertToInteger(grid,rowId,24);
##        sumValue = sumValue + convertToInteger(grid,rowId,31);
####    }
##    }

    var value = null;
    for (monthCount = 0; monthCount <= 5; monthCount = monthCount + 1) {
      if(monthCount < $tougetuCount){
        ## 各月実績
        ## add Start 2022/12/21 H.futagami No.8　計画管理の月別計画に納入実績の値を表示
		if(monthCount == 0){
		    value = grid.getUserData(rowId, 'hiddenRecord1ValueYbJisseki');
		}else if(monthCount == 1){
		    value = grid.getUserData(rowId, 'hiddenRecord2ValueYbJisseki');
		}else if(monthCount == 2){
		    value = grid.getUserData(rowId, 'hiddenRecord3ValueYbJisseki');
		}else if(monthCount == 3){
		    value = grid.getUserData(rowId, 'hiddenRecord4ValueYbJisseki');
		}else if(monthCount == 4){
		    value = grid.getUserData(rowId, 'hiddenRecord5ValueYbJisseki');
		}else if(monthCount == 5){
		    value = grid.getUserData(rowId, 'hiddenRecord6ValueYbJisseki');
	　　　 }
        ## add End 2022/12/21 H.futagami No.8　計画管理の月別計画に納入実績の値を表示
        if(value != null && value.toString() != ""){
          sumValue = sumValue + Number(value);
        }
      }else{
        ## 各月月末計画積上
        value = grid.cells(rowId,monthCount * 5 + 6).getValue();
        if(value != null && value.toString() != ""){
          sumValue = sumValue + convertToInteger(grid,rowId,monthCount * 5 + 6);
        }
      }
    }
## mod End 2022/11/29 H.futagami No.19　「合計」欄は「前月までの実績＋当月以降の入力した計画」の合計を表示

##    var cell = grid.cells(rowId,28);
    var cell = grid.cells(rowId,36);
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
    if (sumValue != null) {
        cell.setValue(sumValue);
    }
    else {
        cell.setValue(null);
    }
}

## 合計行の設定
function setSumGrid(detailGrid, sumGrid, columnId){
	// 全合計取得
	var allSum = 0;
	// 入力行のデータを、合計
	for (rowId = 1; rowId <= detailGrid.getRowsNum(); rowId++) {
		var targetSum = detailGrid.getUserData(rowId, 'targetSummary');
		// 集計対象の行の値のみ
		if(targetSum == "1"){
	        ## add Start 2022/12/21 H.futagami No.8　計画管理の月別計画に納入実績の値を表示
			var value;
		    if(columnId == "2"){
				value = detailGrid.getUserData(rowId, 'hiddenRecordTotalValueYbJisseki');
			}else if(columnId == "3"){
				value = detailGrid.getUserData(rowId, 'hiddenRecordTougetuValueYbJisseki');
			}else if(columnId == "8"){
			    value = detailGrid.getUserData(rowId, 'hiddenRecord1ValueYbJisseki');
			}else if(columnId == "13"){
			    value = detailGrid.getUserData(rowId, 'hiddenRecord2ValueYbJisseki');
			}else if(columnId == "18"){
			    value = detailGrid.getUserData(rowId, 'hiddenRecord3ValueYbJisseki');
			}else if(columnId == "23"){
			    value = detailGrid.getUserData(rowId, 'hiddenRecord4ValueYbJisseki');
			}else if(columnId == "28"){
			    value = detailGrid.getUserData(rowId, 'hiddenRecord5ValueYbJisseki');
			}else if(columnId == "33"){
			    value = detailGrid.getUserData(rowId, 'hiddenRecord6ValueYbJisseki');
			}else{
				value = convertToInteger(detailGrid,rowId,columnId);
			}
			## add End 2022/12/21 H.futagami No.8　計画管理の月別計画に納入実績の値を表示
			if(value == null || value.toString() == ""){
				continue;
			}
			allSum = allSum + Number(value);
			minusStyle(detailGrid,rowId, columnId);
		}
	}

	## 他カテゴリの加算値
	var otherPlanValue  = "";
	if (columnId == 1) {
		otherPlanValue = detailGrid.getUserData("", 'otherPlanTerm');
	}
## mod Start 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示
	if (columnId == 2) {
		otherPlanValue = detailGrid.getUserData("", 'otherPlanTotal');
	}
	if (columnId == 3) {
		otherPlanValue = detailGrid.getUserData("", 'otherPlanTougetu');
	}
##	if (columnId == 2) {
	if (columnId == 4) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanP1');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanP1');
##	}
	}
##	if (columnId == 4) {
	if (columnId == 6) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanE1');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanE1');
##	}
	}
	if (columnId == 8) {
		otherPlanValue = detailGrid.getUserData("", 'otherPlanR1');
	}
##	if (columnId == 6) {
	if (columnId == 9) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanP2');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanP2');
##	}
	}
##	if (columnId == 8) {
	if (columnId == 11) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanE2');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanE2');
##	}
	}
	if (columnId == 13) {
		otherPlanValue = detailGrid.getUserData("", 'otherPlanR2');
	}
##	if (columnId == 10) {
	if (columnId == 14) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanP3');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanP3');
##	}
	}
##	if (columnId == 12) {
	if (columnId == 16) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanE3');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanE3');
##	}
	}
	if (columnId == 18) {
		otherPlanValue = detailGrid.getUserData("", 'otherPlanR3');
	}
##	if (columnId == 14) {
	if (columnId == 19) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanP4');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanP4');
##	}
	}
##	if (columnId == 16) {
	if (columnId == 21) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanE4');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanE4');
##	}
	}
	if (columnId == 23) {
		otherPlanValue = detailGrid.getUserData("", 'otherPlanR4');
	}
##	if (columnId == 18) {
	if (columnId == 24) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanP5');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanP5');
##	}
	}
##	if (columnId == 20) {
	if (columnId == 26) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanE5');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanE5');
##	}
	}
	if (columnId == 28) {
		otherPlanValue = detailGrid.getUserData("", 'otherPlanR5');
	}
##	if (columnId == 22) {
	if (columnId == 29) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanP6');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanP6');
##	}
	}
##	if (columnId == 24) {
	if (columnId == 31) {
##		otherPlanValue = detailGrid.getUserData("", 'otherPlanE6');
		otherPlanValue = detailGrid.getUserData("", 'otherPlanE6');
##	}
	}
	if (columnId == 33) {
		otherPlanValue = detailGrid.getUserData("", 'otherPlanR6');
	}
## mod End 2022/08/25 R.takamoto No.8　計画管理の月別計画に納入実績の値を表示

	if (otherPlanValue != null && otherPlanValue != "") {
		allSum = allSum + Number(otherPlanValue);
	}

	// 全合計行に設定
	for (rowId = 1; rowId <= sumGrid.getRowsNum(); rowId++) {
		var rowType = sumGrid.getUserData(rowId, 'rowType');
		if(rowType == "total"){
			sumGrid.cells(rowId, columnId).setValue(allSum);
			minusStyle(sumGrid,rowId, columnId);
		}
	}

    ## add Start 2022/12/21 H.futagami No.8　計画管理の月別計画に納入実績の値を表示
    if(columnId == "2"){
        sumGrid.setUserData(1, 'hiddenRecordTotalValueYbJisseki', allSum);
	}else if(columnId == "3"){
	    sumGrid.setUserData(1, 'hiddenRecordTougetuValueYbJisseki', allSum);
	}else if(columnId == "8"){
		sumGrid.setUserData(1, 'hiddenRecord1ValueYbJisseki', allSum);
	}else if(columnId == "13"){
	    sumGrid.setUserData(1, 'hiddenRecord2ValueYbJisseki', allSum);
	}else if(columnId == "18"){
	    sumGrid.setUserData(1, 'hiddenRecord3ValueYbJisseki', allSum);
	}else if(columnId == "23"){
	    sumGrid.setUserData(1, 'hiddenRecord4ValueYbJisseki', allSum);
	}else if(columnId == "28"){
	    sumGrid.setUserData(1, 'hiddenRecord5ValueYbJisseki', allSum);
	}else if(columnId == "33"){
	    sumGrid.setUserData(1, 'hiddenRecord6ValueYbJisseki', allSum);
	}
    ## add End 2022/12/21 H.futagami No.8　計画管理の月別計画に納入実績の値を表示

}

//-->
</script>

<div id="noTabBox">
<form name="dpm601C00Form" method="post">
<input type="hidden" id="prodCategoryTran" name="prodCategoryTran" value="$!form.bean.prodCategoryTran">
##<input type="hidden" id="planDataTran" name="planDataTran" value="$!form.bean.planDataTran">
<input type="hidden" id="insNoTran" name="insNoTran" value="$!form.bean.insNoTran">

<input type="hidden" id="etcSosFlg" name="etcSosFlg"  />
<input type="hidden" id="prodCode" name="prodCode" value="">
<input type="hidden" id="insType" name="insType" value="">
<input type="hidden" id="insName" name="insName" value="">
<input type="hidden" id="vaccineCode" name="vaccineCode" value="$service.getVaccineCode()">
## テキストボックスが１つの場合、Enterキーでsubmitされるため、非表示を１項目追加する。
<div style="display: none;">
<input type="text" style="visibility:hidden;"/>
</div>
##
<table class="gridLine" cellspacing="0" cellpadding="1">
    <tr>
        <td class="gridIndex" style="width: 150px;">カテゴリ*</td>
        <td style="padding-right: 21px">
            #select ("prodCategory", $!form.bean.prodCategoryList, $!form.bean.prodCategory)
        </td>
    </tr>
    <tr>
        <td class="gridIndex" style="width: 150px;">施設</td>
        <td>
        <table cellspacing="0" cellpadding="0" style="border-collapse: collapse;">
            <tr>
                <td>
                <table class="gridLine" cellspacing="0" cellpadding="0" style="border-collapse: collapse;">
                    <tr>
                        <td style="width: 270px;"><nobr><label id="insNameLabel">$insName</label></nobr></td>
                    </tr>
                </table>
                </td>
                <td style="padding: 0px 5px 0px 5px"><input type="button" value="選択" style="width: 80px;" onclick="dpm911C00F00()"/></td>
                <td class="gridIndex" style="width: 150px;">施設コード*</td>
                <td>
                    <input type="text" name="insNo" id="insNo" value="$!form.bean.insNo" size="20" maxlength="14"style="ime-mode: disabled" onchange="clearInsName()"/>
                </td>
            </tr>
        </table>
        </td>
    </tr>
</table>
<table style="margin-top: 2px; margin-bottom: 2px; float: left; width: 100%;">
    <tr>
        <td>
            <input type="button" value="表示" style="width: 80px;" onclick="dpm601C00F05()" />
            #if ($!security.hasAuthEdit("DPM60"))
            #if ($resultDetail && $enableEntry)
                <input type="button" value="登録" style="width: 80px;" onclick="dpm601C00F10Execute()" />
            #else
                <input type="button" value="登録" style="width: 80px;" onclick="dpm601C00F10Execute()" disabled />
            #end
            #end
        </td>
        <td style="text-align: right; vertical-align: bottom;"><label>$consts.tableHeader</label></td>
    </tr>
</table>
#if($resultDetail)
    <div id="${GridObjName2}" style="width: 99.5%; clear: both;"></div>
    <div id="${GridObjName1}" style="width: 99.5%; clear: both;"></div>
    #loadingGridDiv2("${GridObjName2}", "${CoverId2}" ,"width: 99.5%; clear: both;")
    #loadingGridDiv2("${GridObjName1}", "${CoverId1}" ,"width: 99.5%; clear: both;")
#else
    <div id="${GridObjName2}" style="width: 99.5%; clear: both;"></div>
    <div id="${GridObjName1}" style="width: 99.5%; clear: both;"></div>
#end
#token()
</form>
</div>
