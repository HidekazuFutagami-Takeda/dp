#set($pageTitle = $text.get("dps300C00","title"))
#set($bodyOnloadMethod = "dps300C00F00()")
#set($bodyOnfocusMethod = "return dialogWin.checkModal()")
#set($dataListFileName = "dps300C00x01.vm")
#set($GridObjName = "dps300C00Grid")
#set($gridHeight = $text.get("${GridObjName}","grid"))
#set($CoverId = "dps300C00CoverId")
#set($dto = $form.getRequestData("DPS300C00_DATA_R"))
#set($tSosCd = $!dto.sosCd)
#set($tCategory = $!dto.category)
#set($dataList = $!dto.resultList)

## ワクチンの編集
#set( $enableEdit = false )
#if($dto.vacEditFlg)
    #set( $enableEdit = true )
#end

## ワクチンのカテゴリコード取得
#set($vaccineCode = $service.getShienVaccineCode())

## 追加ヘッダ
#set($attachHeader = $form.bean.attachHeader)

##試算タイプ
#set( $calcType = $!form.getRequestData("DPS300C00_DATA_R").calcType)
##調整更新日時(パフォーマンスが出ない場合のみ用)
#set( $choseiUpdate = $!dto.choseiUpdate)
<script language="javascript">
<!--
var editFlg = false;
var ${GridObjName};
var inputColumnIdArr =  new Array("1","2");
var calcColumnIdArr =  new Array("1","2","3","5","7","8","14","15","16");
## 初期表示＋読込処理
function dps300C00F00() {
    doInitGrid();

    if (document.getElementById("dps300C00x01.vm")) {
        var loadXMLString = document.getElementById("dps300C00x01.vm").value;
        if (loadXMLString != null && loadXMLString != "") {
            ${GridObjName}.loadXMLString(loadXMLString);
        }else{
            createDhtmlXGridLodingDelete("${CoverId}");
        }
    }
    sosApply("$!security.defaultSosCd", "$!security.defaultJgiNo", "02");
    ##集計行計算
    if ($!form.bean.existSearchDataFlag){
        doCalcTotalUHP(-1);
        doCalc(calcColumnIdArr);
    }
}
## DHTMLXGrid生成
function doInitGrid() {
    ${GridObjName} = createDhtmlXGridLodingExt("${GridObjName}", "${CoverId}");
## mod Start 2022/5/16 R.Yoshida 2022年4月組織変更対応（支店→リージョン、営業所→エリア）
    ${GridObjName}.setHeader("品目名称,エリア計画,#cspan,#cspan,エリア計画 &#8210 担当者別計画,#cspan,#cspan,#cspan,#cspan,担当者別計画 &#8210 施設特約店別計画,#cspan,#cspan,#cspan,エリア計画 &#8210 施設特約店別計画,#cspan,#cspan,#cspan");
##    ${GridObjName}.setHeader("品目名称,営業所計画,#cspan,#cspan,営業所計画 &#8210 担当者別計画,#cspan,#cspan,#cspan,#cspan,担当者別計画 &#8210 施設特約店別計画,#cspan,#cspan,#cspan,営業所計画 &#8210 施設特約店別計画,#cspan,#cspan,#cspan");
## mod End   2022/5/16 R.Yoshida 2022年4月組織変更対応（支店→リージョン、営業所→エリア）
    ${GridObjName}.attachHeader("$attachHeader");
    ${GridObjName}.setInitWidths("125,80,80,80,40,80,40,80,80,40,60,60,60,40,80,80,80");
    ${GridObjName}.setColAlign("left,right,right,right,center,right,center,right,right,center,center,center,center,center,right,right,right");
    ##${GridObjName}.setColTypes("ro,ron,ron,ron[=c1+c2],ro,ron,ro,ron,ron,ro,ro,ro,ro,ro,ron,ron,ron");
    ${GridObjName}.setColTypes("ro,ron,ron,ron,ro,ron,ro,ron,ron,ro,ro,ro,ro,ro,ron,ron,ron");
    ${GridObjName}.enableResizing("false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false");
    ${GridObjName}.enableTooltips("false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false");
    ${GridObjName}.enableDistributedParsing(true,50,260);
    ${GridObjName}.enableAutoHeight(true, getGridHeight('dps300C00', $!gridHeight));
    ##${GridObjName}.objBox.style.overflowX="scroll";
    ##${GridObjName}.objBox.style.overflowY="scroll";
    ${GridObjName}.enableBlockSelection();
    ${GridObjName}.forceLabelSelection(true);
    ${GridObjName}.setCSVDelimiter("\t");
    ${GridObjName}.setNumberFormat("0,000",1);
    ${GridObjName}.setNumberFormat("0,000",2);
    ${GridObjName}.setNumberFormat("0,000",3);
    ${GridObjName}.setNumberFormat("0,000",5);
    ${GridObjName}.setNumberFormat("0,000",7);
    ${GridObjName}.setNumberFormat("0,000",8);
    ${GridObjName}.setNumberFormat("0,000",14);
    ${GridObjName}.setNumberFormat("0,000",15);
    ${GridObjName}.setNumberFormat("0,000",16);
    ${GridObjName}.enableDistributedParsing(true,150,50);
    ##${GridObjName}.splitAt(1);

    ${GridObjName}.init();
    ${GridObjName}.enableEditEvents(true, false, true);

    ##  --- 編集中に登録ボタンが押された場合のチェッカー
    window.editValueChecker = new EditingValueChecker(${GridObjName},'$text.get("DPC1036E",[""])' );

    ${GridObjName}.attachEvent("onEditCell",function(stage,rowId,cellInd,newvalue,oldvalue){

		## --- 編集中に登録ボタンが押された場合のチェック用に値とstageを保持 ---
		window.editValueChecker.saveState(stage,newvalue);

        if(stage == 1){
            editFlg=true;
            setIme(${GridObjName},rowId,cellInd,"inactive",10);
        }
        if(stage == 2){
            if(newvalue.toString() != oldvalue.toString()){
                intCheck(${GridObjName},rowId,cellInd,newvalue);
                minusStyle(${GridObjName},rowId, cellInd);
                doCalcTotalUHP(rowId);
                doCalc(calcColumnIdArr);
            }
        }
        return true;
    });
    ${GridObjName}.attachEvent("onRowSelect",function(rowId,cellInd){
        ${GridObjName}.editCell();
    });
    ${GridObjName}.attachEvent("onKeyPress",function(keycode,ctrl,shift){
        if(!(currentCellMove(${GridObjName},keycode))){return false;}
        copyBlock(${GridObjName}, keycode, ctrl, shift,inputColumnIdArr);
##      if (keycode == 86 && ctrl) {
##          doCalcTotalUHP(-1);
##          doCalc(inputColumnIdArr);
##          editFlg = true;
##      }
        return true;
    });
    ${GridObjName}.attachEvent("onRowPaste", function(rowId){
        var lastRowId = ${GridObjName}.getRowsNum();
        doCalcTotalUHP(rowId);
        doCalc(inputColumnIdArr);
        doCalcTotalUHP(lastRowId);
        editFlg = true;
        return true;
    });
    ${GridObjName}.attachEvent("onXLE",function(){
        #set ($clickRowId = $form.bean.getClickRowId())
        #if ($clickRowId && $clickRowId != "")
            ##行ＩＤが上から順番に採番されていることが前提のコード(行追加がないので、成り立つ前提)
            var rowsNum = ${GridObjName}.getRowsNum();
            if (rowsNum != 'undefined' && rowsNum != null && rowsNum != "" && rowsNum != 0) {
                var showRow = $clickRowId + 14;
                if (showRow >= rowsNum) {
                    showRow = rowsNum;
                }
                ${GridObjName}.showRow(1);
                ${GridObjName}.showRow(showRow);
            }
        #end
    });
}
//--------------------------------------------------------------------------------------------
##UHP合計の計算または初期化
function doCalcTotalUHP(pRowId){
    if (pRowId > -1) {
        var valueUH = ${GridObjName}.cells(pRowId,1).getValue();
        var valueP = ${GridObjName}.cells(pRowId,2).getValue();
        ${GridObjName}.cells(pRowId,3).setValue(doSumTotalUHP(valueUH, valueP));
    } else {
        for (rowId = 1; rowId <= ${GridObjName}.getRowsNum(); rowId++) {
            var valueUH = ${GridObjName}.cells(rowId,1).getValue();
            var valueP = ${GridObjName}.cells(rowId,2).getValue();
            ${GridObjName}.cells(rowId,3).setValue(doSumTotalUHP(valueUH, valueP));
        }
    }
}
##UHP合計の計算または初期化
function doSumTotalUHP(fromValue, toValue){
    var valueUH = String(fromValue);
    var valueP = String(toValue);
    if (valueUH == undefined || valueUH == null || valueUH.toString() == ""){
        valueUH = "0";
    }
    if (valueP == undefined || valueP == null || valueP.toString() == ""){
        valueP = "0";
    }
    var numUH = 0;
    valueUH = valueUH.replace(/,/g,"");
    if(isInteger(valueUH)){
        numUH = Number(valueUH);
    }
    var numP = 0;
    valueP = valueP.replace(/,/g,"");
    if(isInteger(valueP)){
        numP = Number(valueP);
    }
    return numUH + numP;
}
##指定した集計対象列の計算
function doCalc(columnIdArr){
    for(colIndex=0; colIndex<columnIdArr.length; colIndex++){
        setSum(${GridObjName},columnIdArr[colIndex]);
    }
}
## 検索時入力チェック
function searchValidation() {
    ## [必須] 組織
    value = document.dps300C00Form.sosCd3.value;
## mod Start 2022/5/20 R.Yoshida 2022年4月組織変更対応（支店→リージョン、営業所→エリア）
    errorMsg = '$text.get("DPC1024E",["組織","エリア"])';
##    errorMsg = '$text.get("DPC1024E",["組織","営業所"])';
## mod End   2022/5/20 R.Yoshida 2022年4月組織変更対応（支店→リージョン、営業所→エリア）
    addErrorInfo(!isEntered(value), errorMsg);
    ## [必須] カテゴリ
    value = document.getElementById("category").value;
    errorMsg = '$text.get("DPC1003E",["カテゴリ"])';
    addErrorInfo(!isEntered(value), errorMsg);
    return validation();
}
##下書保存、登録時入力チェック
function updateValidation(isDraft) {
    for (rowId = 1; rowId <= ${GridObjName}.getRowsNum(); rowId++) {
        if(${GridObjName}.getUserData(rowId,"rowType") != "input"){
            continue;
        }
        msgHeader = '品目【' + ${GridObjName}.cells(rowId, 0).getValue() + '】の';
        ## 入力値
        valueUH = ${GridObjName}.cells(rowId, 1).getValue().toString();
        valueP = ${GridObjName}.cells(rowId, 2).getValue().toString();
        ##登録時
        if(!isDraft){
            ## 空白行は不許可
            errorMsg = msgHeader + '$text.get("DPC1003E",["$form.bean.headerUh"])';
            addErrorInfo(!isEntered(valueUH), errorMsg);
            errorMsg = msgHeader + '$text.get("DPC1003E",["$form.bean.headerP"])';
            addErrorInfo(!isEntered(valueP), errorMsg);
        }
        if(isEntered(valueUH)){
            amountValidation("$form.bean.headerUh",valueUH,10,true,msgHeader);
        }
        if(isEntered(valueP)){
            amountValidation("$form.bean.headerP",valueP,10,true,msgHeader);
        }
    }
    return validation();
}
##検索処理
function dps300C00F05() {
    if (editFlg) {
        if (!confirm('$text.get("DPC999C99.001","dialogue")')) {
            return false;
        }
    }
    ##入力チェック
    if (!searchValidation()) {
        return;
    }
    var actionPath = '$link.setAction('dps300C00F05')';
    document.dps300C00Form.action = actionPath;
    document.dps300C00Form.submit();
    dps300C00F06 = blockIt;
    dps300C00F10 = blockIt;
    dps300C00F15 = blockIt;
    dps300C00F05 = blockIt;
}
##調整金額再計算処理
function dps300C00F06() {
    if (editFlg) {
        if (!confirm('$text.get("DPC999C99.001","dialogue")')) {
            return false;
        }
    }
    ##入力チェック
    if (!searchValidation()) {
        return;
    }
    var actionPath = '$link.setAction('dps300C00F06')';
    document.dps300C00Form.action = actionPath;
    document.dps300C00Form.submit();
    dps300C00F05 = blockIt;
    dps300C00F10 = blockIt;
    dps300C00F15 = blockIt;
    dps300C00F05 = blockIt;
}
##下書処理
function dps300C00F10() {
    ##入力チェック
    if (!updateValidation(true)) {
        return;
    }
    ##確認
    if (!confirm('$text.get("DPS300C00.001","dialogue")')) {
        return;
    }

    #if($!calcType)
        if (!confirm('$text.get("DPS300C00.003","dialogue")')) {
            return;
        }
    #end

    ##送信データ作成
    for (i = 1; i <= ${GridObjName}.getRowsNum(); i++) {
        var userData = ${GridObjName}.getUserData(i, 'updateRowId');
        if(userData == null){continue;}
        userData += "," + ${GridObjName}.cells(i,1).getValue();
        userData += "," + ${GridObjName}.cells(i,2).getValue();
        ${GridObjName}.setUserData(i, 'updateRowId', userData);
    }
    addRowIdList(document.dps300C00Form, ${GridObjName}, 'rowIdList', 'updateRowId');
    ##送信
    var actionPath = '$link.setAction('dps300C00F10Execute')';
    document.dps300C00Form.action = actionPath;
    document.dps300C00Form.submit();
    dps300C00F05 = blockIt;
    dps300C00F06 = blockIt;
    dps300C00F15 = blockIt;
    dps300C00F10 = blockIt;
}
##登録処理
function dps300C00F15() {
    ## --- 編集中セル値の登録時チェック ---
	if(window.editValueChecker.isValid() == false){
		return;
	}
    ##入力チェック
    if (!updateValidation(false)) {
        return;
    }
    ##確認
    if (!confirm('$text.get("DPS300C00.002","dialogue")')) {
        return;
    }
    ##試算済みの場合の確認
    #if($!calcType)
        if (!confirm('$text.get("DPS300C00.003","dialogue")')) {
            return;
        }
    #end
    ##送信データ作成
    for (i = 1; i <= ${GridObjName}.getRowsNum(); i++) {
        var userData = ${GridObjName}.getUserData(i, 'updateRowId');
        if(userData == null){continue;}
        userData += "," + ${GridObjName}.cells(i,1).getValue();
        userData += "," + ${GridObjName}.cells(i,2).getValue();
        ${GridObjName}.setUserData(i, 'updateRowId', userData);
    }
    addRowIdList(document.dps300C00Form, ${GridObjName}, 'rowIdList', 'updateRowId');
    ##送信
    var actionPath = '$link.setAction('dps300C00F15Execute')';
    document.dps300C00Form.action = actionPath;
    document.dps300C00Form.submit();
    dps300C00F05 = blockIt;
    dps300C00F10 = blockIt;
    dps300C00F15 = blockIt;
}
## 範囲指定コピー
function onKeyPressed(code, ctrl, shift) {
    return copyBlock(${GridObjName}, code, ctrl, shift);
}
##営業所計画-担当者別計画[修正]UHリンク
function O_T_UH(pCd, vCnt, statusForMrPlan) {
    var sosCd = '$!tSosCd';
    var url = "$link.setAction('dps302C03F00')";

    if (statusForMrPlan == 1 || statusForMrPlan == 2 || statusForMrPlan == 3) {
        url = "$link.setAction('dps302C02F00')";
    }
    url = url + '?sosCd3=' + sosCd + '&prodCode=' + pCd + '&insType=1&clickRowId=' + vCnt + '&category=' + document.getElementById('category').value;
    var childWindow = openWindow(url);
    ## 子画面が閉じるまで待機
    var interval = setInterval(function(){
        if(childWindow.closed){
            clearInterval(interval);
            dps300C00F05();
            return false;
        }
    }, 200);
}
##営業所計画-担当者別計画[修正]Pリンク
function O_T_P(pCd, vCnt, statusForMrPlan) {
    var sosCd = '$!tSosCd';
    var url = "$link.setAction('dps302C03F00')";

    if (statusForMrPlan == "1" || statusForMrPlan == "2" || statusForMrPlan == "3") {
        url = "$link.setAction('dps302C02F00')";
    }
    url = url + '?sosCd3=' + sosCd + '&prodCode=' + pCd + '&insType=2&clickRowId=' + vCnt + '&category=' + document.getElementById('category').value;
    var childWindow = openWindow(url);
    ## 子画面が閉じるまで待機
    var interval = setInterval(function(){
        if(childWindow.closed){
            clearInterval(interval);
            dps300C00F05();
            return false;
        }
    }, 200);
}
##担当者別計画-施設医師別計画[修正]リンク
function T_D(pCd) {
    document.choseiForm.action = '$link.setAction("dps000C00F00")';
    document.choseiForm.defFlg.value = "false";
    document.choseiForm.initDispFlg.value = "false";
    document.choseiForm.settingSosCd.value = "$!tSosCd";
    document.choseiForm.settingJgiNo.value = "";
    document.choseiForm.redirectPath.value = "dps601C00F00?prodCode=" + pCd + '&category=' + document.getElementById('category').value;
    document.choseiForm.submit();
    dps300C00F10 = blockIt;
    dps300C00F15 = blockIt;
    dps300C00F05 = blockIt;
    return false;
}
##担当者別計画-施設特約店別計画[修正]リンク
function T_I(pCd) {
    document.choseiForm.action = '$link.setAction("dps000C00F00")';
    document.choseiForm.defFlg.value = "false";
    document.choseiForm.initDispFlg.value = "false";
    document.choseiForm.settingSosCd.value = "$!tSosCd";
    document.choseiForm.settingJgiNo.value = "";
    document.choseiForm.redirectPath.value = "dps401C00F00?prodCode=" + pCd + '&category=' + document.getElementById('category').value;
    document.choseiForm.submit();
    dps300C00F10 = blockIt;
    dps300C00F15 = blockIt;
    dps300C00F05 = blockIt;
    return false;
}
##営業所計画-施設特約店別計画[修正]リンク
function O_I(pCd) {
    document.choseiForm.action = '$link.setAction("dps000C00F00")';
    document.choseiForm.defFlg.value = "false";
    document.choseiForm.initDispFlg.value = "false";
    document.choseiForm.settingSosCd.value = "$!tSosCd";
    document.choseiForm.settingJgiNo.value = "";
    document.choseiForm.redirectPath.value = "dps401C00F00?prodCode=" + pCd + '&category=' + document.getElementById('category').value;
    document.choseiForm.submit();
    dps300C00F10 = blockIt;
    dps300C00F15 = blockIt;
    dps300C00F05 = blockIt;
    return false;
}

## 組織・従業員選択後の処理
function changeSos(sosCd, jgiNo, sosMaxSrchGetValue, etcSosFlg) {
	let memorizer = new CategoryAndProdCodeMemorizerForDps();

	sosApply(sosCd, jgiNo, sosMaxSrchGetValue, etcSosFlg);
	changeCategory();
    memorizer.undoCategoryCodeValue();
}

## カテゴリリストの変更処理
## 組織・担当者を変更した時
function changeCategory() {
	var form = document.dps300C00Form;
	## 選択した組織のカテゴリ
    var sosCategoryAry = document.getElementById('sosCategory').value.split(',');

    ## 組織コードの取得
    var sosCd;
    if(isEntered(form.sosCd3.value)){
      sosCd = form.sosCd3.value;
    } else {
      sosCd = null;
    }

    ## 計画対象カテゴリ領域より、立案レベルを条件にカテゴリを取得
    var planLvCtgList = [];
    if (isEntered(form.sosCd3.value)) {
      planLvCtgList = [
                      #foreach($val in $service.getDpsCategoryByPlanLevel($form.getField("DPS300C00_PLANLEVEL_OFFICE")))
                      , '$val'
                      #end
                      ];
    }

	## 選択した組織のカテゴリは、このタイミングでvelocityで取得できないので、カテゴリを一旦全て取得
    var categoryList = [
                      #foreach($codeAndValue in $service.getDpsCategoryPlanList(null, '1', false))
                      , { text: '$codeAndValue.value', value: '$codeAndValue.code' }
                      #end
                     ];

    ## カテゴリのselectbox
	var prodCategory = document.getElementsByName('category')[0];
	## 一旦selectboxのoptionを削除
	while(category.lastChild)
	{
		category.removeChild(category.lastChild);
	}

	## optionを作成
	var option;
	document.createElement('option');

	## 組織選択時
	## 選択した組織のカテゴリのみ残す
    for (var i = 1; i < categoryList.length; i++){
    	for(var j = 0; j < sosCategoryAry.length; j++) {
    		if (categoryList[i].value == sosCategoryAry[j] && planLvCtgList.includes(categoryList[i].value)) {
				option = document.createElement('option');
				option.setAttribute('value', categoryList[i].value);
				option.innerHTML = categoryList[i].text;
    			prodCategory.appendChild(option);
    		}
		}
    }
}

//-->
</script>
#tabbar("sienSosiki", "dps300C00F00")
<div id="tabBox">
<form name="dps300C00Form" method="post">
    <div align="left" style="float: left;width: 50%;">
    <table class="gridLine" cellspacing="0" cellpadding="1">
        <tr>
            <td class="gridIndex" style="width:150px;">組織*</td>
            <td colspan="2">#sosDialogExt2("changeSos","01", "02", "02", "DPS300")</td>
        </tr>
        <tr>
            <td class="gridIndex" style="width:150px;">カテゴリ*</td>
            <td>
            <table  cellspacing="0" cellpadding="0">
                <tr>
                    <td>#select ("category",  $!form.bean.prodCategoryList, $!form.bean.category)</td>
                    <td><input type="button" value="検索" style="width:80px;" onclick="dps300C00F05()" /></td>
                </tr>
            </table>
            </td>
        </tr>
    </table>
    </div>
    <div class="label" align="right" style="float: right;width: 50%;">
        #if($dataList && $dataList.size() > 0)
        #upDateInfo($!{dataList.get(0).getUpUser()},$!{dataList.get(0).getUpDate()})
        #end
    </div>
    <div align="left" style="float: left;width: 100%;">
    <table style="margin-top:4px; width: 100%;">
        <tr>
            #if ($!security.hasAuthEdit("DPS300") && $enableEdit)
                #if ($!form.bean.existSearchDataFlag)
                <td style="width:80px;"><input type="button" value="下書保存する" style="width:80px;"  onclick="dps300C00F10()" /></td>
                <td style="width:80px;"><input type="button" value="登録する" style="width:80px;"  onclick="dps300C00F15()" /></td>
                <td style="width:120px;"><input type="button" value="調整金額再計算" onclick="dps300C00F06()" /></td>
                <td class="label" style="text-align:left; vertical-align:bottom">&nbsp;&nbsp;調整金額更新日時：#if($choseiUpdate) $!{format.toString(${choseiUpdate},"yyyy/MM/dd HH:mm:ss")} #else － #end</td>
                #else
                <td style="width:80px;"><input type="button" value="下書保存する" style="width:80px;"  onclick="dps300C00F10" disabled/></td>
                <td style="width:80px;"><input type="button" value="登録する" style="width:80px;"  onclick="dps300C00F15" disabled/></td>
                <td style="width:120px;"><input type="button" value="調整金額再計算" disabled/></td>
                #end
            #end

            #if($form.bean.category == "$vaccineCode")
                <td class="label" style="text-align:right;vertical-align:bottom;">$consts.tableHeaderB</td>
            #else
                <td class="label" style="text-align:right;vertical-align:bottom;">$consts.tableHeaderY</td>
            #end
        </tr>
    </table>
    </div>
    ##loadingGridDiv2("${GridObjName}", "${CoverId}", "")
    #loadingGridDiv4("${GridObjName}", "${CoverId}", "width: 99.5%; clear: both;")
    <div class="guide">
    ※UHおよびPは、千円単位で入力してください。<br>
## mod Start 2022/5/16 R.Yoshida 2022年4月組織変更対応（支店→リージョン、営業所→エリア）
    ※試算実行後にエリア計画を編集した場合は、再試算を実行してください。
##    ※試算実行後に営業所計画を編集した場合は、再試算を実行してください。
## mod End   2022/5/16 R.Yoshida 2022年4月組織変更対応（支店→リージョン、営業所→エリア）
    </div>
    #token()
    <input type="hidden" name="category" value="$!form.bean.category">
</form>
<form name="choseiForm" method="post">
<input type="hidden" name="defFlg" id="defFlg" />
<input type="hidden" name="initDispFlg" id="initDispFlg" />
<input type="hidden" name="settingSosCd" id="settingSosCd" />
<input type="hidden" name="settingJgiNo" id="settingJgiNo" />
<input type="hidden" name="redirectPath" id="redirectPath" />
</form>
</div>
